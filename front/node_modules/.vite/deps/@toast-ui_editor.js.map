{
  "version": 3,
  "sources": ["../../orderedmap/dist/index.js", "../../prosemirror-model/dist/index.js", "../../prosemirror-transform/dist/index.js", "../../prosemirror-state/dist/index.js", "../../prosemirror-view/dist/index.js", "../../w3c-keyname/index.es.js", "../../prosemirror-keymap/dist/index.js", "../../prosemirror-commands/dist/index.js", "../../prosemirror-inputrules/dist/index.js", "../../rope-sequence/dist/index.es.js", "../../prosemirror-history/dist/index.js", "../../@toast-ui/editor/dist/esm/index.js"],
  "sourcesContent": ["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () → Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n", "import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", separated = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            if (node.isText) {\n                text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n                separated = !blockSeparator;\n            }\n            else if (node.isLeaf) {\n                if (leafText) {\n                    text += typeof leafText === \"function\" ? leafText(node) : leafText;\n                }\n                else if (node.type.spec.leafText) {\n                    text += node.type.spec.leafText(node);\n                }\n                separated = !blockSeparator;\n            }\n            else if (!separated && node.isBlock) {\n                text += blockSeparator;\n                separated = true;\n            }\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. (Not public.)\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        return type.create(json.attrs);\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        for (let i = 0; i < resolveCache.length; i++) {\n            let cached = resolveCache[i];\n            if (cached.pos == pos && cached.doc == doc)\n                return cached;\n        }\n        let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n        resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n        return result;\n    }\n}\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    parent-relative position, its parent node, and its child index.\n    When the callback returns false for a given node, that node's\n    children will not be recursed over. The last parameter can be\n    used to specify a starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise error when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++)\n            copy = this.marks[i].addToSet(copy);\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = null;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        return schema.nodeType(json.type).create(json.attrs, content, marks);\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.groups.indexOf(name) > -1)\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n/**\nConstruct an NFA from an expression as returned by the parser. The\nNFA is represented as an array of states, which are themselves\narrays of edges, which are `{term, to}` objects. The first state is\nthe entry state and the last node is the success state.\n\nNote that unlike typical NFAs, the edge ordering in this one is\nsignificant, in that it is used to contruct filler content when\nnecessary.\n*/\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction initAttrs(attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type with the given attributes.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        rules.forEach(rule => {\n            if (rule.tag)\n                this.tags.push(rule);\n            else if (rule.style)\n                this.styles.push(rule);\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, \n    // Marks applied to this node itself\n    marks, \n    // Marks that can't apply here, but will be used in children if possible\n    pendingMarks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.pendingMarks = pendingMarks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        // Nested Marks with same type\n        this.stashMarks = [];\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    popFromStashMark(mark) {\n        for (let i = this.stashMarks.length - 1; i >= 0; i--)\n            if (mark.eq(this.stashMarks[i]))\n                return this.stashMarks.splice(i, 1)[0];\n    }\n    applyPending(nextType) {\n        for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n            let mark = pending[i];\n            if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n                !mark.isInSet(this.activeMarks)) {\n                this.activeMarks = mark.addToSet(this.activeMarks);\n                this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n            }\n        }\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom) {\n        if (dom.nodeType == 3) {\n            this.addTextNode(dom);\n        }\n        else if (dom.nodeType == 1) {\n            let style = dom.getAttribute(\"style\");\n            if (!style) {\n                this.addElement(dom);\n            }\n            else {\n                let marks = this.readStyles(parseStyles(style));\n                if (!marks)\n                    return; // A style with ignore: true\n                let [addMarks, removeMarks] = marks, top = this.top;\n                for (let i = 0; i < removeMarks.length; i++)\n                    this.removePendingMark(removeMarks[i], top);\n                for (let i = 0; i < addMarks.length; i++)\n                    this.addPendingMark(addMarks[i]);\n                this.addElement(dom);\n                for (let i = 0; i < addMarks.length; i++)\n                    this.removePendingMark(addMarks[i], top);\n                for (let i = 0; i < removeMarks.length; i++)\n                    this.addPendingMark(removeMarks[i]);\n            }\n        }\n    }\n    addTextNode(dom) {\n        let value = dom.nodeValue;\n        let top = this.top;\n        if (top.options & OPT_PRESERVE_WS_FULL ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!(top.options & OPT_PRESERVE_WS)) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, matchAfter) {\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, top = this.top, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom);\n                return;\n            }\n            this.addAll(dom);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : undefined);\n        }\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"));\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"));\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an array of marks, or null to indicate some of the styles\n    // had a rule with `ignore` set.\n    readStyles(styles) {\n        let add = Mark.none, remove = Mark.none;\n        style: for (let i = 0; i < styles.length; i += 2) {\n            for (let after = undefined;;) {\n                let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n                if (!rule)\n                    continue style;\n                if (rule.ignore)\n                    return null;\n                if (rule.clearMark) {\n                    this.top.pendingMarks.forEach(m => {\n                        if (rule.clearMark(m))\n                            remove = m.addToSet(remove);\n                    });\n                }\n                else {\n                    add = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(add);\n                }\n                if (rule.consuming === false)\n                    after = rule;\n                else\n                    break;\n            }\n        }\n        return [add, remove];\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, continueAfter) {\n        let sync, nodeType, mark;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                sync = this.enter(nodeType, rule.attrs || null, rule.preserveWhitespace);\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs))) {\n                this.leafFallback(dom);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            mark = markType.create(rule.attrs);\n            this.addPendingMark(mark);\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n        if (mark)\n            this.removePendingMark(mark, startIn);\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return false;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            this.enterInner(route[i], null, false);\n        return true;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                this.enterInner(block);\n        }\n        if (this.findPlace(node)) {\n            this.closeExtra();\n            let top = this.top;\n            top.applyPending(node.type);\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let marks = top.activeMarks;\n            for (let i = 0; i < node.marks.length; i++)\n                if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n                    marks = node.marks[i].addToSet(marks);\n            top.content.push(node.mark(marks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, preserveWS) {\n        let ok = this.findPlace(type.create(attrs));\n        if (ok)\n            this.enterInner(type, attrs, true, preserveWS);\n        return ok;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs = null, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.applyPending(type);\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n        this.open++;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--)\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n    addPendingMark(mark) {\n        let found = findSameMarkInSet(mark, this.top.pendingMarks);\n        if (found)\n            this.top.stashMarks.push(found);\n        this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n    }\n    removePendingMark(mark, upto) {\n        for (let depth = this.open; depth >= 0; depth--) {\n            let level = this.nodes[depth];\n            let found = level.pendingMarks.lastIndexOf(mark);\n            if (found > -1) {\n                level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n            }\n            else {\n                level.activeMarks = mark.removeFromSet(level.activeMarks);\n                let stashMark = level.popFromStashMark(mark);\n                if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n                    level.activeMarks = stashMark.addToSet(level.activeMarks);\n            }\n            if (level == upto)\n                break;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n    let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n    while (m = re.exec(style))\n        result.push(m[1], m[2].trim());\n    return result;\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\nfunction findSameMarkInSet(mark, set) {\n    for (let i = 0; i < set.length; i++) {\n        if (mark.eq(set[i]))\n            return set[i];\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline));\n    }\n    /**\n    Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If\n    the spec has a hole (zero) in it, `contentDOM` will point at the\n    node with the hole.\n    */\n    static renderSpec(doc, structure, xmlNS = null) {\n        if (typeof structure == \"string\")\n            return { dom: doc.createTextNode(structure) };\n        if (structure.nodeType != null)\n            return { dom: structure };\n        if (structure.dom && structure.dom.nodeType != null)\n            return structure;\n        let tagName = structure[0], space = tagName.indexOf(\" \");\n        if (space > 0) {\n            xmlNS = tagName.slice(0, space);\n            tagName = tagName.slice(space + 1);\n        }\n        let contentDOM;\n        let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n        let attrs = structure[1], start = 1;\n        if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n            start = 2;\n            for (let name in attrs)\n                if (attrs[name] != null) {\n                    let space = name.indexOf(\" \");\n                    if (space > 0)\n                        dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                    else\n                        dom.setAttribute(name, attrs[name]);\n                }\n        }\n        for (let i = start; i < structure.length; i++) {\n            let child = structure[i];\n            if (child === 0) {\n                if (i < structure.length - 1 || i > start)\n                    throw new RangeError(\"Content hole must be the only child of its parent node\");\n                return { dom, contentDOM: dom };\n            }\n            else {\n                let { dom: inner, contentDOM: innerContent } = DOMSerializer.renderSpec(doc, child, xmlNS);\n                dom.appendChild(inner);\n                if (innerContent) {\n                    if (contentDOM)\n                        throw new RangeError(\"Multiple content holes\");\n                    contentDOM = innerContent;\n                }\n            }\n        }\n        return { dom, contentDOM };\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n", "import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch) {\n    let node = tr.doc.nodeAt(pos);\n    let delSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            delSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = delSteps.length - 1; i >= 0; i--)\n        tr.step(delSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            tr.clearIncompatible(tr.mapping.slice(mapFrom).map(pos, 1), type);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n            return false;\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (after != node)\n            rest = rest.replaceChild(0, after.type.create(after.attrs));\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && a.canAppend(b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let type = leftNodes[d].type, def = definesContent(type);\n        if (def && $from.node(preferredTargetIndex).type != type)\n            preferredDepth = d;\n        else if (def || !type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n", "import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata properties:\nit will attach a property `\"pointer\"` with the value `true` to\nselection transactions directly caused by mouse or touch input, and\na `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n", "import { TextSelection, NodeSelection, Selection, AllSelection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                return { node: pos.offsetNode, offset: pos.offset };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: range.startOffset };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop)\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent && !sawBlock || !desc.contentDOM)) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (desc.node.isBlock && desc.parent && !sawBlock) {\n                sawBlock = true;\n                if (rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n            }\n            if (!desc.contentDOM && outsideBlock < 0) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM || undefined };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            ({ dom, contentDOM } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let sel = view.domSelectionRange();\n        let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.removeAttribute(\"draggable\");\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.top.children[this.index] = updated;\n                    updated.dirty = CONTENT_DIRTY;\n                    updated.updateChildren(view, pos + 1);\n                    updated.dirty = NOT_DIRTY;\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (!wrapper.contentDOM)\n            return null;\n        wrapper.children = next.children;\n        next.children = [];\n        for (let ch of wrapper.children)\n            ch.parent = wrapper;\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let widget = locals[decoIndex++], widgets;\n            while (decoIndex < locals.length && locals[decoIndex].to == offset)\n                (widgets || (widgets = [widget])).push(locals[decoIndex++]);\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\nfunction nearbyTextNode(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n                return node.childNodes[offset];\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setEnd(node.parentNode, domIndex(node) + 1);\n    else\n        range.setEnd(node, 0);\n    range.collapse(false);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (!sel.empty || mods.indexOf(\"s\") > -1) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset]))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction setSelFocus(view, node, offset) {\n    let sel = view.domSelection();\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 46 || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesAfter(view);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = html;\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$from;\n        if (state.selection.empty &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        view.domSelection().collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (forceUpdate || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, view.input.shiftKey, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, view.input.shiftKey, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, view.input.shiftKey)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), view.input.shiftKey, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move) {\n        this.slice = slice;\n        this.move = move;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)));\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)));\n    }\n    let slice = view.state.selection.content(), { dom, text } = serializeForClipboard(view, slice);\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier]);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, event.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move)\n        tr.deleteSelection();\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Needs access to the current document to\n    create the appropriate tree structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    /**\n    @internal\n    */\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (newStart >= offset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.observer ? this.observer.takeRecords() : [];\n        if (this.queue.length) {\n            mutations = this.queue.concat(mutations);\n            this.queue.length = 0;\n        }\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length > 1) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let a = brs[0], b = brs[1];\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++)\n                added.push(mut.addedNodes[i]);\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view) {\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (view.composing)\n                tr.setMeta(\"composition\", view.input.compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (view.composing)\n                        tr.setMeta(\"composition\", view.input.compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Chrome sometimes leaves the cursor before the inserted text when\n    // composing after a cursor wrapper. This moves it forward.\n    if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from &&\n        parse.sel.head == parse.sel.anchor) {\n        let size = change.endB - change.start;\n        parse.sel = { anchor: parse.sel.anchor + size, head: parse.sel.anchor + size };\n    }\n    view.input.domChangeCount++;\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    if (view.composing)\n        tr.setMeta(\"composition\", view.input.compositionID);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n    if (!$newStart.parent.isTextblock ||\n        // The content must have shrunk\n        end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco([]);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        return safari && this.root.nodeType === 11 && deepActiveElement(this.dom.ownerDocument) == this.dom\n            ? safariShadowSelectionRange(this) : this.domSelection();\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.head, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n", "export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = mac || chrome && +chrome[1] < 57\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    ie && event.shiftKey && event.key && event.key.length == 1 ||\n    event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n", "import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n", "import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                    : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.parent.isBlock)\n            return false;\n        if (dispatch) {\n            let atEnd = $to.parentOffset == $to.parent.content.size;\n            let tr = state.tr;\n            if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n                tr.deleteSelection();\n            let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n            let splitType = splitNode && splitNode($to.parent, atEnd);\n            let types = splitType ? [splitType] : atEnd && deflt ? [{ type: deflt }] : undefined;\n            let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n            if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n                if (deflt)\n                    types = [{ type: deflt }];\n                can = true;\n            }\n            if (can) {\n                tr.split(tr.mapping.map($from.pos), 1, types);\n                if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n                    let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n                    if (deflt && $from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr\n            .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n            .join($pos.pos)\n            .scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    if (before.type.spec.isolating || after.type.spec.isolating)\n        return false;\n    if (joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let joinAt = end + 2 * conn.length;\n            if (canJoin(tr.doc, joinAt))\n                tr.join(joinAt);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, node => {\n            if (can)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null) {\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let has = false, tr = state.tr;\n                for (let i = 0; !has && i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (has) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n", "import { Plugin } from 'prosemirror-state';\nimport { findWrapping, canJoin } from 'prosemirror-transform';\n\n/**\nInput rules are regular expressions describing a piece of text\nthat, when typed, causes something to happen. This might be\nchanging two dashes into an emdash, wrapping a paragraph starting\nwith `\"> \"` into a blockquote, or something entirely different.\n*/\nclass InputRule {\n    // :: (RegExp, union<string, (state: EditorState, match: [string], start: number, end: number) → ?Transaction>)\n    /**\n    Create an input rule. The rule applies when the user typed\n    something and the text directly in front of the cursor matches\n    `match`, which should end with `$`.\n    \n    The `handler` can be a string, in which case the matched text, or\n    the first matched group in the regexp, is replaced by that\n    string.\n    \n    Or a it can be a function, which will be called with the match\n    array produced by\n    [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n    as well as the start and end of the matched range, and which can\n    return a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) that describes the\n    rule's effect, or null to indicate the input was not handled.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    match, handler) {\n        this.match = match;\n        this.match = match;\n        this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler;\n    }\n}\nfunction stringHandler(string) {\n    return function (state, match, start, end) {\n        let insert = string;\n        if (match[1]) {\n            let offset = match[0].lastIndexOf(match[1]);\n            insert += match[0].slice(offset + match[1].length);\n            start += offset;\n            let cutOff = start - end;\n            if (cutOff > 0) {\n                insert = match[0].slice(offset - cutOff, offset) + insert;\n                start = end;\n            }\n        }\n        return state.tr.insertText(insert, start, end);\n    };\n}\nconst MAX_MATCH = 500;\n/**\nCreate an input rules plugin. When enabled, it will cause text\ninput that matches any of the given rules to trigger the rule's\naction.\n*/\nfunction inputRules({ rules }) {\n    let plugin = new Plugin({\n        state: {\n            init() { return null; },\n            apply(tr, prev) {\n                let stored = tr.getMeta(this);\n                if (stored)\n                    return stored;\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            }\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run(view, from, to, text, rules, plugin);\n            },\n            handleDOMEvents: {\n                compositionend: (view) => {\n                    setTimeout(() => {\n                        let { $cursor } = view.state.selection;\n                        if ($cursor)\n                            run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin);\n                    });\n                }\n            }\n        },\n        isInputRules: true\n    });\n    return plugin;\n}\nfunction run(view, from, to, text, rules, plugin) {\n    if (view.composing)\n        return false;\n    let state = view.state, $from = state.doc.resolve(from);\n    if ($from.parent.type.spec.code)\n        return false;\n    let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset, null, \"\\ufffc\") + text;\n    for (let i = 0; i < rules.length; i++) {\n        let match = rules[i].match.exec(textBefore);\n        let tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to);\n        if (!tr)\n            continue;\n        view.dispatch(tr.setMeta(plugin, { transform: tr, from, to, text }));\n        return true;\n    }\n    return false;\n}\n/**\nThis is a command that will undo an input rule, if applying such a\nrule was the last thing that the user did.\n*/\nconst undoInputRule = (state, dispatch) => {\n    let plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i++) {\n        let plugin = plugins[i], undoable;\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                let tr = state.tr, toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j--)\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                if (undoable.text) {\n                    let marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n                dispatch(tr);\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\nConverts double dashes to an emdash.\n*/\nconst emDash = new InputRule(/--$/, \"—\");\n/**\nConverts three dots to an ellipsis character.\n*/\nconst ellipsis = new InputRule(/\\.\\.\\.$/, \"…\");\n/**\n“Smart” opening double quotes.\n*/\nconst openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\");\n/**\n“Smart” closing double quotes.\n*/\nconst closeDoubleQuote = new InputRule(/\"$/, \"”\");\n/**\n“Smart” opening single quotes.\n*/\nconst openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\");\n/**\n“Smart” closing single quotes.\n*/\nconst closeSingleQuote = new InputRule(/'$/, \"’\");\n/**\nSmart-quote related input rules.\n*/\nconst smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote];\n\n/**\nBuild an input rule for automatically wrapping a textblock when a\ngiven string is typed. The `regexp` argument is\ndirectly passed through to the `InputRule` constructor. You'll\nprobably want the regexp to start with `^`, so that the pattern can\nonly occur at the start of a textblock.\n\n`nodeType` is the type of node to wrap in. If it needs attributes,\nyou can either pass them directly, or pass a function that will\ncompute them from the regular expression match.\n\nBy default, if there's a node with the same type above the newly\nwrapped node, the rule will try to [join](https://prosemirror.net/docs/ref/#transform.Transform.join) those\ntwo nodes. You can pass a join predicate, which takes a regular\nexpression match and the node before the wrapped node, and can\nreturn a boolean to indicate whether a join should happen.\n*/\nfunction wrappingInputRule(regexp, nodeType, getAttrs = null, joinPredicate) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        let tr = state.tr.delete(start, end);\n        let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return null;\n        tr.wrap(range, wrapping);\n        let before = tr.doc.resolve(start - 1).nodeBefore;\n        if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n            (!joinPredicate || joinPredicate(match, before)))\n            tr.join(start - 1);\n        return tr;\n    });\n}\n/**\nBuild an input rule that changes the type of a textblock when the\nmatched text is typed into it. You'll usually want to start your\nregexp with `^` to that it is only matched at the start of a\ntextblock. The optional `getAttrs` parameter can be used to compute\nthe new node's attributes, and works the same as in the\n`wrappingInputRule` function.\n*/\nfunction textblockTypeInputRule(regexp, nodeType, getAttrs = null) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let $start = state.doc.resolve(start);\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType))\n            return null;\n        return state.tr\n            .delete(start, end)\n            .setBlockType(start, start, nodeType, attrs);\n    });\n}\n\nexport { InputRule, closeDoubleQuote, closeSingleQuote, ellipsis, emDash, inputRules, openDoubleQuote, openSingleQuote, smartQuotes, textblockTypeInputRule, undoInputRule, wrappingInputRule };\n", "var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n", "import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(map) {\n    let result = [];\n    map.forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    dispatch(pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist }).scrollIntoView());\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.done.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, false);\n    return true;\n};\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.undone.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, true);\n    return true;\n};\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, undo, undoDepth };\n", "/**\n * @toast-ui/editor\n * @version 3.2.2 | Fri Feb 17 2023\n * @author NHN Cloud FE Development Lab <dl_javascript@nhn.com>\n * @license MIT\n */\n\nimport { Fragment, Schema, Slice, NodeRange, Mark as Mark$1, DOMParser, Node as Node$3 } from 'prosemirror-model';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport { ReplaceAroundStep, liftTarget, canSplit, StepMap } from 'prosemirror-transform';\nimport { TextSelection, Plugin, PluginKey, EditorState, AllSelection, Selection, SelectionRange, NodeSelection } from 'prosemirror-state';\nimport { keymap } from 'prosemirror-keymap';\nimport { deleteSelection, selectAll, baseKeymap, chainCommands, joinForward, newlineInCode, setBlockType, wrapIn, toggleMark as toggleMark$1, exitCode } from 'prosemirror-commands';\nimport { InputRule, inputRules, undoInputRule } from 'prosemirror-inputrules';\nimport { undo, redo, history, undoDepth } from 'prosemirror-history';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics$1 = function(d, b) {\r\n    extendStatics$1 = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics$1(d, b);\r\n};\r\n\r\nfunction __extends$1(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics$1(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign$1 = function() {\r\n    __assign$1 = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray$1(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\n\n/**\n * @fileoverview Execute the provided callback once for each property of object which actually exist.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Execute the provided callback once for each property of object which actually exist.\n * If the callback function returns false, the loop will be stopped.\n * Callback function(iteratee) is invoked with three arguments:\n *  1) The value of the property\n *  2) The name of the property\n *  3) The object being traversed\n * @param {Object} obj The object that will be traversed\n * @param {function} iteratee  Callback function\n * @param {Object} [context] Context(this) of callback function\n * @memberof module:collection\n * @example\n * // ES6\n * import forEachOwnProperties from 'tui-code-snippet/collection/forEachOwnProperties';\n * \n * // CommonJS\n * const forEachOwnProperties = require('tui-code-snippet/collection/forEachOwnProperties'); \n *\n * let sum = 0;\n *\n * forEachOwnProperties({a:1,b:2,c:3}, function(value){\n *   sum += value;\n * });\n * alert(sum); // 6\n */\nfunction forEachOwnProperties$2(obj, iteratee, context) {\n  var key;\n\n  context = context || null;\n\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (iteratee.call(context, obj[key], key, obj) === false) {\n        break;\n      }\n    }\n  }\n}\n\nvar forEachOwnProperties_1 = forEachOwnProperties$2;\n\n/**\n * @fileoverview Extend the target object from other objects.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * @module object\n */\n\n/**\n * Extend the target object from other objects.\n * @param {object} target - Object that will be extended\n * @param {...object} objects - Objects as sources\n * @returns {object} Extended object\n * @memberof module:object\n */\nfunction extend(target, objects) { // eslint-disable-line no-unused-vars\n  var hasOwnProp = Object.prototype.hasOwnProperty;\n  var source, prop, i, len;\n\n  for (i = 1, len = arguments.length; i < len; i += 1) {\n    source = arguments[i];\n    for (prop in source) {\n      if (hasOwnProp.call(source, prop)) {\n        target[prop] = source[prop];\n      }\n    }\n  }\n\n  return target;\n}\n\nvar extend_1 = extend;\n\n/**\n * @fileoverview Check whether the given variable is a string or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is a string or not.\n * If the given variable is a string, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is string?\n * @memberof module:type\n */\nfunction isString$3(obj) {\n  return typeof obj === 'string' || obj instanceof String;\n}\n\nvar isString_1 = isString$3;\n\n/**\n * @fileoverview Check whether the given variable is an instance of Array or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is an instance of Array or not.\n * If the given variable is an instance of Array, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is array instance?\n * @memberof module:type\n */\nfunction isArray$3(obj) {\n  return obj instanceof Array;\n}\n\nvar isArray_1 = isArray$3;\n\n/**\n * @fileoverview Execute the provided callback once for each element present in the array(or Array-like object) in ascending order.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Execute the provided callback once for each element present\n * in the array(or Array-like object) in ascending order.\n * If the callback function returns false, the loop will be stopped.\n * Callback function(iteratee) is invoked with three arguments:\n *  1) The value of the element\n *  2) The index of the element\n *  3) The array(or Array-like object) being traversed\n * @param {Array|Arguments|NodeList} arr The array(or Array-like object) that will be traversed\n * @param {function} iteratee Callback function\n * @param {Object} [context] Context(this) of callback function\n * @memberof module:collection\n * @example\n * // ES6\n * import forEachArray from 'tui-code-snippet/collection/forEachArray';\n * \n * // CommonJS\n * const forEachArray = require('tui-code-snippet/collection/forEachArray'); \n *\n * let sum = 0;\n *\n * forEachArray([1,2,3], function(value){\n *   sum += value;\n * });\n * alert(sum); // 6\n */\nfunction forEachArray$3(arr, iteratee, context) {\n  var index = 0;\n  var len = arr.length;\n\n  context = context || null;\n\n  for (; index < len; index += 1) {\n    if (iteratee.call(context, arr[index], index, arr) === false) {\n      break;\n    }\n  }\n}\n\nvar forEachArray_1 = forEachArray$3;\n\n/**\n * @fileoverview Execute the provided callback once for each property of object(or element of array) which actually exist.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isArray$2 = isArray_1;\nvar forEachArray$2 = forEachArray_1;\nvar forEachOwnProperties$1 = forEachOwnProperties_1;\n\n/**\n * @module collection\n */\n\n/**\n * Execute the provided callback once for each property of object(or element of array) which actually exist.\n * If the object is Array-like object(ex-arguments object), It needs to transform to Array.(see 'ex2' of example).\n * If the callback function returns false, the loop will be stopped.\n * Callback function(iteratee) is invoked with three arguments:\n *  1) The value of the property(or The value of the element)\n *  2) The name of the property(or The index of the element)\n *  3) The object being traversed\n * @param {Object} obj The object that will be traversed\n * @param {function} iteratee Callback function\n * @param {Object} [context] Context(this) of callback function\n * @memberof module:collection\n * @example\n * // ES6\n * import forEach from 'tui-code-snippet/collection/forEach'; \n * \n * // CommonJS\n * const forEach = require('tui-code-snippet/collection/forEach'); \n *\n * let sum = 0;\n *\n * forEach([1,2,3], function(value){\n *   sum += value;\n * });\n * alert(sum); // 6\n *\n * // In case of Array-like object\n * const array = Array.prototype.slice.call(arrayLike); // change to array\n * forEach(array, function(value){\n *   sum += value;\n * });\n */\nfunction forEach$4(obj, iteratee, context) {\n  if (isArray$2(obj)) {\n    forEachArray$2(obj, iteratee, context);\n  } else {\n    forEachOwnProperties$1(obj, iteratee, context);\n  }\n}\n\nvar forEach_1 = forEach$4;\n\n/**\n * @fileoverview Setting element style\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isString$2 = isString_1;\nvar forEach$3 = forEach_1;\n\n/**\n * Setting element style\n * @param {(HTMLElement|SVGElement)} element - element to setting style\n * @param {(string|object)} key - style prop name or {prop: value} pair object\n * @param {string} [value] - style value\n * @memberof module:domUtil\n */\nfunction css(element, key, value) {\n  var style = element.style;\n\n  if (isString$2(key)) {\n    style[key] = value;\n\n    return;\n  }\n\n  forEach$3(key, function(v, k) {\n    style[k] = v;\n  });\n}\n\nvar css_1 = css;\n\n/* eslint-disable complexity */\n\nvar isArray$1 = isArray_1;\n\n/**\n * @module array\n */\n\n/**\n * Returns the first index at which a given element can be found in the array\n * from start index(default 0), or -1 if it is not present.\n * It compares searchElement to elements of the Array using strict equality\n * (the same method used by the ===, or triple-equals, operator).\n * @param {*} searchElement Element to locate in the array\n * @param {Array} array Array that will be traversed.\n * @param {number} startIndex Start index in array for searching (default 0)\n * @returns {number} the First index at which a given element, or -1 if it is not present\n * @memberof module:array\n * @example\n * // ES6\n * import inArray from 'tui-code-snippet/array/inArray';\n * \n * // CommonJS\n * const inArray = require('tui-code-snippet/array/inArray');\n *\n * const arr = ['one', 'two', 'three', 'four'];\n * const idx1 = inArray('one', arr, 3); // -1\n * const idx2 = inArray('one', arr); // 0\n */\nfunction inArray$4(searchElement, array, startIndex) {\n  var i;\n  var length;\n  startIndex = startIndex || 0;\n\n  if (!isArray$1(array)) {\n    return -1;\n  }\n\n  if (Array.prototype.indexOf) {\n    return Array.prototype.indexOf.call(array, searchElement, startIndex);\n  }\n\n  length = array.length;\n  for (i = startIndex; startIndex >= 0 && i < length; i += 1) {\n    if (array[i] === searchElement) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar inArray_1 = inArray$4;\n\n/**\n * @fileoverview Check whether the given variable is undefined or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is undefined or not.\n * If the given variable is undefined, returns true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is undefined?\n * @memberof module:type\n */\nfunction isUndefined$4(obj) {\n  return obj === undefined; // eslint-disable-line no-undefined\n}\n\nvar isUndefined_1 = isUndefined$4;\n\n/**\n * @fileoverview Get HTML element's design classes.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isUndefined$3 = isUndefined_1;\n\n/**\n * Get HTML element's design classes.\n * @param {(HTMLElement|SVGElement)} element target element\n * @returns {string} element css class name\n * @memberof module:domUtil\n */\nfunction getClass$3(element) {\n  if (!element || !element.className) {\n    return '';\n  }\n\n  if (isUndefined$3(element.className.baseVal)) {\n    return element.className;\n  }\n\n  return element.className.baseVal;\n}\n\nvar getClass_1 = getClass$3;\n\n/**\n * @fileoverview Set className value\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isArray = isArray_1;\nvar isUndefined$2 = isUndefined_1;\n\n/**\n * Set className value\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {(string|string[])} cssClass - class names\n * @private\n */\nfunction setClassName$2(element, cssClass) {\n  cssClass = isArray(cssClass) ? cssClass.join(' ') : cssClass;\n\n  cssClass = cssClass.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n  if (isUndefined$2(element.className.baseVal)) {\n    element.className = cssClass;\n\n    return;\n  }\n\n  element.className.baseVal = cssClass;\n}\n\nvar _setClassName = setClassName$2;\n\n/**\n * @fileoverview Add css class to element\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar forEach$2 = forEach_1;\nvar inArray$3 = inArray_1;\nvar getClass$2 = getClass_1;\nvar setClassName$1 = _setClassName;\n\n/**\n * domUtil module\n * @module domUtil\n */\n\n/**\n * Add css class to element\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {...string} cssClass - css classes to add\n * @memberof module:domUtil\n */\nfunction addClass(element) {\n  var cssClass = Array.prototype.slice.call(arguments, 1);\n  var classList = element.classList;\n  var newClass = [];\n  var origin;\n\n  if (classList) {\n    forEach$2(cssClass, function(name) {\n      element.classList.add(name);\n    });\n\n    return;\n  }\n\n  origin = getClass$2(element);\n\n  if (origin) {\n    cssClass = [].concat(origin.split(/\\s+/), cssClass);\n  }\n\n  forEach$2(cssClass, function(cls) {\n    if (inArray$3(cls, newClass) < 0) {\n      newClass.push(cls);\n    }\n  });\n\n  setClassName$1(element, newClass);\n}\n\nvar addClass_1 = addClass;\n\n/**\n * @fileoverview Remove css class from element\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar forEachArray$1 = forEachArray_1;\nvar inArray$2 = inArray_1;\nvar getClass$1 = getClass_1;\nvar setClassName = _setClassName;\n\n/**\n * Remove css class from element\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {...string} cssClass - css classes to remove\n * @memberof module:domUtil\n */\nfunction removeClass(element) {\n  var cssClass = Array.prototype.slice.call(arguments, 1);\n  var classList = element.classList;\n  var origin, newClass;\n\n  if (classList) {\n    forEachArray$1(cssClass, function(name) {\n      classList.remove(name);\n    });\n\n    return;\n  }\n\n  origin = getClass$1(element).split(/\\s+/);\n  newClass = [];\n  forEachArray$1(origin, function(name) {\n    if (inArray$2(name, cssClass) < 0) {\n      newClass.push(name);\n    }\n  });\n\n  setClassName(element, newClass);\n}\n\nvar removeClass_1 = removeClass;\n\n/**\n * @fileoverview Check whether the given variable is a number or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is a number or not.\n * If the given variable is a number, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is number?\n * @memberof module:type\n */\nfunction isNumber(obj) {\n  return typeof obj === 'number' || obj instanceof Number;\n}\n\nvar isNumber_1 = isNumber;\n\n/**\n * @fileoverview Check whether the given variable is null or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is null or not.\n * If the given variable(arguments[0]) is null, returns true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is null?\n * @memberof module:type\n */\nfunction isNull$1(obj) {\n  return obj === null;\n}\n\nvar isNull_1 = isNull$1;\n\n/**\n * @fileoverview Request image ping.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar forEachOwnProperties = forEachOwnProperties_1;\n\n/**\n * @module request\n */\n\n/**\n * Request image ping.\n * @param {String} url url for ping request\n * @param {Object} trackingInfo infos for make query string\n * @returns {HTMLElement}\n * @memberof module:request\n * @example\n * // ES6\n * import imagePing from 'tui-code-snippet/request/imagePing';\n * \n * // CommonJS\n * const imagePing = require('tui-code-snippet/request/imagePing');\n *\n * imagePing('https://www.google-analytics.com/collect', {\n *   v: 1,\n *   t: 'event',\n *   tid: 'trackingid',\n *   cid: 'cid',\n *   dp: 'dp',\n *   dh: 'dh'\n * });\n */\nfunction imagePing$1(url, trackingInfo) {\n  var trackingElement = document.createElement('img');\n  var queryString = '';\n  forEachOwnProperties(trackingInfo, function(value, key) {\n    queryString += '&' + key + '=' + value;\n  });\n  queryString = queryString.substring(1);\n\n  trackingElement.src = url + '?' + queryString;\n\n  trackingElement.style.display = 'none';\n  document.body.appendChild(trackingElement);\n  document.body.removeChild(trackingElement);\n\n  return trackingElement;\n}\n\nvar imagePing_1 = imagePing$1;\n\n/**\n * @fileoverview Send hostname on DOMContentLoaded.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isUndefined$1 = isUndefined_1;\nvar imagePing = imagePing_1;\n\nvar ms7days = 7 * 24 * 60 * 60 * 1000;\n\n/**\n * Check if the date has passed 7 days\n * @param {number} date - milliseconds\n * @returns {boolean}\n * @private\n */\nfunction isExpired(date) {\n  var now = new Date().getTime();\n\n  return now - date > ms7days;\n}\n\n/**\n * Send hostname on DOMContentLoaded.\n * To prevent hostname set tui.usageStatistics to false.\n * @param {string} appName - application name\n * @param {string} trackingId - GA tracking ID\n * @ignore\n */\nfunction sendHostname(appName, trackingId) {\n  var url = 'https://www.google-analytics.com/collect';\n  var hostname = location.hostname;\n  var hitType = 'event';\n  var eventCategory = 'use';\n  var applicationKeyForStorage = 'TOAST UI ' + appName + ' for ' + hostname + ': Statistics';\n  var date = window.localStorage.getItem(applicationKeyForStorage);\n\n  // skip if the flag is defined and is set to false explicitly\n  if (!isUndefined$1(window.tui) && window.tui.usageStatistics === false) {\n    return;\n  }\n\n  // skip if not pass seven days old\n  if (date && !isExpired(date)) {\n    return;\n  }\n\n  window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());\n\n  setTimeout(function() {\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      imagePing(url, {\n        v: 1,\n        t: hitType,\n        tid: trackingId,\n        cid: hostname,\n        dp: hostname,\n        dh: appName,\n        el: appName,\n        ec: eventCategory\n      });\n    }\n  }, 1000);\n}\n\nvar sendHostname_1 = sendHostname;\n\n/Mac/.test(navigator.platform);\nvar reSpaceMoreThanOne = /[\\u0020]+/g;\nvar reEscapeChars$1 = /[>(){}[\\]+-.!#|]/g;\nvar reEscapeHTML = /<([a-zA-Z_][a-zA-Z0-9\\-._]*)(\\s|[^\\\\>])*\\/?>|<(\\/)([a-zA-Z_][a-zA-Z0-9\\-._]*)\\s*\\/?>|<!--[^-]+-->|<([a-zA-Z_][a-zA-Z0-9\\-.:/]*)>/g;\nvar reEscapeBackSlash = /\\\\[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\\\\]/g;\nvar reEscapePairedChars = /[*_~`]/g;\nvar reMdImageSyntax = /!\\[.*\\]\\(.*\\)/g;\nvar reEscapedCharInLinkSyntax = /[[\\]]/g;\nvar reEscapeBackSlashInSentence = /(?:^|[^\\\\])\\\\(?!\\\\)/g;\nvar XMLSPECIAL$1 = '[&<>\"]';\nvar reXmlSpecial$1 = new RegExp(XMLSPECIAL$1, 'g');\nfunction replaceUnsafeChar$1(char) {\n    switch (char) {\n        case '&':\n            return '&amp;';\n        case '<':\n            return '&lt;';\n        case '>':\n            return '&gt;';\n        case '\"':\n            return '&quot;';\n        default:\n            return char;\n    }\n}\nfunction escapeXml$1(text) {\n    if (reXmlSpecial$1.test(text)) {\n        return text.replace(reXmlSpecial$1, replaceUnsafeChar$1);\n    }\n    return text;\n}\nfunction sendHostName() {\n    sendHostname_1('editor', 'UA-129966929-1');\n}\nfunction includes(arr, targetItem) {\n    return arr.indexOf(targetItem) !== -1;\n}\nvar availableLinkAttributes = ['rel', 'target', 'hreflang', 'type'];\nvar reMarkdownTextToEscapeMap = {\n    codeblock: /(^ {4}[^\\n]+\\n*)+/,\n    thematicBreak: /^ *((\\* *){3,}|(- *){3,} *|(_ *){3,}) */,\n    atxHeading: /^(#{1,6}) +[\\s\\S]+/,\n    seTextheading: /^([^\\n]+)\\n *(=|-){2,} */,\n    blockquote: /^( *>[^\\n]+.*)+/,\n    list: /^ *(\\*+|-+|\\d+\\.) [\\s\\S]+/,\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? */,\n    link: /!?\\[.*\\]\\(.*\\)/,\n    reflink: /!?\\[.*\\]\\s*\\[([^\\]]*)\\]/,\n    verticalBar: /\\u007C/,\n    fencedCodeblock: /^((`|~){3,})/,\n};\nfunction sanitizeLinkAttribute(attribute) {\n    if (!attribute) {\n        return null;\n    }\n    var linkAttributes = {};\n    availableLinkAttributes.forEach(function (key) {\n        if (!isUndefined_1(attribute[key])) {\n            linkAttributes[key] = attribute[key];\n        }\n    });\n    return linkAttributes;\n}\nfunction repeat$1(text, count) {\n    var result = '';\n    for (var i = 0; i < count; i += 1) {\n        result += text;\n    }\n    return result;\n}\nfunction isNeedEscapeText(text) {\n    var needEscape = false;\n    forEachOwnProperties_1(reMarkdownTextToEscapeMap, function (reMarkdownTextToEscape) {\n        if (reMarkdownTextToEscape.test(text)) {\n            needEscape = true;\n        }\n        return !needEscape;\n    });\n    return needEscape;\n}\nfunction escapeTextForLink(text) {\n    var imageSyntaxRanges = [];\n    var result = reMdImageSyntax.exec(text);\n    while (result) {\n        imageSyntaxRanges.push([result.index, result.index + result[0].length]);\n        result = reMdImageSyntax.exec(text);\n    }\n    return text.replace(reEscapedCharInLinkSyntax, function (matched, offset) {\n        var isDelimiter = imageSyntaxRanges.some(function (range) { return offset > range[0] && offset < range[1]; });\n        return isDelimiter ? matched : \"\\\\\" + matched;\n    });\n}\nfunction escape$1(text) {\n    var aheadReplacer = function (matched) { return \"\\\\\" + matched; };\n    var behindReplacer = function (matched) { return matched + \"\\\\\"; };\n    var escapedText = text.replace(reSpaceMoreThanOne, ' ');\n    if (reEscapeBackSlash.test(escapedText)) {\n        escapedText = escapedText.replace(reEscapeBackSlash, aheadReplacer);\n    }\n    if (reEscapeBackSlashInSentence.test(escapedText)) {\n        escapedText = escapedText.replace(reEscapeBackSlashInSentence, behindReplacer);\n    }\n    escapedText = escapedText.replace(reEscapePairedChars, aheadReplacer);\n    if (reEscapeHTML.test(escapedText)) {\n        escapedText = escapedText.replace(reEscapeHTML, aheadReplacer);\n    }\n    if (isNeedEscapeText(escapedText)) {\n        escapedText = escapedText.replace(reEscapeChars$1, aheadReplacer);\n    }\n    return escapedText;\n}\nfunction quote(text) {\n    var result;\n    if (text.indexOf('\"') === -1) {\n        result = '\"\"';\n    }\n    else {\n        result = text.indexOf(\"'\") === -1 ? \"''\" : '()';\n    }\n    return result[0] + text + result[1];\n}\nfunction isNil(value) {\n    return isNull_1(value) || isUndefined_1(value);\n}\nfunction shallowEqual(o1, o2) {\n    if (o1 === null && o1 === o2) {\n        return true;\n    }\n    if (typeof o1 !== 'object' || typeof o2 !== 'object' || isNil(o1) || isNil(o2)) {\n        return o1 === o2;\n    }\n    for (var key in o1) {\n        if (o1[key] !== o2[key]) {\n            return false;\n        }\n    }\n    for (var key in o2) {\n        if (!(key in o1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction last$1(arr) {\n    return arr[arr.length - 1];\n}\nfunction between$1(value, min, max) {\n    return value >= min && value <= max;\n}\nfunction isObject$1(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nfunction deepMergedCopy(targetObj, obj) {\n    var resultObj = __assign$1({}, targetObj);\n    if (targetObj && obj) {\n        Object.keys(obj).forEach(function (prop) {\n            if (isObject$1(resultObj[prop])) {\n                if (Array.isArray(obj[prop])) {\n                    resultObj[prop] = deepCopyArray(obj[prop]);\n                }\n                else if (resultObj.hasOwnProperty(prop)) {\n                    resultObj[prop] = deepMergedCopy(resultObj[prop], obj[prop]);\n                }\n                else {\n                    resultObj[prop] = deepCopy(obj[prop]);\n                }\n            }\n            else {\n                resultObj[prop] = obj[prop];\n            }\n        });\n    }\n    return resultObj;\n}\nfunction deepCopyArray(items) {\n    return items.map(function (item) {\n        if (isObject$1(item)) {\n            return Array.isArray(item) ? deepCopyArray(item) : deepCopy(item);\n        }\n        return item;\n    });\n}\nfunction deepCopy(obj) {\n    var keys = Object.keys(obj);\n    if (!keys.length) {\n        return obj;\n    }\n    return keys.reduce(function (acc, prop) {\n        if (isObject$1(obj[prop])) {\n            acc[prop] = Array.isArray(obj[prop]) ? deepCopyArray(obj[prop]) : deepCopy(obj[prop]);\n        }\n        else {\n            acc[prop] = obj[prop];\n        }\n        return acc;\n    }, {});\n}\nfunction assign(targetObj, obj) {\n    if (obj === void 0) { obj = {}; }\n    Object.keys(obj).forEach(function (prop) {\n        if (targetObj.hasOwnProperty(prop) && typeof targetObj[prop] === 'object') {\n            if (Array.isArray(obj[prop])) {\n                targetObj[prop] = obj[prop];\n            }\n            else {\n                assign(targetObj[prop], obj[prop]);\n            }\n        }\n        else {\n            targetObj[prop] = obj[prop];\n        }\n    });\n    return targetObj;\n}\nfunction getSortedNumPair(valueA, valueB) {\n    return valueA > valueB ? [valueB, valueA] : [valueA, valueB];\n}\n\n/**\n * @fileoverview Transform the Array-like object to Array.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar forEachArray = forEachArray_1;\n\n/**\n * Transform the Array-like object to Array.\n * In low IE (below 8), Array.prototype.slice.call is not perfect. So, try-catch statement is used.\n * @param {*} arrayLike Array-like object\n * @returns {Array} Array\n * @memberof module:collection\n * @example\n * // ES6\n * import toArray from 'tui-code-snippet/collection/toArray'; \n * \n * // CommonJS\n * const toArray = require('tui-code-snippet/collection/toArray'); \n *\n * const arrayLike = {\n *   0: 'one',\n *   1: 'two',\n *   2: 'three',\n *   3: 'four',\n *   length: 4\n * };\n * const result = toArray(arrayLike);\n *\n * alert(result instanceof Array); // true\n * alert(result); // one,two,three,four\n */\nfunction toArray$1(arrayLike) {\n  var arr;\n  try {\n    arr = Array.prototype.slice.call(arrayLike);\n  } catch (e) {\n    arr = [];\n    forEachArray(arrayLike, function(value) {\n      arr.push(value);\n    });\n  }\n\n  return arr;\n}\n\nvar toArray_1 = toArray$1;\n\nfunction createParagraph(schema, content) {\n    var paragraph = schema.nodes.paragraph;\n    if (!content) {\n        return paragraph.createAndFill();\n    }\n    return paragraph.create(null, isString_1(content) ? schema.text(content) : content);\n}\nfunction createTextNode$1(schema, text, marks) {\n    return schema.text(text, marks);\n}\nfunction createTextSelection(tr, from, to) {\n    if (to === void 0) { to = from; }\n    var contentSize = tr.doc.content.size;\n    var size = contentSize > 0 ? contentSize - 1 : 1;\n    return TextSelection.create(tr.doc, Math.min(from, size), Math.min(to, size));\n}\nfunction addParagraph(tr, _a, schema) {\n    var pos = _a.pos;\n    tr.replaceWith(pos, pos, createParagraph(schema));\n    return tr.setSelection(createTextSelection(tr, pos + 1));\n}\nfunction replaceTextNode(_a) {\n    var state = _a.state, from = _a.from, startIndex = _a.startIndex, endIndex = _a.endIndex, createText = _a.createText;\n    var tr = state.tr, doc = state.doc, schema = state.schema;\n    for (var i = startIndex; i <= endIndex; i += 1) {\n        var _b = doc.child(i), nodeSize = _b.nodeSize, textContent = _b.textContent, content = _b.content;\n        var text = createText(textContent);\n        var node = text ? createTextNode$1(schema, text) : Fragment.empty;\n        var mappedFrom = tr.mapping.map(from);\n        var mappedTo = mappedFrom + content.size;\n        tr.replaceWith(mappedFrom, mappedTo, node);\n        from += nodeSize;\n    }\n    return tr;\n}\nfunction splitAndExtendBlock(tr, pos, text, node) {\n    var textLen = text.length;\n    tr.split(pos)\n        .delete(pos - textLen, pos)\n        .insert(tr.mapping.map(pos), node)\n        .setSelection(createTextSelection(tr, tr.mapping.map(pos) - textLen));\n}\n\nfunction getMdStartLine(mdNode) {\n    return mdNode.sourcepos[0][0];\n}\nfunction getMdEndLine(mdNode) {\n    return mdNode.sourcepos[1][0];\n}\nfunction getMdStartCh(mdNode) {\n    return mdNode.sourcepos[0][1];\n}\nfunction getMdEndCh(mdNode) {\n    return mdNode.sourcepos[1][1];\n}\nfunction isHTMLNode(mdNode) {\n    var type = mdNode.type;\n    return type === 'htmlBlock' || type === 'htmlInline';\n}\nfunction isStyledInlineNode(mdNode) {\n    var type = mdNode.type;\n    return (type === 'strike' ||\n        type === 'strong' ||\n        type === 'emph' ||\n        type === 'code' ||\n        type === 'link' ||\n        type === 'image');\n}\nfunction isCodeBlockNode(mdNode) {\n    return mdNode && mdNode.type === 'codeBlock';\n}\nfunction isListNode$1(mdNode) {\n    return mdNode && (mdNode.type === 'item' || mdNode.type === 'list');\n}\nfunction isOrderedListNode(mdNode) {\n    return isListNode$1(mdNode) && mdNode.listData.type === 'ordered';\n}\nfunction isBulletListNode(mdNode) {\n    return isListNode$1(mdNode) && mdNode.listData.type !== 'ordered';\n}\nfunction isTableCellNode(mdNode) {\n    return mdNode && (mdNode.type === 'tableCell' || mdNode.type === 'tableDelimCell');\n}\nfunction isInlineNode$1(mdNode) {\n    switch (mdNode.type) {\n        case 'code':\n        case 'text':\n        case 'emph':\n        case 'strong':\n        case 'strike':\n        case 'link':\n        case 'image':\n        case 'htmlInline':\n        case 'linebreak':\n        case 'softbreak':\n        case 'customInline':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction findClosestNode(mdNode, condition, includeSelf) {\n    if (includeSelf === void 0) { includeSelf = true; }\n    mdNode = includeSelf ? mdNode : mdNode.parent;\n    while (mdNode && mdNode.type !== 'document') {\n        if (condition(mdNode)) {\n            return mdNode;\n        }\n        mdNode = mdNode.parent;\n    }\n    return null;\n}\nfunction traverseParentNodes(mdNode, iteratee, includeSelf) {\n    if (includeSelf === void 0) { includeSelf = true; }\n    mdNode = includeSelf ? mdNode : mdNode.parent;\n    while (mdNode && mdNode.type !== 'document') {\n        iteratee(mdNode);\n        mdNode = mdNode.parent;\n    }\n}\nfunction addOffsetPos(originPos, offset) {\n    return [originPos[0], originPos[1] + offset];\n}\nfunction setOffsetPos(originPos, newOffset) {\n    return [originPos[0], newOffset];\n}\nfunction getInlineMarkdownText(mdNode) {\n    var text = mdNode.firstChild.literal;\n    switch (mdNode.type) {\n        case 'emph':\n            return \"*\" + text + \"*\";\n        case 'strong':\n            return \"**\" + text + \"**\";\n        case 'strike':\n            return \"~~\" + text + \"~~\";\n        case 'code':\n            return \"`\" + text + \"`\";\n        case 'link':\n        case 'image':\n            /* eslint-disable no-case-declarations */\n            var _a = mdNode, destination = _a.destination, title = _a.title;\n            var delim = mdNode.type === 'link' ? '' : '!';\n            return delim + \"[\" + text + \"](\" + destination + (title ? \" \\\"\" + title + \"\\\"\" : '') + \")\";\n        default:\n            return null;\n    }\n}\nfunction isContainer$2(node) {\n    switch (node.type) {\n        case 'document':\n        case 'blockQuote':\n        case 'list':\n        case 'item':\n        case 'paragraph':\n        case 'heading':\n        case 'emph':\n        case 'strong':\n        case 'strike':\n        case 'link':\n        case 'image':\n        case 'table':\n        case 'tableHead':\n        case 'tableBody':\n        case 'tableRow':\n        case 'tableCell':\n        case 'tableDelimRow':\n        case 'customInline':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getChildrenText$1(node) {\n    var buffer = [];\n    var walker = node.walker();\n    var event = null;\n    while ((event = walker.next())) {\n        var childNode = event.node;\n        if (childNode.type === 'text') {\n            buffer.push(childNode.literal);\n        }\n    }\n    return buffer.join('');\n}\n\nvar widgetRules = [];\nvar widgetRuleMap = {};\nvar reWidgetPrefix = /\\$\\$widget\\d+\\s/;\nfunction unwrapWidgetSyntax(text) {\n    var index = text.search(reWidgetPrefix);\n    if (index !== -1) {\n        var rest = text.substring(index);\n        var replaced = rest.replace(reWidgetPrefix, '').replace('$$', '');\n        text = text.substring(0, index);\n        text += unwrapWidgetSyntax(replaced);\n    }\n    return text;\n}\nfunction createWidgetContent(info, text) {\n    return \"$$\" + info + \" \" + text + \"$$\";\n}\nfunction widgetToDOM(info, text) {\n    var _a = widgetRuleMap[info], rule = _a.rule, toDOM = _a.toDOM;\n    var matches = unwrapWidgetSyntax(text).match(rule);\n    if (matches) {\n        text = matches[0];\n    }\n    return toDOM(text);\n}\nfunction getWidgetRules() {\n    return widgetRules;\n}\nfunction setWidgetRules(rules) {\n    widgetRules = rules;\n    widgetRules.forEach(function (rule, index) {\n        widgetRuleMap[\"widget\" + index] = rule;\n    });\n}\nfunction mergeNodes(nodes, text, schema, ruleIndex) {\n    return nodes.concat(createNodesWithWidget(text, schema, ruleIndex));\n}\n/**\n * create nodes with plain text and replace text matched to the widget rules with the widget node\n * For example, in case the text and widget rules as below\n *\n * text: $test plain text #test\n * widget rules: [{ rule: /$.+/ }, { rule: /#.+/ }]\n *\n * The creating node process is recursive and is as follows.\n *\n * in first widget rule(/$.+/)\n *  $test -> widget node\n *  plain text -> match with next widget rule\n *  #test -> match with next widget rule\n *\n * in second widget rule(/#.+/)\n *  plain text -> text node(no rule for matching)\n *  #test -> widget node\n */\nfunction createNodesWithWidget(text, schema, ruleIndex) {\n    if (ruleIndex === void 0) { ruleIndex = 0; }\n    var nodes = [];\n    var rule = (widgetRules[ruleIndex] || {}).rule;\n    var nextRuleIndex = ruleIndex + 1;\n    text = unwrapWidgetSyntax(text);\n    if (rule && rule.test(text)) {\n        var index = void 0;\n        while ((index = text.search(rule)) !== -1) {\n            var prev = text.substring(0, index);\n            // get widget node on first splitted text using next widget rule\n            if (prev) {\n                nodes = mergeNodes(nodes, prev, schema, nextRuleIndex);\n            }\n            // build widget node using current widget rule\n            text = text.substring(index);\n            var literal = text.match(rule)[0];\n            var info = \"widget\" + ruleIndex;\n            nodes.push(schema.nodes.widget.create({ info: info }, schema.text(createWidgetContent(info, literal))));\n            text = text.substring(literal.length);\n        }\n        // get widget node on last splitted text using next widget rule\n        if (text) {\n            nodes = mergeNodes(nodes, text, schema, nextRuleIndex);\n        }\n    }\n    else if (text) {\n        nodes =\n            ruleIndex < widgetRules.length - 1\n                ? mergeNodes(nodes, text, schema, nextRuleIndex)\n                : [schema.text(text)];\n    }\n    return nodes;\n}\nfunction getWidgetContent(widgetNode) {\n    var event;\n    var text = '';\n    var walker = widgetNode.walker();\n    while ((event = walker.next())) {\n        var node = event.node, entering = event.entering;\n        if (entering) {\n            if (node !== widgetNode && node.type !== 'text') {\n                text += getInlineMarkdownText(node);\n                // skip the children\n                walker.resumeAt(widgetNode, false);\n                walker.next();\n            }\n            else if (node.type === 'text') {\n                text += node.literal;\n            }\n        }\n    }\n    return text;\n}\n\nfunction getDefaultCommands() {\n    return {\n        deleteSelection: function () { return deleteSelection; },\n        selectAll: function () { return selectAll; },\n        undo: function () { return undo; },\n        redo: function () { return redo; },\n    };\n}\n\nfunction placeholder(options) {\n    return new Plugin({\n        props: {\n            decorations: function (state) {\n                var doc = state.doc;\n                if (options.text &&\n                    doc.childCount === 1 &&\n                    doc.firstChild.isTextblock &&\n                    doc.firstChild.content.size === 0) {\n                    var placeHolder = document.createElement('span');\n                    addClass_1(placeHolder, 'placeholder');\n                    if (options.className) {\n                        addClass_1(placeHolder, options.className);\n                    }\n                    placeHolder.textContent = options.text;\n                    return DecorationSet.create(doc, [Decoration.widget(1, placeHolder)]);\n                }\n                return null;\n            },\n        },\n    });\n}\n\n/**\n * @fileoverview Check element has specific css class\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar inArray$1 = inArray_1;\nvar getClass = getClass_1;\n\n/**\n * Check element has specific css class\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {string} cssClass - css class\n * @returns {boolean}\n * @memberof module:domUtil\n */\nfunction hasClass(element, cssClass) {\n  var origin;\n\n  if (element.classList) {\n    return element.classList.contains(cssClass);\n  }\n\n  origin = getClass(element).split(/\\s+/);\n\n  return inArray$1(cssClass, origin) > -1;\n}\n\nvar hasClass_1 = hasClass;\n\n/**\n * @fileoverview Check element match selector\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar inArray = inArray_1;\nvar toArray = toArray_1;\n\nvar elProto = Element.prototype;\nvar matchSelector = elProto.matches ||\n    elProto.webkitMatchesSelector ||\n    elProto.mozMatchesSelector ||\n    elProto.msMatchesSelector ||\n    function(selector) {\n      var doc = this.document || this.ownerDocument;\n\n      return inArray(this, toArray(doc.querySelectorAll(selector))) > -1;\n    };\n\n/**\n * Check element match selector\n * @param {HTMLElement} element - element to check\n * @param {string} selector - selector to check\n * @returns {boolean} is selector matched to element?\n * @memberof module:domUtil\n */\nfunction matches(element, selector) {\n  return matchSelector.call(element, selector);\n}\n\nvar matches_1 = matches;\n\nvar TAG_NAME = '[A-Za-z][A-Za-z0-9-]*';\nvar ATTRIBUTE_NAME = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar UNQUOTED_VALUE = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar SINGLE_QUOTED_VALUE = \"'[^']*'\";\nvar DOUBLE_QUOTED_VALUE = '\"[^\"]*\"';\nvar ATTRIBUTE_VALUE = \"(?:\" + UNQUOTED_VALUE + \"|\" + SINGLE_QUOTED_VALUE + \"|\" + DOUBLE_QUOTED_VALUE + \")\";\nvar ATTRIBUTE_VALUE_SPEC = \"\" + '(?:\\\\s*=\\\\s*' + ATTRIBUTE_VALUE + \")\";\nvar ATTRIBUTE$1 = \"\" + '(?:\\\\s+' + ATTRIBUTE_NAME + ATTRIBUTE_VALUE_SPEC + \"?)\";\nvar OPEN_TAG = \"<(\" + TAG_NAME + \")(\" + ATTRIBUTE$1 + \")*\\\\s*/?>\";\nvar CLOSE_TAG = \"</(\" + TAG_NAME + \")\\\\s*[>]\";\nvar HTML_TAG = \"(?:\" + OPEN_TAG + \"|\" + CLOSE_TAG + \")\";\nvar reHTMLTag = new RegExp(\"^\" + HTML_TAG, 'i');\nvar reBR = /<br\\s*\\/*>/i;\nvar reHTMLComment = /<! ---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\nvar ALTERNATIVE_TAG_FOR_BR = '</p><p>';\n\nfunction isPositionInBox(style, offsetX, offsetY) {\n    var left = parseInt(style.left, 10);\n    var top = parseInt(style.top, 10);\n    var width = parseInt(style.width, 10) + parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n    var height = parseInt(style.height, 10) + parseInt(style.paddingTop, 10) + parseInt(style.paddingBottom, 10);\n    return offsetX >= left && offsetX <= left + width && offsetY >= top && offsetY <= top + height;\n}\nvar CLS_PREFIX = 'toastui-editor-';\nfunction cls() {\n    var names = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        names[_i] = arguments[_i];\n    }\n    var result = [];\n    for (var _a = 0, names_1 = names; _a < names_1.length; _a++) {\n        var name_1 = names_1[_a];\n        var className = void 0;\n        if (Array.isArray(name_1)) {\n            className = name_1[0] ? name_1[1] : null;\n        }\n        else {\n            className = name_1;\n        }\n        if (className) {\n            result.push(\"\" + CLS_PREFIX + className);\n        }\n    }\n    return result.join(' ');\n}\nfunction clsWithMdPrefix() {\n    var names = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        names[_i] = arguments[_i];\n    }\n    return names.map(function (className) { return CLS_PREFIX + \"md-\" + className; }).join(' ');\n}\nfunction isTextNode(node) {\n    return (node === null || node === void 0 ? void 0 : node.nodeType) === Node.TEXT_NODE;\n}\nfunction isElemNode(node) {\n    return node && node.nodeType === Node.ELEMENT_NODE;\n}\nfunction findNodes(element, selector) {\n    var nodeList = toArray_1(element.querySelectorAll(selector));\n    if (nodeList.length) {\n        return nodeList;\n    }\n    return [];\n}\nfunction appendNodes(node, nodesToAppend) {\n    nodesToAppend = isArray_1(nodesToAppend) ? toArray_1(nodesToAppend) : [nodesToAppend];\n    nodesToAppend.forEach(function (nodeToAppend) {\n        node.appendChild(nodeToAppend);\n    });\n}\nfunction insertBeforeNode(insertedNode, node) {\n    if (node.parentNode) {\n        node.parentNode.insertBefore(insertedNode, node);\n    }\n}\nfunction removeNode$1(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction unwrapNode(node) {\n    var result = [];\n    while (node.firstChild) {\n        result.push(node.firstChild);\n        if (node.parentNode) {\n            node.parentNode.insertBefore(node.firstChild, node);\n        }\n    }\n    removeNode$1(node);\n    return result;\n}\nfunction toggleClass(element, className, state) {\n    if (isUndefined_1(state)) {\n        state = !hasClass_1(element, className);\n    }\n    var toggleFn = state ? addClass_1 : removeClass_1;\n    toggleFn(element, className);\n}\nfunction createElementWith(contents, target) {\n    var container = document.createElement('div');\n    if (isString_1(contents)) {\n        container.innerHTML = contents;\n    }\n    else {\n        container.appendChild(contents);\n    }\n    var firstChild = container.firstChild;\n    if (target) {\n        target.appendChild(firstChild);\n    }\n    return firstChild;\n}\nfunction getOuterWidth(el) {\n    var computed = window.getComputedStyle(el);\n    return (['margin-left', 'margin-right'].reduce(function (acc, type) { return acc + parseInt(computed.getPropertyValue(type), 10); }, 0) + el.offsetWidth);\n}\nfunction closest(node, found) {\n    var condition;\n    if (isString_1(found)) {\n        condition = function (target) { return matches_1(target, found); };\n    }\n    else {\n        condition = function (target) { return target === found; };\n    }\n    while (node && node !== document) {\n        if (isElemNode(node) && condition(node)) {\n            return node;\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\nfunction getTotalOffset(el, root) {\n    var offsetTop = 0;\n    var offsetLeft = 0;\n    while (el && el !== root) {\n        var top_1 = el.offsetTop, left = el.offsetLeft, offsetParent = el.offsetParent;\n        offsetTop += top_1;\n        offsetLeft += left;\n        if (offsetParent === root.offsetParent) {\n            break;\n        }\n        el = el.offsetParent;\n    }\n    return { offsetTop: offsetTop, offsetLeft: offsetLeft };\n}\nfunction setAttributes(attributes, element) {\n    Object.keys(attributes).forEach(function (attrName) {\n        if (isNil(attributes[attrName])) {\n            element.removeAttribute(attrName);\n        }\n        else {\n            element.setAttribute(attrName, attributes[attrName]);\n        }\n    });\n}\nfunction replaceBRWithEmptyBlock(html) {\n    // remove br in paragraph to compatible with markdown\n    var replacedHTML = html.replace(/<p><br\\s*\\/*><\\/p>/gi, '<p></p>');\n    var reHTMLTag = new RegExp(HTML_TAG, 'ig');\n    var htmlTagMatched = replacedHTML.match(reHTMLTag);\n    htmlTagMatched === null || htmlTagMatched === void 0 ? void 0 : htmlTagMatched.forEach(function (htmlTag, index) {\n        if (reBR.test(htmlTag)) {\n            var alternativeTag = ALTERNATIVE_TAG_FOR_BR;\n            if (index) {\n                var prevTag = htmlTagMatched[index - 1];\n                var openTagMatched = prevTag.match(OPEN_TAG);\n                if (openTagMatched && !/br/i.test(openTagMatched[1])) {\n                    var tagName = openTagMatched[1];\n                    alternativeTag = \"</\" + tagName + \"><\" + tagName + \">\";\n                }\n            }\n            replacedHTML = replacedHTML.replace(reBR, alternativeTag);\n        }\n    });\n    return replacedHTML;\n}\nfunction removeProseMirrorHackNodes(html) {\n    var reProseMirrorImage = /<img class=\"ProseMirror-separator\" alt=\"\">/g;\n    var reProseMirrorTrailingBreak = / class=\"ProseMirror-trailingBreak\"/g;\n    var resultHTML = html;\n    resultHTML = resultHTML.replace(reProseMirrorImage, '');\n    resultHTML = resultHTML.replace(reProseMirrorTrailingBreak, '');\n    return resultHTML;\n}\n\nvar pluginKey$1 = new PluginKey('widget');\nvar MARGIN = 5;\nvar PopupWidget = /** @class */ (function () {\n    function PopupWidget(view, eventEmitter) {\n        var _this = this;\n        this.popup = null;\n        this.removeWidget = function () {\n            if (_this.popup) {\n                _this.rootEl.removeChild(_this.popup);\n                _this.popup = null;\n            }\n        };\n        this.rootEl = view.dom.parentElement;\n        this.eventEmitter = eventEmitter;\n        this.eventEmitter.listen('blur', this.removeWidget);\n        this.eventEmitter.listen('loadUI', function () {\n            _this.rootEl = closest(view.dom.parentElement, \".\" + cls('defaultUI'));\n        });\n        this.eventEmitter.listen('removePopupWidget', this.removeWidget);\n    }\n    PopupWidget.prototype.update = function (view) {\n        var widget = pluginKey$1.getState(view.state);\n        this.removeWidget();\n        if (widget) {\n            var node = widget.node, style = widget.style;\n            var _a = view.coordsAtPos(widget.pos), top_1 = _a.top, left = _a.left, bottom = _a.bottom;\n            var height = bottom - top_1;\n            var rect = this.rootEl.getBoundingClientRect();\n            var relTopPos = top_1 - rect.top;\n            css_1(node, { opacity: '0' });\n            this.rootEl.appendChild(node);\n            css_1(node, {\n                position: 'absolute',\n                left: left - rect.left + MARGIN + \"px\",\n                top: (style === 'bottom' ? relTopPos + height - MARGIN : relTopPos - height) + \"px\",\n                opacity: '1',\n            });\n            this.popup = node;\n            view.focus();\n        }\n    };\n    PopupWidget.prototype.destroy = function () {\n        this.eventEmitter.removeEventHandler('blur', this.removeWidget);\n    };\n    return PopupWidget;\n}());\nfunction addWidget(eventEmitter) {\n    return new Plugin({\n        key: pluginKey$1,\n        state: {\n            init: function () {\n                return null;\n            },\n            apply: function (tr) {\n                return tr.getMeta('widget');\n            },\n        },\n        view: function (editorView) {\n            return new PopupWidget(editorView, eventEmitter);\n        },\n    });\n}\n\nfunction addDefaultImageBlobHook(eventEmitter) {\n    eventEmitter.listen('addImageBlobHook', function (blob, callback) {\n        var reader = new FileReader();\n        reader.onload = function (_a) {\n            var target = _a.target;\n            return callback(target.result);\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nfunction emitImageBlobHook(eventEmitter, blob, type) {\n    var hook = function (imageUrl, altText) {\n        eventEmitter.emit('command', 'addImage', {\n            imageUrl: imageUrl,\n            altText: altText || blob.name || 'image',\n        });\n    };\n    eventEmitter.emit('addImageBlobHook', blob, hook, type);\n}\nfunction pasteImageOnly(items) {\n    var images = toArray_1(items).filter(function (_a) {\n        var type = _a.type;\n        return type.indexOf('image') !== -1;\n    });\n    if (images.length === 1) {\n        var item = images[0];\n        if (item) {\n            return item.getAsFile();\n        }\n    }\n    return null;\n}\n\nfunction dropImage(_a) {\n    var eventEmitter = _a.eventEmitter;\n    return new Plugin({\n        props: {\n            handleDOMEvents: {\n                drop: function (_, ev) {\n                    var _a;\n                    var items = (_a = ev.dataTransfer) === null || _a === void 0 ? void 0 : _a.files;\n                    if (items) {\n                        forEachArray_1(items, function (item) {\n                            if (item.type.indexOf('image') !== -1) {\n                                ev.preventDefault();\n                                ev.stopPropagation();\n                                emitImageBlobHook(eventEmitter, item, ev.type);\n                                return false;\n                            }\n                            return true;\n                        });\n                    }\n                    return true;\n                },\n            },\n        },\n    });\n}\n\nvar Node$2 = /** @class */ (function () {\n    function Node() {\n    }\n    Object.defineProperty(Node.prototype, \"type\", {\n        get: function () {\n            return 'node';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Node.prototype.setContext = function (context) {\n        this.context = context;\n    };\n    return Node;\n}());\n\nfunction widgetNodeView(pmNode) {\n    var dom = document.createElement('span');\n    var node = widgetToDOM(pmNode.attrs.info, pmNode.textContent);\n    dom.className = 'tui-widget';\n    dom.appendChild(node);\n    return { dom: dom };\n}\nfunction isWidgetNode(pmNode) {\n    return pmNode.type.name === 'widget';\n}\nvar Widget = /** @class */ (function (_super) {\n    __extends$1(Widget, _super);\n    function Widget() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Widget.prototype, \"name\", {\n        get: function () {\n            return 'widget';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Widget.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: {\n                    info: { default: null },\n                },\n                group: 'inline',\n                inline: true,\n                content: 'text*',\n                selectable: false,\n                atom: true,\n                toDOM: function () {\n                    return ['span', { class: 'tui-widget' }, 0];\n                },\n                parseDOM: [\n                    {\n                        tag: 'span.tui-widget',\n                        getAttrs: function (dom) {\n                            var text = dom.textContent;\n                            var _a = text.match(/\\$\\$(widget\\d+)/), info = _a[1];\n                            return { info: info };\n                        },\n                    },\n                ],\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Widget;\n}(Node$2));\n\nvar EditorBase = /** @class */ (function () {\n    function EditorBase(eventEmitter) {\n        this.timer = null;\n        this.el = document.createElement('div');\n        this.el.className = 'toastui-editor';\n        this.eventEmitter = eventEmitter;\n        this.placeholder = { text: '' };\n    }\n    EditorBase.prototype.createState = function () {\n        return EditorState.create({\n            schema: this.schema,\n            plugins: this.createPlugins(),\n        });\n    };\n    EditorBase.prototype.initEvent = function () {\n        var _a = this, eventEmitter = _a.eventEmitter, view = _a.view, editorType = _a.editorType;\n        view.dom.addEventListener('focus', function () { return eventEmitter.emit('focus', editorType); });\n        view.dom.addEventListener('blur', function () { return eventEmitter.emit('blur', editorType); });\n    };\n    EditorBase.prototype.emitChangeEvent = function (tr) {\n        this.eventEmitter.emit('caretChange', this.editorType);\n        if (tr.docChanged) {\n            this.eventEmitter.emit('change', this.editorType);\n        }\n    };\n    Object.defineProperty(EditorBase.prototype, \"defaultPlugins\", {\n        get: function () {\n            var rules = this.createInputRules();\n            var plugins = __spreadArray$1(__spreadArray$1([], this.keymaps), [\n                keymap(__assign$1({ 'Shift-Enter': baseKeymap.Enter }, baseKeymap)),\n                history(),\n                placeholder(this.placeholder),\n                addWidget(this.eventEmitter),\n                dropImage(this.context),\n            ]);\n            return rules ? plugins.concat(rules) : plugins;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EditorBase.prototype.createInputRules = function () {\n        var widgetRules = getWidgetRules();\n        var rules = widgetRules.map(function (_a) {\n            var rule = _a.rule;\n            return new InputRule(rule, function (state, match, start, end) {\n                var schema = state.schema, tr = state.tr, doc = state.doc;\n                var allMatched = match.input.match(new RegExp(rule, 'g'));\n                var pos = doc.resolve(start);\n                var parent = pos.parent;\n                var count = 0;\n                if (isWidgetNode(parent)) {\n                    parent = pos.node(pos.depth - 1);\n                }\n                parent.forEach(function (child) { return isWidgetNode(child) && (count += 1); });\n                // replace the content only if the count of matched rules in whole text is greater than current widget node count\n                if (allMatched.length > count) {\n                    var content = last$1(allMatched);\n                    var nodes = createNodesWithWidget(content, schema);\n                    // adjust start position based on widget content\n                    return tr.replaceWith(end - content.length + 1, end, nodes);\n                }\n                return null;\n            });\n        });\n        return rules.length ? inputRules({ rules: rules }) : null;\n    };\n    EditorBase.prototype.clearTimer = function () {\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n    };\n    EditorBase.prototype.createSchema = function () {\n        return new Schema({\n            nodes: this.specs.nodes,\n            marks: this.specs.marks,\n        });\n    };\n    EditorBase.prototype.createKeymaps = function (useCommandShortcut) {\n        var _a = getDefaultCommands(), undo = _a.undo, redo = _a.redo;\n        var allKeymaps = this.specs.keymaps(useCommandShortcut);\n        var historyKeymap = {\n            'Mod-z': undo(),\n            'Shift-Mod-z': redo(),\n        };\n        return useCommandShortcut ? allKeymaps.concat(keymap(historyKeymap)) : allKeymaps;\n    };\n    EditorBase.prototype.createCommands = function () {\n        return this.specs.commands(this.view);\n    };\n    EditorBase.prototype.createPluginProps = function () {\n        var _this = this;\n        return this.extraPlugins.map(function (plugin) { return plugin(_this.eventEmitter); });\n    };\n    EditorBase.prototype.focus = function () {\n        var _this = this;\n        this.clearTimer();\n        // prevent the error for IE11\n        this.timer = setTimeout(function () {\n            _this.view.focus();\n            _this.view.dispatch(_this.view.state.tr.scrollIntoView());\n        });\n    };\n    EditorBase.prototype.blur = function () {\n        this.view.dom.blur();\n    };\n    EditorBase.prototype.destroy = function () {\n        var _this = this;\n        this.clearTimer();\n        this.view.destroy();\n        Object.keys(this).forEach(function (prop) {\n            delete _this[prop];\n        });\n    };\n    EditorBase.prototype.moveCursorToStart = function (focus) {\n        var tr = this.view.state.tr;\n        this.view.dispatch(tr.setSelection(createTextSelection(tr, 1)).scrollIntoView());\n        if (focus) {\n            this.focus();\n        }\n    };\n    EditorBase.prototype.moveCursorToEnd = function (focus) {\n        var tr = this.view.state.tr;\n        this.view.dispatch(tr.setSelection(createTextSelection(tr, tr.doc.content.size - 1)).scrollIntoView());\n        if (focus) {\n            this.focus();\n        }\n    };\n    EditorBase.prototype.setScrollTop = function (top) {\n        this.view.dom.scrollTop = top;\n    };\n    EditorBase.prototype.getScrollTop = function () {\n        return this.view.dom.scrollTop;\n    };\n    EditorBase.prototype.setPlaceholder = function (text) {\n        this.placeholder.text = text;\n        this.view.dispatch(this.view.state.tr.scrollIntoView());\n    };\n    EditorBase.prototype.setHeight = function (height) {\n        css_1(this.el, { height: height + \"px\" });\n    };\n    EditorBase.prototype.setMinHeight = function (minHeight) {\n        css_1(this.el, { minHeight: minHeight + \"px\" });\n    };\n    EditorBase.prototype.getElement = function () {\n        return this.el;\n    };\n    return EditorBase;\n}());\n\n/**\n * @fileoverview Check whether the given variable is a function or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is a function or not.\n * If the given variable is a function, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is function?\n * @memberof module:type\n */\nfunction isFunction(obj) {\n  return obj instanceof Function;\n}\n\nvar isFunction_1 = isFunction;\n\nvar defaultCommandShortcuts = [\n    'Enter',\n    'Shift-Enter',\n    'Mod-Enter',\n    'Tab',\n    'Shift-Tab',\n    'Delete',\n    'Backspace',\n    'Mod-Delete',\n    'Mod-Backspace',\n    'ArrowUp',\n    'ArrowDown',\n    'ArrowLeft',\n    'ArrowRight',\n    'Mod-d',\n    'Mod-D',\n    'Alt-ArrowUp',\n    'Alt-ArrowDown',\n];\nfunction execCommand(view, command, payload) {\n    view.focus();\n    return command(payload)(view.state, view.dispatch, view);\n}\nvar SpecManager = /** @class */ (function () {\n    function SpecManager(specs) {\n        this.specs = specs;\n    }\n    Object.defineProperty(SpecManager.prototype, \"nodes\", {\n        get: function () {\n            return this.specs\n                .filter(function (spec) { return spec.type === 'node'; })\n                .reduce(function (nodes, _a) {\n                var _b;\n                var name = _a.name, schema = _a.schema;\n                return __assign$1(__assign$1({}, nodes), (_b = {}, _b[name] = schema, _b));\n            }, {});\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SpecManager.prototype, \"marks\", {\n        get: function () {\n            return this.specs\n                .filter(function (spec) { return spec.type === 'mark'; })\n                .reduce(function (marks, _a) {\n                var _b;\n                var name = _a.name, schema = _a.schema;\n                return __assign$1(__assign$1({}, marks), (_b = {}, _b[name] = schema, _b));\n            }, {});\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SpecManager.prototype.commands = function (view, addedCommands) {\n        var specCommands = this.specs\n            .filter(function (_a) {\n            var commands = _a.commands;\n            return commands;\n        })\n            .reduce(function (allCommands, spec) {\n            var commands = {};\n            var specCommand = spec.commands();\n            if (isFunction_1(specCommand)) {\n                commands[spec.name] = function (payload) { return execCommand(view, specCommand, payload); };\n            }\n            else {\n                Object.keys(specCommand).forEach(function (name) {\n                    commands[name] = function (payload) { return execCommand(view, specCommand[name], payload); };\n                });\n            }\n            return __assign$1(__assign$1({}, allCommands), commands);\n        }, {});\n        var defaultCommands = getDefaultCommands();\n        Object.keys(defaultCommands).forEach(function (name) {\n            specCommands[name] = function (payload) { return execCommand(view, defaultCommands[name], payload); };\n        });\n        if (addedCommands) {\n            Object.keys(addedCommands).forEach(function (name) {\n                specCommands[name] = function (payload) { return execCommand(view, addedCommands[name], payload); };\n            });\n        }\n        return specCommands;\n    };\n    SpecManager.prototype.keymaps = function (useCommandShortcut) {\n        var specKeymaps = this.specs.filter(function (spec) { return spec.keymaps; }).map(function (spec) { return spec.keymaps(); });\n        return specKeymaps.map(function (keys) {\n            if (!useCommandShortcut) {\n                Object.keys(keys).forEach(function (key) {\n                    if (!includes(defaultCommandShortcuts, key)) {\n                        delete keys[key];\n                    }\n                });\n            }\n            return keymap(keys);\n        });\n    };\n    SpecManager.prototype.setContext = function (context) {\n        this.specs.forEach(function (spec) {\n            spec.setContext(context);\n        });\n    };\n    return SpecManager;\n}());\n\nfunction resolveSelectionPos(selection) {\n    var from = selection.from, to = selection.to;\n    if (selection instanceof AllSelection) {\n        return [from + 1, to - 1];\n    }\n    return [from, to];\n}\nfunction getMdLine(resolvedPos) {\n    return resolvedPos.index(0) + 1;\n}\nfunction getWidgetNodePos(node, chPos, direction) {\n    if (direction === void 0) { direction = 1; }\n    var additionalPos = 0;\n    node.forEach(function (child, pos) {\n        // add or subtract widget node tag\n        if (isWidgetNode(child) && pos + 2 < chPos) {\n            additionalPos += 2 * direction;\n        }\n    });\n    return additionalPos;\n}\nfunction getEditorToMdPos(doc, from, to) {\n    if (to === void 0) { to = from; }\n    var collapsed = from === to;\n    var startResolvedPos = doc.resolve(from);\n    var startLine = getMdLine(startResolvedPos);\n    var endLine = startLine;\n    var startOffset = startResolvedPos.start(1);\n    var endOffset = startOffset;\n    if (!collapsed) {\n        // prevent the end offset from pointing to the root document position\n        var endResolvedPos = doc.resolve(to === doc.content.size ? to - 1 : to);\n        endOffset = endResolvedPos.start(1);\n        endLine = getMdLine(endResolvedPos);\n        // To resolve the end offset excluding document tag size\n        if (endResolvedPos.pos === doc.content.size) {\n            to = doc.content.size - 2;\n        }\n    }\n    var startCh = Math.max(from - startOffset + 1, 1);\n    var endCh = Math.max(to - endOffset + 1, 1);\n    return [\n        [startLine, startCh + getWidgetNodePos(doc.child(startLine - 1), startCh, -1)],\n        [endLine, endCh + getWidgetNodePos(doc.child(endLine - 1), endCh, -1)],\n    ];\n}\nfunction getStartPosListPerLine(doc, endIndex) {\n    var startPosListPerLine = [];\n    for (var i = 0, pos = 0; i < endIndex; i += 1) {\n        var child = doc.child(i);\n        startPosListPerLine[i] = pos;\n        pos += child.nodeSize;\n    }\n    return startPosListPerLine;\n}\nfunction getMdToEditorPos(doc, startPos, endPos) {\n    var startPosListPerLine = getStartPosListPerLine(doc, endPos[0]);\n    var startIndex = startPos[0] - 1;\n    var endIndex = endPos[0] - 1;\n    var startNode = doc.child(startIndex);\n    var endNode = doc.child(endIndex);\n    // calculate the position corresponding to the line\n    var from = startPosListPerLine[startIndex];\n    var to = startPosListPerLine[endIndex];\n    // calculate the position corresponding to the character offset of the line\n    from += startPos[1] + getWidgetNodePos(startNode, startPos[1] - 1);\n    to += endPos[1] + getWidgetNodePos(endNode, endPos[1] - 1);\n    return [from, Math.min(to, doc.content.size)];\n}\nfunction getRangeInfo(selection) {\n    var $from = selection.$from, $to = selection.$to;\n    var from = selection.from, to = selection.to;\n    var doc = $from.doc;\n    if (selection instanceof AllSelection) {\n        $from = doc.resolve(from + 1);\n        $to = doc.resolve(to - 1);\n    }\n    if ($from.depth === 0) {\n        $from = doc.resolve(from - 1);\n        $to = $from;\n    }\n    return {\n        startFromOffset: $from.start(1),\n        endFromOffset: $to.start(1),\n        startToOffset: $from.end(1),\n        endToOffset: $to.end(1),\n        startIndex: $from.index(0),\n        endIndex: $to.index(0),\n        from: $from.pos,\n        to: $to.pos,\n    };\n}\nfunction getNodeContentOffsetRange(doc, targetIndex) {\n    var startOffset = 1;\n    var endOffset = 1;\n    for (var i = 0, offset = 0; i < doc.childCount; i += 1) {\n        var nodeSize = doc.child(i).nodeSize;\n        // calculate content start, end offset(not node offset)\n        startOffset = offset + 1;\n        endOffset = offset + nodeSize - 1;\n        if (i === targetIndex) {\n            break;\n        }\n        offset += nodeSize;\n    }\n    return { startOffset: startOffset, endOffset: endOffset };\n}\n\nvar HEADING = 'heading';\nvar BLOCK_QUOTE = 'blockQuote';\nvar LIST_ITEM = 'listItem';\nvar TABLE = 'table';\nvar TABLE_CELL = 'tableCell';\nvar CODE_BLOCK = 'codeBlock';\nvar THEMATIC_BREAK = 'thematicBreak';\nvar LINK = 'link';\nvar CODE = 'code';\nvar META = 'meta';\nvar DELIM = 'delimiter';\nvar TASK_DELIM = 'taskDelimiter';\nvar TEXT = 'markedText';\nvar HTML = 'html';\nvar CUSTOM_BLOCK = 'customBlock';\nvar delimSize = {\n    strong: 2,\n    emph: 1,\n    strike: 2,\n};\nfunction markInfo(start, end, type, attrs) {\n    return { start: start, end: end, spec: { type: type, attrs: attrs } };\n}\nfunction heading$1(_a, start, end) {\n    var level = _a.level, headingType = _a.headingType;\n    var marks = [markInfo(start, end, HEADING, { level: level })];\n    if (headingType === 'atx') {\n        marks.push(markInfo(start, addOffsetPos(start, level), DELIM));\n    }\n    else {\n        marks.push(markInfo(setOffsetPos(end, 0), end, HEADING, { seText: true }));\n    }\n    return marks;\n}\nfunction emphasisAndStrikethrough(_a, start, end) {\n    var type = _a.type;\n    var startDelimPos = addOffsetPos(start, delimSize[type]);\n    var endDelimPos = addOffsetPos(end, -delimSize[type]);\n    return [\n        markInfo(startDelimPos, endDelimPos, type),\n        markInfo(start, startDelimPos, DELIM),\n        markInfo(endDelimPos, end, DELIM),\n    ];\n}\nfunction markLink(start, end, linkTextStart, lastChildCh) {\n    return [\n        markInfo(start, end, LINK),\n        markInfo(setOffsetPos(start, linkTextStart[1] + 1), setOffsetPos(end, lastChildCh), LINK, {\n            desc: true,\n        }),\n        markInfo(setOffsetPos(end, lastChildCh + 2), addOffsetPos(end, -1), LINK, { url: true }),\n    ];\n}\nfunction image$1(_a, start, end) {\n    var lastChild = _a.lastChild;\n    var lastChildCh = lastChild ? getMdEndCh(lastChild) + 1 : 3; // 3: length of '![]'\n    var linkTextEnd = addOffsetPos(start, 1);\n    return __spreadArray$1([markInfo(start, linkTextEnd, META)], markLink(start, end, linkTextEnd, lastChildCh));\n}\nfunction link(_a, start, end) {\n    var lastChild = _a.lastChild, extendedAutolink = _a.extendedAutolink;\n    var lastChildCh = lastChild ? getMdEndCh(lastChild) + 1 : 2; // 2: length of '[]'\n    return extendedAutolink\n        ? [markInfo(start, end, LINK, { desc: true })]\n        : markLink(start, end, start, lastChildCh);\n}\nfunction code(_a, start, end) {\n    var tickCount = _a.tickCount;\n    var openDelimEnd = addOffsetPos(start, tickCount);\n    var closeDelimStart = addOffsetPos(end, -tickCount);\n    return [\n        markInfo(start, end, CODE),\n        markInfo(start, openDelimEnd, CODE, { start: true }),\n        markInfo(openDelimEnd, closeDelimStart, CODE, { marked: true }),\n        markInfo(closeDelimStart, end, CODE, { end: true }),\n    ];\n}\nfunction lineBackground(parent, start, end, prefix) {\n    var defaultBackground = {\n        start: start,\n        end: end,\n        spec: {\n            attrs: { className: prefix + \"-line-background\", codeStart: start[0], codeEnd: end[0] },\n        },\n        lineBackground: true,\n    };\n    return parent.type !== 'item' && parent.type !== 'blockQuote'\n        ? [\n            __assign$1(__assign$1({}, defaultBackground), { end: start, spec: { attrs: { className: prefix + \"-line-background start\" } } }),\n            __assign$1(__assign$1({}, defaultBackground), { start: [Math.min(start[0] + 1, end[0]), start[1]] }),\n        ]\n        : null;\n}\nfunction codeBlock$1(node, start, end, endLine) {\n    var fenceOffset = node.fenceOffset, fenceLength = node.fenceLength, fenceChar = node.fenceChar, info = node.info, infoPadding = node.infoPadding, parent = node.parent;\n    var fenceEnd = fenceOffset + fenceLength;\n    var marks = [markInfo(setOffsetPos(start, 1), end, CODE_BLOCK)];\n    if (fenceChar) {\n        marks.push(markInfo(start, addOffsetPos(start, fenceEnd), DELIM));\n    }\n    if (info) {\n        marks.push(markInfo(addOffsetPos(start, fenceLength), addOffsetPos(start, fenceLength + infoPadding + info.length), META));\n    }\n    var codeBlockEnd = \"^(\\\\s{0,4})(\" + fenceChar + \"{\" + fenceLength + \",})\";\n    var reCodeBlockEnd = new RegExp(codeBlockEnd);\n    if (reCodeBlockEnd.test(endLine)) {\n        marks.push(markInfo(setOffsetPos(end, 1), end, DELIM));\n    }\n    var lineBackgroundMarkInfo = lineBackground(parent, start, end, 'code-block');\n    return lineBackgroundMarkInfo ? marks.concat(lineBackgroundMarkInfo) : marks;\n}\nfunction customBlock$2(node, start, end) {\n    var _a = node, offset = _a.offset, syntaxLength = _a.syntaxLength, info = _a.info, parent = _a.parent;\n    var syntaxEnd = offset + syntaxLength;\n    var marks = [markInfo(setOffsetPos(start, 1), end, CUSTOM_BLOCK)];\n    marks.push(markInfo(start, addOffsetPos(start, syntaxEnd), DELIM));\n    if (info) {\n        marks.push(markInfo(addOffsetPos(start, syntaxEnd), addOffsetPos(start, syntaxLength + info.length), META));\n    }\n    marks.push(markInfo(setOffsetPos(end, 1), end, DELIM));\n    var lineBackgroundMarkInfo = lineBackground(parent, start, end, 'custom-block');\n    return lineBackgroundMarkInfo ? marks.concat(lineBackgroundMarkInfo) : marks;\n}\nfunction markListItemChildren(node, markType) {\n    var marks = [];\n    while (node) {\n        var type = node.type;\n        if (type === 'paragraph' || type === 'codeBlock') {\n            marks.push(markInfo([getMdStartLine(node), getMdStartCh(node) - 1], [getMdEndLine(node), getMdEndCh(node) + 1], markType));\n        }\n        node = node.next;\n    }\n    return marks;\n}\nfunction markParagraphInBlockQuote(node) {\n    var marks = [];\n    while (node) {\n        marks.push(markInfo([getMdStartLine(node), getMdStartCh(node)], [getMdEndLine(node), getMdEndCh(node) + 1], TEXT));\n        node = node.next;\n    }\n    return marks;\n}\nfunction blockQuote$2(node, start, end) {\n    var marks = node.parent && node.parent.type !== 'blockQuote' ? [markInfo(start, end, BLOCK_QUOTE)] : [];\n    if (node.firstChild) {\n        var childMarks = [];\n        if (node.firstChild.type === 'paragraph') {\n            childMarks = markParagraphInBlockQuote(node.firstChild.firstChild);\n        }\n        else if (node.firstChild.type === 'list') {\n            childMarks = markListItemChildren(node.firstChild, TEXT);\n        }\n        marks = __spreadArray$1(__spreadArray$1([], marks), childMarks);\n    }\n    return marks;\n}\nfunction getSpecOfListItemStyle(node) {\n    var depth = 0;\n    while (node.parent.parent && node.parent.parent.type === 'item') {\n        node = node.parent.parent;\n        depth += 1;\n    }\n    var attrs = [{ odd: true }, { even: true }][depth % 2];\n    return [LIST_ITEM, __assign$1(__assign$1({}, attrs), { listStyle: true })];\n}\nfunction item$1(node, start) {\n    var _a = node.listData, padding = _a.padding, task = _a.task;\n    var spec = getSpecOfListItemStyle(node);\n    var marks = [markInfo.apply(void 0, __spreadArray$1([start, addOffsetPos(start, padding)], spec))];\n    if (task) {\n        marks.push(markInfo(addOffsetPos(start, padding), addOffsetPos(start, padding + 3), TASK_DELIM));\n        marks.push(markInfo(addOffsetPos(start, padding + 1), addOffsetPos(start, padding + 2), META));\n    }\n    return marks.concat(markListItemChildren(node.firstChild, TEXT));\n}\nvar markNodeFuncMap = {\n    heading: heading$1,\n    strong: emphasisAndStrikethrough,\n    emph: emphasisAndStrikethrough,\n    strike: emphasisAndStrikethrough,\n    link: link,\n    image: image$1,\n    code: code,\n    codeBlock: codeBlock$1,\n    blockQuote: blockQuote$2,\n    item: item$1,\n    customBlock: customBlock$2,\n};\nvar simpleMarkClassNameMap = {\n    thematicBreak: THEMATIC_BREAK,\n    table: TABLE,\n    tableCell: TABLE_CELL,\n    htmlInline: HTML,\n};\nfunction getMarkInfo(node, start, end, endLine) {\n    var type = node.type;\n    if (isFunction_1(markNodeFuncMap[type])) {\n        // @ts-ignore\n        return markNodeFuncMap[type](node, start, end, endLine);\n    }\n    if (simpleMarkClassNameMap[type]) {\n        return [markInfo(start, end, simpleMarkClassNameMap[type])];\n    }\n    return null;\n}\n\nvar removingBackgroundIndexMap = {};\nfunction syntaxHighlight(_a) {\n    var schema = _a.schema, toastMark = _a.toastMark;\n    return new Plugin({\n        appendTransaction: function (transactions, _, newState) {\n            var tr = transactions[0];\n            var newTr = newState.tr;\n            if (tr.docChanged) {\n                var markInfo_1 = [];\n                var editResult = tr.getMeta('editResult');\n                editResult.forEach(function (result) {\n                    var nodes = result.nodes, removedNodeRange = result.removedNodeRange;\n                    if (nodes.length) {\n                        markInfo_1 = markInfo_1.concat(getMarkForRemoving(newTr, nodes));\n                        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                            var parent_1 = nodes_1[_i];\n                            var walker = parent_1.walker();\n                            var event_1 = walker.next();\n                            while (event_1) {\n                                var node = event_1.node, entering = event_1.entering;\n                                if (entering) {\n                                    markInfo_1 = markInfo_1.concat(getMarkForAdding(node, toastMark));\n                                }\n                                event_1 = walker.next();\n                            }\n                        }\n                    }\n                    else if (removedNodeRange) {\n                        var maxIndex = newTr.doc.childCount - 1;\n                        var _a = removedNodeRange.line, startLine = _a[0], endLine = _a[1];\n                        var startIndex = Math.min(startLine, maxIndex);\n                        var endIndex = Math.min(endLine, maxIndex);\n                        // cache the index to remove code block, custom block background when there are no adding nodes\n                        for (var i = startIndex; i <= endIndex; i += 1) {\n                            removingBackgroundIndexMap[i] = true;\n                        }\n                    }\n                });\n                appendMarkTr(newTr, schema, markInfo_1);\n            }\n            return newTr.setMeta('widget', tr.getMeta('widget'));\n        },\n    });\n}\nfunction isDifferentBlock(doc, index, attrs) {\n    return Object.keys(attrs).some(function (name) { return attrs[name] !== doc.child(index).attrs[name]; });\n}\nfunction addLineBackground(tr, doc, paragraph, blockPosInfo, attrs) {\n    if (attrs === void 0) { attrs = {}; }\n    var startIndex = blockPosInfo.startIndex, endIndex = blockPosInfo.endIndex, from = blockPosInfo.from, to = blockPosInfo.to;\n    var shouldChangeBlockType = false;\n    for (var i = startIndex; i <= endIndex; i += 1) {\n        // prevent to remove background of the node that need to have background\n        delete removingBackgroundIndexMap[i];\n        shouldChangeBlockType = isDifferentBlock(doc, i, attrs);\n    }\n    if (shouldChangeBlockType) {\n        tr.setBlockType(from, to, paragraph, attrs);\n    }\n}\nfunction appendMarkTr(tr, schema, marks) {\n    var doc = tr.doc;\n    var paragraph = schema.nodes.paragraph;\n    // get start position per line for lazy calculation\n    var startPosListPerLine = getStartPosListPerLine(doc, doc.childCount);\n    marks.forEach(function (_a) {\n        var start = _a.start, end = _a.end, spec = _a.spec, lineBackground = _a.lineBackground;\n        var startIndex = Math.min(start[0], doc.childCount) - 1;\n        var endIndex = Math.min(end[0], doc.childCount) - 1;\n        var startNode = doc.child(startIndex);\n        var endNode = doc.child(endIndex);\n        // calculate the position corresponding to the line\n        var from = startPosListPerLine[startIndex];\n        var to = startPosListPerLine[endIndex];\n        // calculate the position corresponding to the character offset of the line\n        from += start[1] + getWidgetNodePos(startNode, start[1] - 1);\n        to += end[1] + getWidgetNodePos(endNode, end[1] - 1);\n        if (spec) {\n            if (lineBackground) {\n                var posInfo = { from: from, to: to, startIndex: startIndex, endIndex: endIndex };\n                addLineBackground(tr, doc, paragraph, posInfo, spec.attrs);\n            }\n            else {\n                tr.addMark(from, to, schema.mark(spec.type, spec.attrs));\n            }\n        }\n        else {\n            tr.removeMark(from, to);\n        }\n    });\n    removeBlockBackground(tr, startPosListPerLine, paragraph);\n}\nfunction removeBlockBackground(tr, startPosListPerLine, paragraph) {\n    Object.keys(removingBackgroundIndexMap).forEach(function (index) {\n        var startIndex = Number(index);\n        // get the end position of the current line with the next node start position.\n        var endIndex = Math.min(Number(index) + 1, tr.doc.childCount - 1);\n        var from = startPosListPerLine[startIndex];\n        // subtract '1' for getting end position of the line\n        var to = startPosListPerLine[endIndex] - 1;\n        if (startIndex === endIndex) {\n            to += 2;\n        }\n        tr.setBlockType(from, to, paragraph);\n    });\n}\nfunction cacheIndexToRemoveBackground(doc, start, end) {\n    var skipLines = [];\n    removingBackgroundIndexMap = {};\n    for (var i = start[0] - 1; i < end[0]; i += 1) {\n        var node = doc.child(i);\n        var codeEnd = node.attrs.codeEnd;\n        var codeStart = node.attrs.codeStart;\n        if (codeStart && codeEnd && !includes(skipLines, codeStart)) {\n            skipLines.push(codeStart);\n            codeEnd = Math.min(codeEnd, doc.childCount);\n            // should subtract '1' to markdown line position\n            // because markdown parser has '1'(not zero) as the start number\n            var startIndex = codeStart - 1;\n            var endIndex = end[0];\n            for (var index = startIndex; index < endIndex; index += 1) {\n                removingBackgroundIndexMap[index] = true;\n            }\n        }\n    }\n}\nfunction getMarkForRemoving(_a, nodes) {\n    var doc = _a.doc;\n    var start = nodes[0].sourcepos[0];\n    var _b = last$1(nodes).sourcepos, end = _b[1];\n    var startPos = [start[0], start[1]];\n    var endPos = [end[0], end[1] + 1];\n    var marks = [];\n    cacheIndexToRemoveBackground(doc, start, end);\n    marks.push({ start: startPos, end: endPos });\n    return marks;\n}\nfunction getMarkForAdding(node, toastMark) {\n    var lineTexts = toastMark.getLineTexts();\n    var startPos = [getMdStartLine(node), getMdStartCh(node)];\n    var endPos = [getMdEndLine(node), getMdEndCh(node) + 1];\n    var markInfo = getMarkInfo(node, startPos, endPos, lineTexts[endPos[0] - 1]);\n    return markInfo !== null && markInfo !== void 0 ? markInfo : [];\n}\n\nvar defaultToolbarStateKeys = [\n    'taskList',\n    'orderedList',\n    'bulletList',\n    'table',\n    'strong',\n    'emph',\n    'strike',\n    'heading',\n    'thematicBreak',\n    'blockQuote',\n    'code',\n    'codeBlock',\n    'indent',\n    'outdent',\n];\nfunction getToolbarStateType$1(mdNode) {\n    var type = mdNode.type;\n    if (isListNode$1(mdNode)) {\n        if (mdNode.listData.task) {\n            return 'taskList';\n        }\n        return mdNode.listData.type === 'ordered' ? 'orderedList' : 'bulletList';\n    }\n    if (type.indexOf('table') !== -1) {\n        return 'table';\n    }\n    if (!includes(defaultToolbarStateKeys, type)) {\n        return null;\n    }\n    return type;\n}\nfunction getToolbarState$1(targetNode) {\n    var toolbarState = {\n        indent: { active: false, disabled: true },\n        outdent: { active: false, disabled: true },\n    };\n    var listEnabled = true;\n    traverseParentNodes(targetNode, function (mdNode) {\n        var type = getToolbarStateType$1(mdNode);\n        if (!type) {\n            return;\n        }\n        if (type === 'bulletList' || type === 'orderedList') {\n            // to apply the nearlist list state in the nested list\n            if (listEnabled) {\n                toolbarState[type] = { active: true };\n                toolbarState.indent.disabled = false;\n                toolbarState.outdent.disabled = false;\n                listEnabled = false;\n            }\n        }\n        else {\n            toolbarState[type] = { active: true };\n        }\n    });\n    return toolbarState;\n}\nfunction previewHighlight(_a) {\n    var toastMark = _a.toastMark, eventEmitter = _a.eventEmitter;\n    return new Plugin({\n        view: function () {\n            return {\n                update: function (view, prevState) {\n                    var state = view.state;\n                    var doc = state.doc, selection = state.selection;\n                    if (prevState && prevState.doc.eq(doc) && prevState.selection.eq(selection)) {\n                        return;\n                    }\n                    var from = selection.from;\n                    var startChOffset = state.doc.resolve(from).start();\n                    var line = state.doc.content.findIndex(from).index + 1;\n                    var ch = from - startChOffset;\n                    if (from === startChOffset) {\n                        ch += 1;\n                    }\n                    var cursorPos = [line, ch];\n                    var mdNode = toastMark.findNodeAtPosition(cursorPos);\n                    var toolbarState = getToolbarState$1(mdNode);\n                    eventEmitter.emit('changeToolbarState', {\n                        cursorPos: cursorPos,\n                        mdNode: mdNode,\n                        toolbarState: toolbarState,\n                    });\n                    eventEmitter.emit('setFocusedNode', mdNode);\n                },\n            };\n        },\n    });\n}\n\nvar Doc$1 = /** @class */ (function (_super) {\n    __extends$1(Doc, _super);\n    function Doc() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Doc.prototype, \"name\", {\n        get: function () {\n            return 'doc';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Doc.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'block+',\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Doc;\n}(Node$2));\n\nvar Mark = /** @class */ (function () {\n    function Mark() {\n    }\n    Object.defineProperty(Mark.prototype, \"type\", {\n        get: function () {\n            return 'mark';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Mark.prototype.setContext = function (context) {\n        this.context = context;\n    };\n    return Mark;\n}());\n\nfunction getTextByMdLine(doc, mdLine) {\n    return getTextContent(doc, mdLine - 1);\n}\nfunction getTextContent(doc, index) {\n    return doc.child(index).textContent;\n}\n\nvar reBlockQuote = /^\\s*> ?/;\nvar BlockQuote$1 = /** @class */ (function (_super) {\n    __extends$1(BlockQuote, _super);\n    function BlockQuote() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BlockQuote.prototype, \"name\", {\n        get: function () {\n            return 'blockQuote';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlockQuote.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('block-quote') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BlockQuote.prototype.createBlockQuoteText = function (text, isBlockQuote) {\n        return isBlockQuote ? text.replace(reBlockQuote, '').trim() : \"> \" + text.trim();\n    };\n    BlockQuote.prototype.extendBlockQuote = function () {\n        var _this = this;\n        return function (_a, dispatch) {\n            var selection = _a.selection, doc = _a.doc, tr = _a.tr, schema = _a.schema;\n            var _b = getRangeInfo(selection), endFromOffset = _b.endFromOffset, endToOffset = _b.endToOffset, endIndex = _b.endIndex, to = _b.to;\n            var textContent = getTextContent(doc, endIndex);\n            var isBlockQuote = reBlockQuote.test(textContent);\n            if (isBlockQuote && to > endFromOffset && selection.empty) {\n                var isEmpty = !textContent.replace(reBlockQuote, '').trim();\n                if (isEmpty) {\n                    tr.deleteRange(endFromOffset, endToOffset).split(tr.mapping.map(endToOffset));\n                }\n                else {\n                    var slicedText = textContent.slice(to - endFromOffset).trim();\n                    var node = createTextNode$1(schema, _this.createBlockQuoteText(slicedText));\n                    splitAndExtendBlock(tr, endToOffset, slicedText, node);\n                }\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        };\n    };\n    BlockQuote.prototype.commands = function () {\n        var _this = this;\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, doc = state.doc;\n            var _a = getRangeInfo(selection), startFromOffset = _a.startFromOffset, endToOffset = _a.endToOffset, startIndex = _a.startIndex, endIndex = _a.endIndex;\n            var isBlockQuote = reBlockQuote.test(getTextContent(doc, startIndex));\n            var tr = replaceTextNode({\n                state: state,\n                startIndex: startIndex,\n                endIndex: endIndex,\n                from: startFromOffset,\n                createText: function (textContent) { return _this.createBlockQuoteText(textContent, isBlockQuote); },\n            });\n            dispatch(tr.setSelection(createTextSelection(tr, tr.mapping.map(endToOffset))));\n            return true;\n        }; };\n    };\n    BlockQuote.prototype.keymaps = function () {\n        var blockQuoteCommand = this.commands()();\n        return {\n            'alt-q': blockQuoteCommand,\n            'alt-Q': blockQuoteCommand,\n            Enter: this.extendBlockQuote(),\n        };\n    };\n    return BlockQuote;\n}(Mark));\n\nvar reList = /(^\\s*)([-*+] |[\\d]+\\. )/;\nvar reOrderedList = /(^\\s*)([\\d])+\\.( \\[[ xX]])? /;\nvar reOrderedListGroup = /^(\\s*)((\\d+)([.)]\\s(?:\\[(?:x|\\s)\\]\\s)?))(.*)/;\nvar reCanBeTaskList = /(^\\s*)([-*+]|[\\d]+\\.)( \\[[ xX]])? /;\nvar reBulletListGroup = /^(\\s*)([-*+]+(\\s(?:\\[(?:x|\\s)\\]\\s)?))(.*)/;\nvar reTaskList = /(^\\s*)([-*+] |[\\d]+\\. )(\\[[ xX]] )/;\nvar reBulletTaskList = /(^\\s*)([-*+])( \\[[ xX]]) /;\nfunction getListType(text) {\n    return reOrderedList.test(text) ? 'ordered' : 'bullet';\n}\nfunction getListDepth(mdNode) {\n    var depth = 0;\n    while (mdNode && mdNode.type !== 'document') {\n        if (mdNode.type === 'list') {\n            depth += 1;\n        }\n        mdNode = mdNode.parent;\n    }\n    return depth;\n}\nfunction findSameDepthList(toastMark, currentLine, depth, backward) {\n    var lineTexts = toastMark.getLineTexts();\n    var lineLen = lineTexts.length;\n    var result = [];\n    var line = currentLine;\n    while (backward ? line < lineLen : line > 1) {\n        line = backward ? line + 1 : line - 1;\n        var mdNode = toastMark.findFirstNodeAtLine(line);\n        var currentListDepth = getListDepth(mdNode);\n        if (currentListDepth === depth) {\n            result.push({ line: line, depth: depth, mdNode: mdNode });\n        }\n        else if (currentListDepth < depth) {\n            break;\n        }\n    }\n    return result;\n}\nfunction getSameDepthItems(_a) {\n    var toastMark = _a.toastMark, mdNode = _a.mdNode, line = _a.line;\n    var depth = getListDepth(mdNode);\n    var forwardList = findSameDepthList(toastMark, line, depth, false).reverse();\n    var backwardList = findSameDepthList(toastMark, line, depth, true);\n    return forwardList.concat([{ line: line, depth: depth, mdNode: mdNode }]).concat(backwardList);\n}\nfunction textToBullet(text) {\n    if (!reList.test(text)) {\n        return \"* \" + text;\n    }\n    var type = getListType(text);\n    if (type === 'bullet' && reCanBeTaskList.test(text)) {\n        text = text.replace(reBulletTaskList, '$1$2 ');\n    }\n    else if (type === 'ordered') {\n        text = text.replace(reOrderedList, '$1* ');\n    }\n    return text;\n}\nfunction textToOrdered(text, ordinalNum) {\n    if (!reList.test(text)) {\n        return ordinalNum + \". \" + text;\n    }\n    var type = getListType(text);\n    if (type === 'bullet' || (type === 'ordered' && reCanBeTaskList.test(text))) {\n        text = text.replace(reCanBeTaskList, \"$1\" + ordinalNum + \". \");\n    }\n    else if (type === 'ordered') {\n        // eslint-disable-next-line prefer-destructuring\n        var start = reOrderedListGroup.exec(text)[3];\n        if (Number(start) !== ordinalNum) {\n            text = text.replace(reOrderedList, \"$1\" + ordinalNum + \". \");\n        }\n    }\n    return text;\n}\nfunction getChangedInfo(doc, sameDepthItems, type, start) {\n    if (start === void 0) { start = 0; }\n    var firstIndex = Number.MAX_VALUE;\n    var lastIndex = 0;\n    var changedResults = sameDepthItems.map(function (_a, index) {\n        var line = _a.line;\n        firstIndex = Math.min(line - 1, firstIndex);\n        lastIndex = Math.max(line - 1, lastIndex);\n        var text = getTextByMdLine(doc, line);\n        text = type === 'bullet' ? textToBullet(text) : textToOrdered(text, index + 1 + start);\n        return { text: text, line: line };\n    });\n    return { changedResults: changedResults, firstIndex: firstIndex, lastIndex: lastIndex };\n}\nfunction getBulletOrOrdered(type, context) {\n    var sameDepthListInfo = getSameDepthItems(context);\n    return getChangedInfo(context.doc, sameDepthListInfo, type);\n}\nvar otherListToList = {\n    bullet: function (context) {\n        return getBulletOrOrdered('bullet', context);\n    },\n    ordered: function (context) {\n        return getBulletOrOrdered('ordered', context);\n    },\n    task: function (_a) {\n        var mdNode = _a.mdNode, doc = _a.doc, line = _a.line;\n        var text = getTextByMdLine(doc, line);\n        if (mdNode.listData.task) {\n            text = text.replace(reTaskList, '$1$2');\n        }\n        else if (isListNode$1(mdNode)) {\n            text = text.replace(reList, '$1$2[ ] ');\n        }\n        return { changedResults: [{ text: text, line: line }] };\n    },\n};\nvar otherNodeToList = {\n    bullet: function (_a) {\n        var doc = _a.doc, line = _a.line;\n        var lineText = getTextByMdLine(doc, line);\n        var changedResults = [{ text: \"* \" + lineText, line: line }];\n        return { changedResults: changedResults };\n    },\n    ordered: function (_a) {\n        var toastMark = _a.toastMark, doc = _a.doc, line = _a.line, startLine = _a.startLine;\n        var lineText = getTextByMdLine(doc, line);\n        var firstOrderedListNum = 1;\n        var firstOrderedListLine = startLine;\n        var skipped = 0;\n        for (var i = startLine - 1; i > 0; i -= 1) {\n            var mdNode = toastMark.findFirstNodeAtLine(i);\n            var text = getTextByMdLine(doc, i);\n            var canBeListNode = text && !!findClosestNode(mdNode, function (targetNode) { return isListNode$1(targetNode); });\n            var searchResult = reOrderedListGroup.exec(getTextByMdLine(doc, i));\n            if (!searchResult && !canBeListNode) {\n                break;\n            }\n            if (!searchResult && canBeListNode) {\n                skipped += 1;\n                continue;\n            }\n            var _b = searchResult, indent = _b[1], start = _b[3];\n            // basis on one depth list\n            if (!indent) {\n                firstOrderedListNum = Number(start);\n                firstOrderedListLine = i;\n                break;\n            }\n        }\n        var ordinalNum = firstOrderedListNum + line - firstOrderedListLine - skipped;\n        var changedResults = [{ text: ordinalNum + \". \" + lineText, line: line }];\n        return { changedResults: changedResults };\n    },\n    task: function (_a) {\n        var doc = _a.doc, line = _a.line;\n        var lineText = getTextByMdLine(doc, line);\n        var changedResults = [{ text: \"* [ ] \" + lineText, line: line }];\n        return { changedResults: changedResults };\n    },\n};\nvar extendList = {\n    bullet: function (_a) {\n        var line = _a.line, doc = _a.doc;\n        var lineText = getTextByMdLine(doc, line);\n        var _b = reBulletListGroup.exec(lineText), indent = _b[1], delimiter = _b[2];\n        return { listSyntax: \"\" + indent + delimiter };\n    },\n    ordered: function (_a) {\n        var toastMark = _a.toastMark, line = _a.line, mdNode = _a.mdNode, doc = _a.doc;\n        var depth = getListDepth(mdNode);\n        var lineText = getTextByMdLine(doc, line);\n        var _b = reOrderedListGroup.exec(lineText), indent = _b[1], start = _b[3], delimiter = _b[4];\n        var ordinalNum = Number(start) + 1;\n        var listSyntax = \"\" + indent + ordinalNum + delimiter;\n        var backwardList = findSameDepthList(toastMark, line, depth, true);\n        var filteredList = backwardList.filter(function (info) {\n            var searchResult = reOrderedListGroup.exec(getTextByMdLine(doc, info.line));\n            return (searchResult &&\n                searchResult[1].length === indent.length &&\n                !!findClosestNode(info.mdNode, function (targetNode) { return isOrderedListNode(targetNode); }));\n        });\n        return __assign$1({ listSyntax: listSyntax }, getChangedInfo(doc, filteredList, 'ordered', ordinalNum));\n    },\n};\nfunction getReorderedListInfo(doc, schema, line, ordinalNum, prevIndentLength) {\n    var nodes = [];\n    var lineText = getTextByMdLine(doc, line);\n    var searchResult = reOrderedListGroup.exec(lineText);\n    while (searchResult) {\n        var indent = searchResult[1], delimiter = searchResult[4], text = searchResult[5];\n        var indentLength = indent.length;\n        if (indentLength === prevIndentLength) {\n            nodes.push(createTextNode$1(schema, \"\" + indent + ordinalNum + delimiter + text));\n            ordinalNum += 1;\n            line += 1;\n        }\n        else if (indentLength > prevIndentLength) {\n            var nestedListInfo = getReorderedListInfo(doc, schema, line, 1, indentLength);\n            line = nestedListInfo.line;\n            nodes = nodes.concat(nestedListInfo.nodes);\n        }\n        if (indentLength < prevIndentLength || line > doc.childCount) {\n            break;\n        }\n        lineText = getTextByMdLine(doc, line);\n        searchResult = reOrderedListGroup.exec(lineText);\n    }\n    return { nodes: nodes, line: line };\n}\n\nvar reStartSpace = /(^\\s{1,4})(.*)/;\nfunction isBlockUnit(from, to, text) {\n    return from < to || reList.test(text) || reBlockQuote.test(text);\n}\nfunction isInTableCellNode(doc, schema, selection) {\n    var $pos = selection.$from;\n    if ($pos.depth === 0) {\n        $pos = doc.resolve($pos.pos - 1);\n    }\n    var node = $pos.node(1);\n    var startOffset = $pos.start(1);\n    var contentSize = node.content.size;\n    return (node.rangeHasMark(0, contentSize, schema.marks.table) &&\n        $pos.pos - startOffset !== contentSize &&\n        $pos.pos !== startOffset);\n}\nfunction createSelection(tr, posInfo) {\n    var from = posInfo.from, to = posInfo.to;\n    if (posInfo.type === 'indent') {\n        var softTabLen = 4;\n        from += softTabLen;\n        to += (posInfo.lineLen + 1) * softTabLen;\n    }\n    else {\n        var spaceLenList = posInfo.spaceLenList;\n        from -= spaceLenList[0];\n        for (var i = 0; i < spaceLenList.length; i += 1) {\n            to -= spaceLenList[i];\n        }\n    }\n    return createTextSelection(tr, from, to);\n}\nvar Paragraph$1 = /** @class */ (function (_super) {\n    __extends$1(Paragraph, _super);\n    function Paragraph() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Paragraph.prototype, \"name\", {\n        get: function () {\n            return 'paragraph';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Paragraph.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'inline*',\n                attrs: {\n                    className: { default: null },\n                    codeStart: { default: null },\n                    codeEnd: { default: null },\n                },\n                selectable: false,\n                group: 'block',\n                parseDOM: [{ tag: 'div' }],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return attrs.className\n                        ? ['div', { class: clsWithMdPrefix(attrs.className) }, 0]\n                        : ['div', 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Paragraph.prototype.reorderList = function (startLine, endLine) {\n        var _a = this.context, view = _a.view, toastMark = _a.toastMark, schema = _a.schema;\n        var _b = view.state, tr = _b.tr, selection = _b.selection, doc = _b.doc;\n        var mdNode = toastMark.findFirstNodeAtLine(startLine);\n        var topListNode = mdNode;\n        while (mdNode && !isBulletListNode(mdNode) && mdNode.parent.type !== 'document') {\n            mdNode = mdNode.parent;\n            if (isOrderedListNode(mdNode)) {\n                topListNode = mdNode;\n                break;\n            }\n        }\n        if (topListNode) {\n            startLine = topListNode.sourcepos[0][0];\n        }\n        var _c = reOrderedListGroup.exec(getTextByMdLine(doc, startLine)), indent = _c[1], start = _c[3];\n        var indentLen = indent.length;\n        var _d = getReorderedListInfo(doc, schema, startLine, Number(start), indentLen), line = _d.line, nodes = _d.nodes;\n        endLine = Math.max(endLine, line - 1);\n        var startOffset = getNodeContentOffsetRange(doc, startLine - 1).startOffset;\n        for (var i = startLine - 1; i <= endLine - 1; i += 1) {\n            var _e = doc.child(i), nodeSize = _e.nodeSize, content = _e.content;\n            var mappedFrom = tr.mapping.map(startOffset);\n            var mappedTo = mappedFrom + content.size;\n            tr.replaceWith(mappedFrom, mappedTo, nodes[i - startLine + 1]);\n            startOffset += nodeSize;\n        }\n        var newSelection = createTextSelection(tr, selection.from, selection.to);\n        view.dispatch(tr.setSelection(newSelection));\n    };\n    Paragraph.prototype.indent = function (tabKey) {\n        var _this = this;\n        if (tabKey === void 0) { tabKey = false; }\n        return function () { return function (state, dispatch) {\n            var schema = state.schema, selection = state.selection, doc = state.doc;\n            var _a = getRangeInfo(selection), from = _a.from, to = _a.to, startFromOffset = _a.startFromOffset, startIndex = _a.startIndex, endIndex = _a.endIndex;\n            if (tabKey && isInTableCellNode(doc, schema, selection)) {\n                return false;\n            }\n            var startLineText = getTextContent(doc, startIndex);\n            if ((tabKey && isBlockUnit(from, to, startLineText)) ||\n                (!tabKey && reList.test(startLineText))) {\n                var tr = replaceTextNode({\n                    state: state,\n                    from: startFromOffset,\n                    startIndex: startIndex,\n                    endIndex: endIndex,\n                    createText: function (textContent) { return \"    \" + textContent; },\n                });\n                var posInfo = {\n                    type: 'indent',\n                    from: from,\n                    to: to,\n                    lineLen: endIndex - startIndex,\n                };\n                dispatch(tr.setSelection(createSelection(tr, posInfo)));\n                if (reOrderedListGroup.test(startLineText)) {\n                    _this.reorderList(startIndex + 1, endIndex + 1);\n                }\n            }\n            else if (tabKey) {\n                dispatch(state.tr.insert(to, createTextNode$1(schema, '    ')));\n            }\n            return true;\n        }; };\n    };\n    Paragraph.prototype.outdent = function (tabKey) {\n        var _this = this;\n        if (tabKey === void 0) { tabKey = false; }\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, doc = state.doc, schema = state.schema;\n            var _a = getRangeInfo(selection), from = _a.from, to = _a.to, startFromOffset = _a.startFromOffset, startIndex = _a.startIndex, endIndex = _a.endIndex;\n            if (tabKey && isInTableCellNode(doc, schema, selection)) {\n                return false;\n            }\n            var startLineText = getTextContent(doc, startIndex);\n            if ((tabKey && isBlockUnit(from, to, startLineText)) ||\n                (!tabKey && reList.test(startLineText))) {\n                var spaceLenList_1 = [];\n                var tr = replaceTextNode({\n                    state: state,\n                    from: startFromOffset,\n                    startIndex: startIndex,\n                    endIndex: endIndex,\n                    createText: function (textContent) {\n                        var searchResult = reStartSpace.exec(textContent);\n                        spaceLenList_1.push(searchResult ? searchResult[1].length : 0);\n                        return textContent.replace(reStartSpace, '$2');\n                    },\n                });\n                var posInfo = { type: 'outdent', from: from, to: to, spaceLenList: spaceLenList_1 };\n                dispatch(tr.setSelection(createSelection(tr, posInfo)));\n                if (reOrderedListGroup.test(startLineText)) {\n                    _this.reorderList(startIndex + 1, endIndex + 1);\n                }\n            }\n            else if (tabKey) {\n                var startText = startLineText.slice(0, to - startFromOffset);\n                var startTextWithoutSpace = startText.replace(/\\s{1,4}$/, '');\n                var deletStart = to - (startText.length - startTextWithoutSpace.length);\n                dispatch(state.tr.delete(deletStart, to));\n            }\n            return true;\n        }; };\n    };\n    Paragraph.prototype.deleteLines = function () {\n        var _this = this;\n        return function (state, dispatch) {\n            var view = _this.context.view;\n            var _a = getRangeInfo(state.selection), startFromOffset = _a.startFromOffset, endToOffset = _a.endToOffset;\n            var deleteRange = function () {\n                dispatch(state.tr.deleteRange(startFromOffset, endToOffset));\n                return true;\n            };\n            return chainCommands(deleteRange, joinForward)(state, dispatch, view);\n        };\n    };\n    Paragraph.prototype.moveDown = function () {\n        return function (state, dispatch) {\n            var doc = state.doc, tr = state.tr, selection = state.selection, schema = state.schema;\n            var _a = getRangeInfo(selection), startFromOffset = _a.startFromOffset, endToOffset = _a.endToOffset, endIndex = _a.endIndex;\n            if (endIndex < doc.content.childCount - 1) {\n                var _b = doc.child(endIndex + 1), nodeSize = _b.nodeSize, textContent = _b.textContent;\n                tr.delete(endToOffset, endToOffset + nodeSize)\n                    .split(startFromOffset)\n                    // subtract 2(start, end tag length) to insert prev line\n                    .insert(tr.mapping.map(startFromOffset) - 2, createTextNode$1(schema, textContent));\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        };\n    };\n    Paragraph.prototype.moveUp = function () {\n        return function (state, dispatch) {\n            var tr = state.tr, doc = state.doc, selection = state.selection, schema = state.schema;\n            var _a = getRangeInfo(selection), startFromOffset = _a.startFromOffset, endToOffset = _a.endToOffset, startIndex = _a.startIndex;\n            if (startIndex > 0) {\n                var _b = doc.child(startIndex - 1), nodeSize = _b.nodeSize, textContent = _b.textContent;\n                tr.delete(startFromOffset - nodeSize, startFromOffset)\n                    .split(tr.mapping.map(endToOffset))\n                    .insert(tr.mapping.map(endToOffset), createTextNode$1(schema, textContent));\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        };\n    };\n    Paragraph.prototype.commands = function () {\n        return {\n            indent: this.indent(),\n            outdent: this.outdent(),\n        };\n    };\n    Paragraph.prototype.keymaps = function () {\n        return {\n            Tab: this.indent(true)(),\n            'Shift-Tab': this.outdent(true)(),\n            'Mod-d': this.deleteLines(),\n            'Mod-D': this.deleteLines(),\n            'Alt-ArrowUp': this.moveUp(),\n            'Alt-ArrowDown': this.moveDown(),\n        };\n    };\n    return Paragraph;\n}(Node$2));\n\nvar Text$1 = /** @class */ (function (_super) {\n    __extends$1(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Text.prototype, \"name\", {\n        get: function () {\n            return 'text';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"schema\", {\n        get: function () {\n            return {\n                group: 'inline',\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Text;\n}(Node$2));\n\nvar reHeading = /^#{1,6}\\s/;\nvar Heading$1 = /** @class */ (function (_super) {\n    __extends$1(Heading, _super);\n    function Heading() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Heading.prototype, \"name\", {\n        get: function () {\n            return 'heading';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Heading.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: {\n                    level: { default: 1 },\n                    seText: { default: false },\n                },\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    var level = attrs.level, seText = attrs.seText;\n                    var classNames = \"heading|heading\" + level;\n                    if (seText) {\n                        classNames += '|delimiter|setext';\n                    }\n                    return ['span', { class: clsWithMdPrefix.apply(void 0, classNames.split('|')) }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Heading.prototype.createHeadingText = function (level, text, curHeadingSyntax) {\n        var textContent = text.replace(curHeadingSyntax, '').trim();\n        var headingText = '';\n        while (level > 0) {\n            headingText += '#';\n            level -= 1;\n        }\n        return headingText + \" \" + textContent;\n    };\n    Heading.prototype.commands = function () {\n        var _this = this;\n        return function (payload) { return function (state, dispatch) {\n            var level = payload.level;\n            var _a = getRangeInfo(state.selection), startFromOffset = _a.startFromOffset, endToOffset = _a.endToOffset, startIndex = _a.startIndex, endIndex = _a.endIndex;\n            var tr = replaceTextNode({\n                state: state,\n                from: startFromOffset,\n                startIndex: startIndex,\n                endIndex: endIndex,\n                createText: function (textContent) {\n                    var matchedHeading = textContent.match(reHeading);\n                    var curHeadingSyntax = matchedHeading ? matchedHeading[0] : '';\n                    return _this.createHeadingText(level, textContent, curHeadingSyntax);\n                },\n            });\n            dispatch(tr.setSelection(createTextSelection(tr, tr.mapping.map(endToOffset))));\n            return true;\n        }; };\n    };\n    return Heading;\n}(Mark));\n\nvar fencedCodeBlockSyntax = '```';\nvar CodeBlock$1 = /** @class */ (function (_super) {\n    __extends$1(CodeBlock, _super);\n    function CodeBlock() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CodeBlock.prototype, \"name\", {\n        get: function () {\n            return 'codeBlock';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CodeBlock.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('code-block') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CodeBlock.prototype.commands = function () {\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, schema = state.schema, tr = state.tr;\n            var _a = getRangeInfo(selection), startFromOffset = _a.startFromOffset, endToOffset = _a.endToOffset;\n            var fencedNode = createTextNode$1(schema, fencedCodeBlockSyntax);\n            // add fenced start block\n            tr.insert(startFromOffset, fencedNode).split(startFromOffset + fencedCodeBlockSyntax.length);\n            // add fenced end block\n            tr.split(tr.mapping.map(endToOffset)).insert(tr.mapping.map(endToOffset), fencedNode);\n            dispatch(tr.setSelection(\n            // subtract fenced syntax length and open, close tag(2)\n            createTextSelection(tr, tr.mapping.map(endToOffset) - (fencedCodeBlockSyntax.length + 2))));\n            return true;\n        }; };\n    };\n    CodeBlock.prototype.keepIndentation = function () {\n        var _this = this;\n        return function (_a, dispatch) {\n            var selection = _a.selection, tr = _a.tr, doc = _a.doc, schema = _a.schema;\n            var toastMark = _this.context.toastMark;\n            var _b = getRangeInfo(selection), startFromOffset = _b.startFromOffset, endToOffset = _b.endToOffset, endIndex = _b.endIndex, from = _b.from, to = _b.to;\n            var textContent = getTextContent(doc, endIndex);\n            if (from === to && textContent.trim()) {\n                var matched = textContent.match(/^\\s+/);\n                var mdNode = toastMark.findFirstNodeAtLine(endIndex + 1);\n                if (isCodeBlockNode(mdNode) && matched) {\n                    var spaces = matched[0];\n                    var slicedText = textContent.slice(to - startFromOffset);\n                    var node = createTextNode$1(schema, spaces + slicedText);\n                    splitAndExtendBlock(tr, endToOffset, slicedText, node);\n                    dispatch(tr);\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    CodeBlock.prototype.keymaps = function () {\n        var codeBlockCommand = this.commands()();\n        return {\n            'Shift-Mod-p': codeBlockCommand,\n            'Shift-Mod-P': codeBlockCommand,\n            Enter: this.keepIndentation(),\n        };\n    };\n    return CodeBlock;\n}(Mark));\n\nvar reEmptyTable = /\\||\\s/g;\nfunction createTableHeader(columnCount) {\n    return [createTableRow(columnCount), createTableRow(columnCount, true)];\n}\nfunction createTableBody$1(columnCount, rowCount) {\n    var bodyRows = [];\n    for (var i = 0; i < rowCount; i += 1) {\n        bodyRows.push(createTableRow(columnCount));\n    }\n    return bodyRows;\n}\nfunction createTableRow(columnCount, delim) {\n    var row = '|';\n    for (var i = 0; i < columnCount; i += 1) {\n        row += delim ? ' --- |' : '  |';\n    }\n    return row;\n}\nfunction createTargetTypes(moveNext) {\n    return moveNext\n        ? { type: 'next', parentType: 'tableHead', childType: 'firstChild' }\n        : { type: 'prev', parentType: 'tableBody', childType: 'lastChild' };\n}\nvar Table$1 = /** @class */ (function (_super) {\n    __extends$1(Table, _super);\n    function Table() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Table.prototype, \"name\", {\n        get: function () {\n            return 'table';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('table') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Table.prototype.extendTable = function () {\n        var _this = this;\n        return function (_a, dispatch) {\n            var selection = _a.selection, doc = _a.doc, tr = _a.tr, schema = _a.schema;\n            if (!selection.empty) {\n                return false;\n            }\n            var _b = getRangeInfo(selection), endFromOffset = _b.endFromOffset, endToOffset = _b.endToOffset, endIndex = _b.endIndex, to = _b.to;\n            var textContent = getTextContent(doc, endIndex);\n            // should add `1` to line for the markdown parser\n            // because markdown parser has `1`(not zero) as the start number\n            var mdPos = [endIndex + 1, to - endFromOffset + 1];\n            var mdNode = _this.context.toastMark.findNodeAtPosition(mdPos);\n            var cellNode = findClosestNode(mdNode, function (node) {\n                return isTableCellNode(node) &&\n                    (node.parent.type === 'tableDelimRow' || node.parent.parent.type === 'tableBody');\n            });\n            if (cellNode) {\n                var isEmpty = !textContent.replace(reEmptyTable, '').trim();\n                var parent_1 = cellNode.parent;\n                var columnCount = parent_1.parent.parent.columns.length;\n                var row = createTableRow(columnCount);\n                if (isEmpty) {\n                    tr.deleteRange(endFromOffset, endToOffset).split(tr.mapping.map(endToOffset));\n                }\n                else {\n                    tr\n                        .split(endToOffset)\n                        .insert(tr.mapping.map(endToOffset), createTextNode$1(schema, row))\n                        // should subtract `2` to selection end position considering ` |` text\n                        .setSelection(createTextSelection(tr, tr.mapping.map(endToOffset) - 2));\n                }\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        };\n    };\n    Table.prototype.moveTableCell = function (moveNext) {\n        var _this = this;\n        return function (_a, dispatch) {\n            var selection = _a.selection, tr = _a.tr;\n            var _b = getRangeInfo(selection), endFromOffset = _b.endFromOffset, endIndex = _b.endIndex, to = _b.to;\n            var mdPos = [endIndex + 1, to - endFromOffset];\n            var mdNode = _this.context.toastMark.findNodeAtPosition(mdPos);\n            var cellNode = findClosestNode(mdNode, function (node) { return isTableCellNode(node); });\n            if (cellNode) {\n                var parent_2 = cellNode.parent;\n                var _c = createTargetTypes(moveNext), type = _c.type, parentType = _c.parentType, childType = _c.childType;\n                var chOffset = getMdEndCh(cellNode);\n                if (cellNode[type]) {\n                    chOffset = getMdEndCh(cellNode[type]) - 1;\n                }\n                else {\n                    var row = !parent_2[type] && parent_2.parent.type === parentType\n                        ? parent_2.parent[type][childType]\n                        : parent_2[type];\n                    if (type === 'next') {\n                        // if there is next row, the base offset would be end position of the next row's first child.\n                        // Otherwise, the base offset is zero.\n                        var baseOffset = row ? getMdEndCh(row[childType]) : 0;\n                        // calculate tag(open, close) position('2') for selection\n                        chOffset += baseOffset + 2;\n                    }\n                    else if (type === 'prev') {\n                        // if there is prev row, the target position would be '-4' for calculating ' |' characters and tag(open, close)\n                        // Otherwise, the target position is zero.\n                        chOffset = row ? -4 : 0;\n                    }\n                }\n                dispatch(tr.setSelection(createTextSelection(tr, endFromOffset + chOffset)));\n                return true;\n            }\n            return false;\n        };\n    };\n    Table.prototype.addTable = function () {\n        return function (payload) { return function (_a, dispatch) {\n            var selection = _a.selection, tr = _a.tr, schema = _a.schema;\n            var _b = payload, columnCount = _b.columnCount, rowCount = _b.rowCount;\n            var endToOffset = getRangeInfo(selection).endToOffset;\n            var headerRows = createTableHeader(columnCount);\n            var bodyRows = createTableBody$1(columnCount, rowCount - 1);\n            var rows = __spreadArray$1(__spreadArray$1([], headerRows), bodyRows);\n            rows.forEach(function (row) {\n                tr.split(tr.mapping.map(endToOffset)).insert(tr.mapping.map(endToOffset), createTextNode$1(schema, row));\n            });\n            // should add `4` to selection position considering `| ` text and start block tag length\n            dispatch(tr.setSelection(createTextSelection(tr, endToOffset + 4)));\n            return true;\n        }; };\n    };\n    Table.prototype.commands = function () {\n        return { addTable: this.addTable() };\n    };\n    Table.prototype.keymaps = function () {\n        return {\n            Enter: this.extendTable(),\n            Tab: this.moveTableCell(true),\n            'Shift-Tab': this.moveTableCell(false),\n        };\n    };\n    return Table;\n}(Mark));\n\nvar thematicBreakSyntax = '***';\nvar ThematicBreak$1 = /** @class */ (function (_super) {\n    __extends$1(ThematicBreak, _super);\n    function ThematicBreak() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ThematicBreak.prototype, \"name\", {\n        get: function () {\n            return 'thematicBreak';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ThematicBreak.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('thematic-break') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ThematicBreak.prototype.hr = function () {\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, schema = state.schema, tr = state.tr;\n            var _a = getRangeInfo(selection), from = _a.from, to = _a.to, endToOffset = _a.endToOffset;\n            var node = createTextNode$1(schema, thematicBreakSyntax);\n            tr\n                .split(from)\n                .replaceWith(tr.mapping.map(from), tr.mapping.map(to), node)\n                .split(tr.mapping.map(to)).setSelection(createTextSelection(tr, tr.mapping.map(endToOffset)));\n            dispatch(tr);\n            return true;\n        }; };\n    };\n    ThematicBreak.prototype.commands = function () {\n        return { hr: this.hr() };\n    };\n    ThematicBreak.prototype.keymaps = function () {\n        var lineCommand = this.hr()();\n        return { 'Mod-l': lineCommand, 'Mod-L': lineCommand };\n    };\n    return ThematicBreak;\n}(Mark));\n\nfunction cannotBeListNode(_a, line) {\n    var type = _a.type, sourcepos = _a.sourcepos;\n    // eslint-disable-next-line prefer-destructuring\n    var startLine = sourcepos[0][0];\n    return line <= startLine && (type === 'codeBlock' || type === 'heading' || type.match('table'));\n}\nvar ListItem$1 = /** @class */ (function (_super) {\n    __extends$1(ListItem, _super);\n    function ListItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ListItem.prototype, \"name\", {\n        get: function () {\n            return 'listItem';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListItem.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: {\n                    odd: { default: false },\n                    even: { default: false },\n                    listStyle: { default: false },\n                },\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    var odd = attrs.odd, even = attrs.even, listStyle = attrs.listStyle;\n                    var classNames = 'list-item';\n                    if (listStyle) {\n                        classNames += '|list-item-style';\n                    }\n                    if (odd) {\n                        classNames += '|list-item-odd';\n                    }\n                    if (even) {\n                        classNames += '|list-item-even';\n                    }\n                    return ['span', { class: clsWithMdPrefix.apply(void 0, classNames.split('|')) }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListItem.prototype.extendList = function () {\n        var _this = this;\n        return function (_a, dispatch) {\n            var selection = _a.selection, doc = _a.doc, schema = _a.schema, tr = _a.tr;\n            var toastMark = _this.context.toastMark;\n            var _b = getRangeInfo(selection), to = _b.to, startFromOffset = _b.startFromOffset, endFromOffset = _b.endFromOffset, endIndex = _b.endIndex, endToOffset = _b.endToOffset;\n            var textContent = getTextContent(doc, endIndex);\n            var isList = reList.test(textContent);\n            if (!isList || selection.from === startFromOffset || !selection.empty) {\n                return false;\n            }\n            var isEmpty = !textContent.replace(reCanBeTaskList, '').trim();\n            if (isEmpty) {\n                tr.deleteRange(endFromOffset, endToOffset).split(tr.mapping.map(endToOffset));\n            }\n            else {\n                var commandType = getListType(textContent);\n                // should add `1` to line for the markdown parser\n                // because markdown parser has `1`(not zero) as the start number\n                var mdNode = toastMark.findFirstNodeAtLine(endIndex + 1);\n                var slicedText = textContent.slice(to - endFromOffset);\n                var context = { toastMark: toastMark, mdNode: mdNode, doc: doc, line: endIndex + 1 };\n                var _c = extendList[commandType](context), listSyntax = _c.listSyntax, changedResults = _c.changedResults;\n                // change ordinal number of backward ordered list\n                if (changedResults === null || changedResults === void 0 ? void 0 : changedResults.length) {\n                    // split the block\n                    tr.split(to);\n                    // set first ordered list info\n                    changedResults.unshift({ text: listSyntax + slicedText, line: endIndex + 1 });\n                    _this.changeToListPerLine(tr, changedResults, {\n                        from: to,\n                        // don't subtract 1 because the line has increased through 'split' command.\n                        startLine: changedResults[0].line,\n                        endLine: last$1(changedResults).line,\n                    });\n                    var pos = tr.mapping.map(endToOffset) - slicedText.length;\n                    tr.setSelection(createTextSelection(tr, pos));\n                }\n                else {\n                    var node = createTextNode$1(schema, listSyntax + slicedText);\n                    splitAndExtendBlock(tr, endToOffset, slicedText, node);\n                }\n            }\n            dispatch(tr);\n            return true;\n        };\n    };\n    ListItem.prototype.toList = function (commandType) {\n        var _this = this;\n        return function () { return function (_a, dispatch) {\n            var doc = _a.doc, tr = _a.tr, selection = _a.selection;\n            var toastMark = _this.context.toastMark;\n            var rangeInfo = getRangeInfo(selection);\n            // should add `1` to line for the markdown parser\n            // because markdown parser has `1`(not zero) as the start number\n            var startLine = rangeInfo.startIndex + 1;\n            var endLine = rangeInfo.endIndex + 1;\n            var endToOffset = rangeInfo.endToOffset;\n            var skipLines = [];\n            for (var line = startLine; line <= endLine; line += 1) {\n                var mdNode = toastMark.findFirstNodeAtLine(line);\n                if (mdNode && cannotBeListNode(mdNode, line)) {\n                    break;\n                }\n                // to skip unnecessary processing\n                if (skipLines.indexOf(line) !== -1) {\n                    continue;\n                }\n                var context = { toastMark: toastMark, mdNode: mdNode, doc: doc, line: line, startLine: startLine };\n                var changedResults = (isListNode$1(mdNode)\n                    ? otherListToList[commandType](context)\n                    : otherNodeToList[commandType](context)).changedResults;\n                var endOffset = _this.changeToListPerLine(tr, changedResults, {\n                    from: getNodeContentOffsetRange(doc, changedResults[0].line - 1).startOffset,\n                    startLine: changedResults[0].line,\n                    endLine: last$1(changedResults).line,\n                    indexDiff: 1,\n                });\n                endToOffset = Math.max(endOffset, endToOffset);\n                if (changedResults) {\n                    skipLines = skipLines.concat(changedResults.map(function (info) { return info.line; }));\n                }\n            }\n            dispatch(tr.setSelection(createTextSelection(tr, tr.mapping.map(endToOffset))));\n            return true;\n        }; };\n    };\n    ListItem.prototype.changeToListPerLine = function (tr, changedResults, _a) {\n        var from = _a.from, startLine = _a.startLine, endLine = _a.endLine, _b = _a.indexDiff, indexDiff = _b === void 0 ? 0 : _b;\n        var maxEndOffset = 0;\n        var _loop_1 = function (i) {\n            var _c = tr.doc.child(i), nodeSize = _c.nodeSize, content = _c.content;\n            var mappedFrom = tr.mapping.map(from);\n            var mappedTo = mappedFrom + content.size;\n            var changedResult = changedResults.filter(function (result) { return result.line - indexDiff === i; })[0];\n            if (changedResult) {\n                tr.replaceWith(mappedFrom, mappedTo, createTextNode$1(this_1.context.schema, changedResult.text));\n                maxEndOffset = Math.max(maxEndOffset, from + content.size);\n            }\n            from += nodeSize;\n        };\n        var this_1 = this;\n        for (var i = startLine - indexDiff; i <= endLine - indexDiff; i += 1) {\n            _loop_1(i);\n        }\n        return maxEndOffset;\n    };\n    ListItem.prototype.toggleTask = function () {\n        var _this = this;\n        return function (_a, dispatch) {\n            var selection = _a.selection, tr = _a.tr, doc = _a.doc, schema = _a.schema;\n            var toastMark = _this.context.toastMark;\n            var _b = getRangeInfo(selection), startIndex = _b.startIndex, endIndex = _b.endIndex;\n            var newTr = null;\n            for (var i = startIndex; i <= endIndex; i += 1) {\n                var mdNode = toastMark.findFirstNodeAtLine(i + 1);\n                if (isListNode$1(mdNode) && mdNode.listData.task) {\n                    var _c = mdNode.listData, checked = _c.checked, padding = _c.padding;\n                    var stateChar = checked ? ' ' : 'x';\n                    var mdPos = mdNode.sourcepos[0];\n                    var startOffset = getNodeContentOffsetRange(doc, mdPos[0] - 1).startOffset;\n                    startOffset += mdPos[1] + padding;\n                    newTr = tr.replaceWith(startOffset, startOffset + 1, schema.text(stateChar));\n                }\n            }\n            if (newTr) {\n                dispatch(newTr);\n                return true;\n            }\n            return false;\n        };\n    };\n    ListItem.prototype.commands = function () {\n        return {\n            bulletList: this.toList('bullet'),\n            orderedList: this.toList('ordered'),\n            taskList: this.toList('task'),\n        };\n    };\n    ListItem.prototype.keymaps = function () {\n        var bulletCommand = this.toList('bullet')();\n        var orderedCommand = this.toList('ordered')();\n        var taskCommand = this.toList('task')();\n        var togleTaskCommand = this.toggleTask();\n        return {\n            'Mod-u': bulletCommand,\n            'Mod-U': bulletCommand,\n            'Mod-o': orderedCommand,\n            'Mod-O': orderedCommand,\n            'alt-t': taskCommand,\n            'alt-T': taskCommand,\n            'Shift-Ctrl-x': togleTaskCommand,\n            'Shift-Ctrl-X': togleTaskCommand,\n            Enter: this.extendList(),\n        };\n    };\n    return ListItem;\n}(Mark));\n\nfunction toggleMark(condition, syntax) {\n    return function () { return function (_a, dispatch) {\n        var tr = _a.tr, selection = _a.selection;\n        var conditionFn = !isFunction_1(condition)\n            ? function (text) { return condition.test(text); }\n            : condition;\n        var syntaxLen = syntax.length;\n        var doc = tr.doc;\n        var _b = resolveSelectionPos(selection), from = _b[0], to = _b[1];\n        var prevPos = Math.max(from - syntaxLen, 1);\n        var nextPos = Math.min(to + syntaxLen, doc.content.size - 1);\n        var slice = selection.content();\n        var textContent = slice.content.textBetween(0, slice.content.size, '\\n');\n        var prevText = doc.textBetween(prevPos, from, '\\n');\n        var nextText = doc.textBetween(to, nextPos, '\\n');\n        textContent = \"\" + prevText + textContent + nextText;\n        if (prevText && nextText && conditionFn(textContent)) {\n            tr.delete(nextPos - syntaxLen, nextPos).delete(prevPos, prevPos + syntaxLen);\n        }\n        else {\n            tr.insertText(syntax, to).insertText(syntax, from);\n            var newSelection = selection.empty\n                ? createTextSelection(tr, from + syntaxLen)\n                : createTextSelection(tr, from + syntaxLen, to + syntaxLen);\n            tr.setSelection(newSelection);\n        }\n        dispatch(tr);\n        return true;\n    }; };\n}\n\nvar reStrong = /^(\\*{2}|_{2}).*([\\s\\S]*)\\1$/m;\nvar strongSyntax = '**';\nvar Strong$1 = /** @class */ (function (_super) {\n    __extends$1(Strong, _super);\n    function Strong() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Strong.prototype, \"name\", {\n        get: function () {\n            return 'strong';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Strong.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('strong') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Strong.prototype.bold = function () {\n        return toggleMark(reStrong, strongSyntax);\n    };\n    Strong.prototype.commands = function () {\n        return { bold: this.bold() };\n    };\n    Strong.prototype.keymaps = function () {\n        var boldCommand = this.bold()();\n        return { 'Mod-b': boldCommand, 'Mod-B': boldCommand };\n    };\n    return Strong;\n}(Mark));\n\nvar reStrike = /^(~{2}).*([\\s\\S]*)\\1$/m;\nvar strikeSyntax = '~~';\nvar Strike$1 = /** @class */ (function (_super) {\n    __extends$1(Strike, _super);\n    function Strike() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Strike.prototype, \"name\", {\n        get: function () {\n            return 'strike';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Strike.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('strike') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Strike.prototype.commands = function () {\n        return toggleMark(reStrike, strikeSyntax);\n    };\n    Strike.prototype.keymaps = function () {\n        var strikeCommand = this.commands()();\n        return { 'Mod-s': strikeCommand, 'Mod-S': strikeCommand };\n    };\n    return Strike;\n}(Mark));\n\nvar reEmph = /^(\\*|_).*([\\s\\S]*)\\1$/m;\nvar emphSyntax = '*';\nvar Emph$1 = /** @class */ (function (_super) {\n    __extends$1(Emph, _super);\n    function Emph() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Emph.prototype, \"name\", {\n        get: function () {\n            return 'emph';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Emph.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('emph') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Emph.prototype.italic = function () {\n        return toggleMark(reEmph, emphSyntax);\n    };\n    Emph.prototype.commands = function () {\n        return { italic: this.italic() };\n    };\n    Emph.prototype.keymaps = function () {\n        var italicCommand = this.italic()();\n        return { 'Mod-i': italicCommand, 'Mod-I': italicCommand };\n    };\n    return Emph;\n}(Mark));\n\nvar reCode = /^(`).*([\\s\\S]*)\\1$/m;\nvar codeSyntax = '`';\nvar Code$1 = /** @class */ (function (_super) {\n    __extends$1(Code, _super);\n    function Code() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Code.prototype, \"name\", {\n        get: function () {\n            return 'code';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Code.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: {\n                    start: { default: false },\n                    end: { default: false },\n                    marked: { default: false },\n                },\n                toDOM: function (mark) {\n                    var _a = mark.attrs, start = _a.start, end = _a.end, marked = _a.marked;\n                    var classNames = 'code';\n                    if (start) {\n                        classNames += '|delimiter|start';\n                    }\n                    if (end) {\n                        classNames += '|delimiter|end';\n                    }\n                    if (marked) {\n                        classNames += '|marked-text';\n                    }\n                    return ['span', { class: clsWithMdPrefix.apply(void 0, classNames.split('|')) }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Code.prototype.commands = function () {\n        return toggleMark(reCode, codeSyntax);\n    };\n    Code.prototype.keymaps = function () {\n        var codeCommand = this.commands()();\n        return { 'Shift-Mod-c': codeCommand, 'Shift-Mod-C': codeCommand };\n    };\n    return Code;\n}(Mark));\n\nvar Link$1 = /** @class */ (function (_super) {\n    __extends$1(Link, _super);\n    function Link() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Link.prototype, \"name\", {\n        get: function () {\n            return 'link';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Link.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: {\n                    url: { default: false },\n                    desc: { default: false },\n                },\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    var url = attrs.url, desc = attrs.desc;\n                    var classNames = 'link';\n                    if (url) {\n                        classNames += '|link-url|marked-text';\n                    }\n                    if (desc) {\n                        classNames += '|link-desc|marked-text';\n                    }\n                    return ['span', { class: clsWithMdPrefix.apply(void 0, classNames.split('|')) }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Link.prototype.addLinkOrImage = function (commandType) {\n        return function (payload) { return function (_a, dispatch) {\n            var selection = _a.selection, tr = _a.tr, schema = _a.schema;\n            var _b = resolveSelectionPos(selection), from = _b[0], to = _b[1];\n            var _c = payload, linkText = _c.linkText, altText = _c.altText, linkUrl = _c.linkUrl, imageUrl = _c.imageUrl;\n            var text = linkText;\n            var url = linkUrl;\n            var syntax = '';\n            if (commandType === 'image') {\n                text = altText;\n                url = imageUrl;\n                syntax = '!';\n            }\n            text = escapeTextForLink(text);\n            syntax += \"[\" + text + \"](\" + url + \")\";\n            dispatch(tr.replaceWith(from, to, createTextNode$1(schema, syntax)));\n            return true;\n        }; };\n    };\n    Link.prototype.commands = function () {\n        return {\n            addImage: this.addLinkOrImage('image'),\n            addLink: this.addLinkOrImage('link'),\n        };\n    };\n    return Link;\n}(Mark));\n\nvar TaskDelimiter = /** @class */ (function (_super) {\n    __extends$1(TaskDelimiter, _super);\n    function TaskDelimiter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TaskDelimiter.prototype, \"name\", {\n        get: function () {\n            return 'taskDelimiter';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TaskDelimiter.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('delimiter', 'list-item') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TaskDelimiter;\n}(Mark));\nvar Delimiter = /** @class */ (function (_super) {\n    __extends$1(Delimiter, _super);\n    function Delimiter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Delimiter.prototype, \"name\", {\n        get: function () {\n            return 'delimiter';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Delimiter.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('delimiter') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Delimiter;\n}(Mark));\nvar Meta = /** @class */ (function (_super) {\n    __extends$1(Meta, _super);\n    function Meta() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Meta.prototype, \"name\", {\n        get: function () {\n            return 'meta';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Meta.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('meta') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Meta;\n}(Mark));\nvar MarkedText = /** @class */ (function (_super) {\n    __extends$1(MarkedText, _super);\n    function MarkedText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MarkedText.prototype, \"name\", {\n        get: function () {\n            return 'markedText';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MarkedText.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('marked-text') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return MarkedText;\n}(Mark));\nvar TableCell = /** @class */ (function (_super) {\n    __extends$1(TableCell, _super);\n    function TableCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TableCell.prototype, \"name\", {\n        get: function () {\n            return 'tableCell';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableCell.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('table-cell') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TableCell;\n}(Mark));\n\nvar Html = /** @class */ (function (_super) {\n    __extends$1(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Html.prototype, \"name\", {\n        get: function () {\n            return 'html';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Html.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('html') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Html;\n}(Mark));\n\nvar customBlockSyntax = '$$';\nvar CustomBlock$1 = /** @class */ (function (_super) {\n    __extends$1(CustomBlock, _super);\n    function CustomBlock() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CustomBlock.prototype, \"name\", {\n        get: function () {\n            return 'customBlock';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CustomBlock.prototype, \"schema\", {\n        get: function () {\n            return {\n                toDOM: function () {\n                    return ['span', { class: clsWithMdPrefix('custom-block') }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CustomBlock.prototype.commands = function () {\n        return function (payload) { return function (state, dispatch) {\n            var selection = state.selection, schema = state.schema, tr = state.tr;\n            var _a = getRangeInfo(selection), startFromOffset = _a.startFromOffset, endToOffset = _a.endToOffset;\n            if (!(payload === null || payload === void 0 ? void 0 : payload.info)) {\n                return false;\n            }\n            var customBlock = \"\" + customBlockSyntax + payload.info;\n            var startNode = createTextNode$1(schema, customBlock);\n            var endNode = createTextNode$1(schema, customBlockSyntax);\n            tr.insert(startFromOffset, startNode).split(startFromOffset + customBlock.length);\n            tr.split(tr.mapping.map(endToOffset)).insert(tr.mapping.map(endToOffset), endNode);\n            dispatch(tr.setSelection(createTextSelection(tr, tr.mapping.map(endToOffset) - (customBlockSyntax.length + 2))));\n            return true;\n        }; };\n    };\n    return CustomBlock;\n}(Mark));\n\nvar reTaskMarkerKey = /x|backspace/i;\nvar reTaskMarker = /^\\[(\\s*)(x?)(\\s*)\\](?:\\s+)/i;\nfunction smartTask(_a) {\n    var schema = _a.schema, toastMark = _a.toastMark;\n    return new Plugin({\n        props: {\n            handleDOMEvents: {\n                keyup: function (view, ev) {\n                    var _a;\n                    var _b = view.state, doc = _b.doc, tr = _b.tr, selection = _b.selection;\n                    if (selection.empty && reTaskMarkerKey.test(ev.key)) {\n                        var _c = getRangeInfo(selection), startIndex = _c.startIndex, startFromOffset = _c.startFromOffset, from = _c.from;\n                        // should add `1` to line for the markdown parser\n                        // because markdown parser has `1`(not zero) as the start number\n                        var mdPos = [startIndex + 1, from - startFromOffset + 1];\n                        var mdNode = toastMark.findNodeAtPosition(mdPos);\n                        var paraNode = findClosestNode(mdNode, function (node) { var _a; return node.type === 'paragraph' && ((_a = node.parent) === null || _a === void 0 ? void 0 : _a.type) === 'item'; });\n                        if ((_a = paraNode === null || paraNode === void 0 ? void 0 : paraNode.firstChild) === null || _a === void 0 ? void 0 : _a.literal) {\n                            var firstChild = paraNode.firstChild;\n                            var matched = firstChild.literal.match(reTaskMarker);\n                            if (matched) {\n                                var startMdPos = firstChild.sourcepos[0];\n                                var startSpaces = matched[1], stateChar = matched[2], lastSpaces = matched[3];\n                                var spaces = startSpaces.length + lastSpaces.length;\n                                var startOffset = getNodeContentOffsetRange(doc, startMdPos[0] - 1).startOffset;\n                                var startPos = startMdPos[1] + startOffset;\n                                if (stateChar) {\n                                    var addedPos = spaces ? spaces + 1 : 0;\n                                    tr.replaceWith(startPos, addedPos + startPos, schema.text(stateChar));\n                                    view.dispatch(tr);\n                                }\n                                else if (!spaces) {\n                                    tr.insertText(' ', startPos);\n                                    view.dispatch(tr);\n                                }\n                            }\n                        }\n                    }\n                    return false;\n                },\n            },\n        },\n    });\n}\n\nvar EVENT_TYPE = 'cut';\nvar reLineEnding$2 = /\\r\\n|\\n|\\r/;\nvar MdEditor = /** @class */ (function (_super) {\n    __extends$1(MdEditor, _super);\n    function MdEditor(eventEmitter, options) {\n        var _this = _super.call(this, eventEmitter) || this;\n        var toastMark = options.toastMark, _a = options.useCommandShortcut, useCommandShortcut = _a === void 0 ? true : _a, _b = options.mdPlugins, mdPlugins = _b === void 0 ? [] : _b;\n        _this.editorType = 'markdown';\n        _this.el.classList.add('md-mode');\n        _this.toastMark = toastMark;\n        _this.extraPlugins = mdPlugins;\n        _this.specs = _this.createSpecs();\n        _this.schema = _this.createSchema();\n        _this.context = _this.createContext();\n        _this.keymaps = _this.createKeymaps(useCommandShortcut);\n        _this.view = _this.createView();\n        _this.commands = _this.createCommands();\n        _this.specs.setContext(__assign$1(__assign$1({}, _this.context), { view: _this.view }));\n        _this.createClipboard();\n        // To prevent unnecessary focus setting during initial rendering\n        _this.eventEmitter.listen('changePreviewTabWrite', function (isMarkdownTabMounted) {\n            return _this.toggleActive(true, isMarkdownTabMounted);\n        });\n        _this.eventEmitter.listen('changePreviewTabPreview', function () { return _this.toggleActive(false); });\n        _this.initEvent();\n        return _this;\n    }\n    MdEditor.prototype.toggleActive = function (active, isMarkdownTabMounted) {\n        toggleClass(this.el, 'active', active);\n        if (active) {\n            if (!isMarkdownTabMounted) {\n                this.focus();\n            }\n        }\n        else {\n            this.blur();\n        }\n    };\n    MdEditor.prototype.createClipboard = function () {\n        var _this = this;\n        this.clipboard = document.createElement('textarea');\n        this.clipboard.className = cls('pseudo-clipboard');\n        this.clipboard.addEventListener('paste', function (ev) {\n            var clipboardData = ev.clipboardData || window.clipboardData;\n            var items = clipboardData && clipboardData.items;\n            if (items) {\n                var containRtfItem = toArray_1(items).some(function (item) { return item.kind === 'string' && item.type === 'text/rtf'; });\n                // if it contains rtf, it's most likely copy paste from office -> no image\n                if (!containRtfItem) {\n                    var imageBlob = pasteImageOnly(items);\n                    if (imageBlob) {\n                        ev.preventDefault();\n                        emitImageBlobHook(_this.eventEmitter, imageBlob, ev.type);\n                    }\n                }\n            }\n        });\n        // process the pasted data in input event for IE11\n        this.clipboard.addEventListener('input', function (ev) {\n            var text = ev.target.value;\n            _this.replaceSelection(text);\n            ev.preventDefault();\n            ev.target.value = '';\n        });\n        this.el.insertBefore(this.clipboard, this.view.dom);\n    };\n    MdEditor.prototype.createContext = function () {\n        return {\n            toastMark: this.toastMark,\n            schema: this.schema,\n            eventEmitter: this.eventEmitter,\n        };\n    };\n    MdEditor.prototype.createSpecs = function () {\n        return new SpecManager([\n            new Doc$1(),\n            new Paragraph$1(),\n            new Widget(),\n            new Text$1(),\n            new Heading$1(),\n            new BlockQuote$1(),\n            new CodeBlock$1(),\n            new CustomBlock$1(),\n            new Table$1(),\n            new TableCell(),\n            new ThematicBreak$1(),\n            new ListItem$1(),\n            new Strong$1(),\n            new Strike$1(),\n            new Emph$1(),\n            new Code$1(),\n            new Link$1(),\n            new Delimiter(),\n            new TaskDelimiter(),\n            new MarkedText(),\n            new Meta(),\n            new Html(),\n        ]);\n    };\n    MdEditor.prototype.createPlugins = function () {\n        return __spreadArray$1([\n            syntaxHighlight(this.context),\n            previewHighlight(this.context),\n            smartTask(this.context)\n        ], this.createPluginProps()).concat(this.defaultPlugins);\n    };\n    MdEditor.prototype.createView = function () {\n        var _this = this;\n        return new EditorView(this.el, {\n            state: this.createState(),\n            dispatchTransaction: function (tr) {\n                _this.updateMarkdown(tr);\n                var state = _this.view.state.applyTransaction(tr).state;\n                _this.view.updateState(state);\n                _this.emitChangeEvent(tr);\n            },\n            handleKeyDown: function (_, ev) {\n                if ((ev.metaKey || ev.ctrlKey) && ev.key.toUpperCase() === 'V') {\n                    _this.clipboard.focus();\n                }\n                _this.eventEmitter.emit('keydown', _this.editorType, ev);\n                return false;\n            },\n            handleDOMEvents: {\n                copy: function (_, ev) { return _this.captureCopy(ev); },\n                cut: function (_, ev) { return _this.captureCopy(ev, EVENT_TYPE); },\n                scroll: function () {\n                    _this.eventEmitter.emit('scroll', 'editor');\n                    return true;\n                },\n                keyup: function (_, ev) {\n                    _this.eventEmitter.emit('keyup', _this.editorType, ev);\n                    return false;\n                },\n            },\n            nodeViews: {\n                widget: widgetNodeView,\n            },\n        });\n    };\n    MdEditor.prototype.createCommands = function () {\n        return this.specs.commands(this.view);\n    };\n    MdEditor.prototype.captureCopy = function (ev, type) {\n        ev.preventDefault();\n        var _a = this.view.state, selection = _a.selection, tr = _a.tr;\n        if (selection.empty) {\n            return true;\n        }\n        var text = this.getChanged(selection.content());\n        if (ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', text);\n        }\n        else {\n            window.clipboardData.setData('Text', text);\n        }\n        if (type === EVENT_TYPE) {\n            this.view.dispatch(tr.deleteSelection().scrollIntoView().setMeta('uiEvent', EVENT_TYPE));\n        }\n        return true;\n    };\n    MdEditor.prototype.updateMarkdown = function (tr) {\n        var _this = this;\n        if (tr.docChanged) {\n            tr.steps.forEach(function (step, index) {\n                if (step.slice && !(step instanceof ReplaceAroundStep)) {\n                    var doc = tr.docs[index];\n                    var _a = [step.from, step.to], from = _a[0], to = _a[1];\n                    var _b = getEditorToMdPos(doc, from, to), startPos = _b[0], endPos = _b[1];\n                    var changed = _this.getChanged(step.slice);\n                    if (startPos[0] === endPos[0] && startPos[1] === endPos[1] && changed === '') {\n                        changed = '\\n';\n                    }\n                    var editResult = _this.toastMark.editMarkdown(startPos, endPos, changed);\n                    _this.eventEmitter.emit('updatePreview', editResult);\n                    tr.setMeta('editResult', editResult).scrollIntoView();\n                }\n            });\n        }\n    };\n    MdEditor.prototype.getChanged = function (slice) {\n        var changed = '';\n        var from = 0;\n        var to = slice.content.size;\n        slice.content.nodesBetween(from, to, function (node, pos) {\n            if (node.isText) {\n                changed += node.text.slice(Math.max(from, pos) - pos, to - pos);\n            }\n            else if (node.isBlock && pos > 0) {\n                changed += '\\n';\n            }\n        });\n        return changed;\n    };\n    MdEditor.prototype.setSelection = function (start, end) {\n        if (end === void 0) { end = start; }\n        var tr = this.view.state.tr;\n        var _a = getMdToEditorPos(tr.doc, start, end), from = _a[0], to = _a[1];\n        this.view.dispatch(tr.setSelection(createTextSelection(tr, from, to)).scrollIntoView());\n    };\n    MdEditor.prototype.replaceSelection = function (text, start, end) {\n        var newTr;\n        var _a = this.view.state, tr = _a.tr, schema = _a.schema, doc = _a.doc;\n        var lineTexts = text.split(reLineEnding$2);\n        var nodes = lineTexts.map(function (lineText) {\n            return createParagraph(schema, createNodesWithWidget(lineText, schema));\n        });\n        var slice = new Slice(Fragment.from(nodes), 1, 1);\n        this.focus();\n        if (start && end) {\n            var _b = getMdToEditorPos(doc, start, end), from = _b[0], to = _b[1];\n            newTr = tr.replaceRange(from, to, slice);\n        }\n        else {\n            newTr = tr.replaceSelection(slice);\n        }\n        this.view.dispatch(newTr.scrollIntoView());\n    };\n    MdEditor.prototype.deleteSelection = function (start, end) {\n        var newTr;\n        var _a = this.view.state, tr = _a.tr, doc = _a.doc;\n        if (start && end) {\n            var _b = getMdToEditorPos(doc, start, end), from = _b[0], to = _b[1];\n            newTr = tr.deleteRange(from, to);\n        }\n        else {\n            newTr = tr.deleteSelection();\n        }\n        this.view.dispatch(newTr.scrollIntoView());\n    };\n    MdEditor.prototype.getSelectedText = function (start, end) {\n        var _a = this.view.state, doc = _a.doc, selection = _a.selection;\n        var from = selection.from, to = selection.to;\n        if (start && end) {\n            var pos = getMdToEditorPos(doc, start, end);\n            from = pos[0];\n            to = pos[1];\n        }\n        return doc.textBetween(from, to, '\\n');\n    };\n    MdEditor.prototype.getSelection = function () {\n        var _a = this.view.state.selection, from = _a.from, to = _a.to;\n        return getEditorToMdPos(this.view.state.tr.doc, from, to);\n    };\n    MdEditor.prototype.setMarkdown = function (markdown, cursorToEnd) {\n        if (cursorToEnd === void 0) { cursorToEnd = true; }\n        var lineTexts = markdown.split(reLineEnding$2);\n        var _a = this.view.state, tr = _a.tr, doc = _a.doc, schema = _a.schema;\n        var nodes = lineTexts.map(function (lineText) {\n            return createParagraph(schema, createNodesWithWidget(lineText, schema));\n        });\n        this.view.dispatch(tr.replaceWith(0, doc.content.size, nodes));\n        if (cursorToEnd) {\n            this.moveCursorToEnd(true);\n        }\n    };\n    MdEditor.prototype.addWidget = function (node, style, mdPos) {\n        var _a = this.view.state, tr = _a.tr, doc = _a.doc, selection = _a.selection;\n        var pos = mdPos ? getMdToEditorPos(doc, mdPos, mdPos)[0] : selection.to;\n        this.view.dispatch(tr.setMeta('widget', { pos: pos, node: node, style: style }));\n    };\n    MdEditor.prototype.replaceWithWidget = function (start, end, text) {\n        var _a = this.view.state, tr = _a.tr, schema = _a.schema, doc = _a.doc;\n        var pos = getMdToEditorPos(doc, start, end);\n        var nodes = createNodesWithWidget(text, schema);\n        this.view.dispatch(tr.replaceWith(pos[0], pos[1], nodes));\n    };\n    MdEditor.prototype.getRangeInfoOfNode = function (pos) {\n        var _a = this.view.state, doc = _a.doc, selection = _a.selection;\n        var mdPos = pos || getEditorToMdPos(doc, selection.from)[0];\n        var mdNode = this.toastMark.findNodeAtPosition(mdPos);\n        if (mdNode.type === 'text' && mdNode.parent.type !== 'paragraph') {\n            mdNode = mdNode.parent;\n        }\n        // add 1 sync for prosemirror position\n        mdNode.sourcepos[1][1] += 1;\n        return { range: mdNode.sourcepos, type: mdNode.type };\n    };\n    MdEditor.prototype.getMarkdown = function () {\n        return this.toastMark\n            .getLineTexts()\n            .map(function (lineText) { return unwrapWidgetSyntax(lineText); })\n            .join('\\n');\n    };\n    MdEditor.prototype.getToastMark = function () {\n        return this.toastMark;\n    };\n    return MdEditor;\n}(EditorBase));\n\n/**\n * @fileoverview Get event collection for specific HTML element\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar EVENT_KEY = '_feEventKey';\n\n/**\n * Get event collection for specific HTML element\n * @param {HTMLElement} element - HTML element\n * @param {string} type - event type\n * @returns {array}\n * @private\n */\nfunction safeEvent$2(element, type) {\n  var events = element[EVENT_KEY];\n  var handlers;\n\n  if (!events) {\n    events = element[EVENT_KEY] = {};\n  }\n\n  handlers = events[type];\n  if (!handlers) {\n    handlers = events[type] = [];\n  }\n\n  return handlers;\n}\n\nvar _safeEvent = safeEvent$2;\n\n/**\n * @fileoverview Unbind DOM events\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isString$1 = isString_1;\nvar forEach$1 = forEach_1;\n\nvar safeEvent$1 = _safeEvent;\n\n/**\n * Unbind DOM events\n * If a handler function is not passed, remove all events of that type.\n * @param {HTMLElement} element - element to unbind events\n * @param {(string|object)} types - Space splitted events names or eventName:handler object\n * @param {function} [handler] - handler function\n * @memberof module:domEvent\n * @example\n * // Following the example of domEvent#on\n * \n * // Unbind one event from an element.\n * off(div, 'click', toggle);\n * \n * // Unbind multiple events with a same handler from multiple elements at once.\n * // Use event names splitted by a space.\n * off(element, 'mouseenter mouseleave', changeColor);\n * \n * // Unbind multiple events with different handlers from an element at once.\n * // Use an object which of key is an event name and value is a handler function.\n * off(div, {\n *   keydown: highlight,\n *   keyup: dehighlight\n * });\n * \n * // Unbind events without handlers.\n * off(div, 'drag');\n */\nfunction off(element, types, handler) {\n  if (isString$1(types)) {\n    forEach$1(types.split(/\\s+/g), function(type) {\n      unbindEvent(element, type, handler);\n    });\n\n    return;\n  }\n\n  forEach$1(types, function(func, type) {\n    unbindEvent(element, type, func);\n  });\n}\n\n/**\n * Unbind DOM events\n * If a handler function is not passed, remove all events of that type.\n * @param {HTMLElement} element - element to unbind events\n * @param {string} type - events name\n * @param {function} [handler] - handler function\n * @private\n */\nfunction unbindEvent(element, type, handler) {\n  var events = safeEvent$1(element, type);\n  var index;\n\n  if (!handler) {\n    forEach$1(events, function(item) {\n      removeHandler(element, type, item.wrappedHandler);\n    });\n    events.splice(0, events.length);\n  } else {\n    forEach$1(events, function(item, idx) {\n      if (handler === item.handler) {\n        removeHandler(element, type, item.wrappedHandler);\n        index = idx;\n\n        return false;\n      }\n\n      return true;\n    });\n    events.splice(index, 1);\n  }\n}\n\n/**\n * Remove an event handler\n * @param {HTMLElement} element - An element to remove an event\n * @param {string} type - event type\n * @param {function} handler - event handler\n * @private\n */\nfunction removeHandler(element, type, handler) {\n  if ('removeEventListener' in element) {\n    element.removeEventListener(type, handler);\n  } else if ('detachEvent' in element) {\n    element.detachEvent('on' + type, handler);\n  }\n}\n\nvar off_1 = off;\n\n/**\n * @fileoverview Bind DOM events\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isString = isString_1;\nvar forEach = forEach_1;\n\nvar safeEvent = _safeEvent;\n\n/**\n * Bind DOM events.\n * @param {HTMLElement} element - element to bind events\n * @param {(string|object)} types - Space splitted events names or eventName:handler object\n * @param {(function|object)} handler - handler function or context for handler method\n * @param {object} [context] context - context for handler method.\n * @memberof module:domEvent\n * @example\n * const div = document.querySelector('div');\n * \n * // Bind one event to an element.\n * on(div, 'click', toggle);\n * \n * // Bind multiple events with a same handler to multiple elements at once.\n * // Use event names splitted by a space.\n * on(div, 'mouseenter mouseleave', changeColor);\n * \n * // Bind multiple events with different handlers to an element at once.\n * // Use an object which of key is an event name and value is a handler function.\n * on(div, {\n *   keydown: highlight,\n *   keyup: dehighlight\n * });\n * \n * // Set a context for handler method.\n * const name = 'global';\n * const repository = {name: 'CodeSnippet'};\n * on(div, 'drag', function() {\n *   console.log(this.name);\n * }, repository);\n * // Result when you drag a div: \"CodeSnippet\"\n */\nfunction on(element, types, handler, context) {\n  if (isString(types)) {\n    forEach(types.split(/\\s+/g), function(type) {\n      bindEvent(element, type, handler, context);\n    });\n\n    return;\n  }\n\n  forEach(types, function(func, type) {\n    bindEvent(element, type, func, handler);\n  });\n}\n\n/**\n * Bind DOM events\n * @param {HTMLElement} element - element to bind events\n * @param {string} type - events name\n * @param {function} handler - handler function or context for handler method\n * @param {object} [context] context - context for handler method.\n * @private\n */\nfunction bindEvent(element, type, handler, context) {\n  /**\n     * Event handler\n     * @param {Event} e - event object\n     */\n  function eventHandler(e) {\n    handler.call(context || element, e || window.event);\n  }\n\n  if ('addEventListener' in element) {\n    element.addEventListener(type, eventHandler);\n  } else if ('attachEvent' in element) {\n    element.attachEvent('on' + type, eventHandler);\n  }\n  memorizeHandler(element, type, handler, eventHandler);\n}\n\n/**\n * Memorize DOM event handler for unbinding.\n * @param {HTMLElement} element - element to bind events\n * @param {string} type - events name\n * @param {function} handler - handler function that user passed at on() use\n * @param {function} wrappedHandler - handler function that wrapped by domevent for implementing some features\n * @private\n */\nfunction memorizeHandler(element, type, handler, wrappedHandler) {\n  var events = safeEvent(element, type);\n  var existInEvents = false;\n\n  forEach(events, function(obj) {\n    if (obj.handler === handler) {\n      existInEvents = true;\n\n      return false;\n    }\n\n    return true;\n  });\n\n  if (!existInEvents) {\n    events.push({\n      handler: handler,\n      wrappedHandler: wrappedHandler\n    });\n  }\n}\n\nvar on_1 = on;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode$1(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode$1.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode$1.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode$1.componentChars = \"-_.!~*'()\";\n\n\nvar encode_1 = encode$1;\n\nvar lib = {};\n\nvar decode = {};\n\nvar Aacute$1 = \"Á\";\nvar aacute$1 = \"á\";\nvar Abreve = \"Ă\";\nvar abreve = \"ă\";\nvar ac = \"∾\";\nvar acd = \"∿\";\nvar acE = \"∾̳\";\nvar Acirc$1 = \"Â\";\nvar acirc$1 = \"â\";\nvar acute$1 = \"´\";\nvar Acy = \"А\";\nvar acy = \"а\";\nvar AElig$1 = \"Æ\";\nvar aelig$1 = \"æ\";\nvar af = \"⁡\";\nvar Afr = \"𝔄\";\nvar afr = \"𝔞\";\nvar Agrave$1 = \"À\";\nvar agrave$1 = \"à\";\nvar alefsym = \"ℵ\";\nvar aleph = \"ℵ\";\nvar Alpha = \"Α\";\nvar alpha = \"α\";\nvar Amacr = \"Ā\";\nvar amacr = \"ā\";\nvar amalg = \"⨿\";\nvar amp$2 = \"&\";\nvar AMP$1 = \"&\";\nvar andand = \"⩕\";\nvar And = \"⩓\";\nvar and = \"∧\";\nvar andd = \"⩜\";\nvar andslope = \"⩘\";\nvar andv = \"⩚\";\nvar ang = \"∠\";\nvar ange = \"⦤\";\nvar angle = \"∠\";\nvar angmsdaa = \"⦨\";\nvar angmsdab = \"⦩\";\nvar angmsdac = \"⦪\";\nvar angmsdad = \"⦫\";\nvar angmsdae = \"⦬\";\nvar angmsdaf = \"⦭\";\nvar angmsdag = \"⦮\";\nvar angmsdah = \"⦯\";\nvar angmsd = \"∡\";\nvar angrt = \"∟\";\nvar angrtvb = \"⊾\";\nvar angrtvbd = \"⦝\";\nvar angsph = \"∢\";\nvar angst = \"Å\";\nvar angzarr = \"⍼\";\nvar Aogon = \"Ą\";\nvar aogon = \"ą\";\nvar Aopf = \"𝔸\";\nvar aopf = \"𝕒\";\nvar apacir = \"⩯\";\nvar ap = \"≈\";\nvar apE = \"⩰\";\nvar ape = \"≊\";\nvar apid = \"≋\";\nvar apos$1 = \"'\";\nvar ApplyFunction = \"⁡\";\nvar approx = \"≈\";\nvar approxeq = \"≊\";\nvar Aring$1 = \"Å\";\nvar aring$1 = \"å\";\nvar Ascr = \"𝒜\";\nvar ascr = \"𝒶\";\nvar Assign = \"≔\";\nvar ast = \"*\";\nvar asymp = \"≈\";\nvar asympeq = \"≍\";\nvar Atilde$1 = \"Ã\";\nvar atilde$1 = \"ã\";\nvar Auml$1 = \"Ä\";\nvar auml$1 = \"ä\";\nvar awconint = \"∳\";\nvar awint = \"⨑\";\nvar backcong = \"≌\";\nvar backepsilon = \"϶\";\nvar backprime = \"‵\";\nvar backsim = \"∽\";\nvar backsimeq = \"⋍\";\nvar Backslash = \"∖\";\nvar Barv = \"⫧\";\nvar barvee = \"⊽\";\nvar barwed = \"⌅\";\nvar Barwed = \"⌆\";\nvar barwedge = \"⌅\";\nvar bbrk = \"⎵\";\nvar bbrktbrk = \"⎶\";\nvar bcong = \"≌\";\nvar Bcy = \"Б\";\nvar bcy = \"б\";\nvar bdquo = \"„\";\nvar becaus = \"∵\";\nvar because = \"∵\";\nvar Because = \"∵\";\nvar bemptyv = \"⦰\";\nvar bepsi = \"϶\";\nvar bernou = \"ℬ\";\nvar Bernoullis = \"ℬ\";\nvar Beta = \"Β\";\nvar beta = \"β\";\nvar beth = \"ℶ\";\nvar between = \"≬\";\nvar Bfr = \"𝔅\";\nvar bfr = \"𝔟\";\nvar bigcap = \"⋂\";\nvar bigcirc = \"◯\";\nvar bigcup = \"⋃\";\nvar bigodot = \"⨀\";\nvar bigoplus = \"⨁\";\nvar bigotimes = \"⨂\";\nvar bigsqcup = \"⨆\";\nvar bigstar = \"★\";\nvar bigtriangledown = \"▽\";\nvar bigtriangleup = \"△\";\nvar biguplus = \"⨄\";\nvar bigvee = \"⋁\";\nvar bigwedge = \"⋀\";\nvar bkarow = \"⤍\";\nvar blacklozenge = \"⧫\";\nvar blacksquare = \"▪\";\nvar blacktriangle = \"▴\";\nvar blacktriangledown = \"▾\";\nvar blacktriangleleft = \"◂\";\nvar blacktriangleright = \"▸\";\nvar blank = \"␣\";\nvar blk12 = \"▒\";\nvar blk14 = \"░\";\nvar blk34 = \"▓\";\nvar block = \"█\";\nvar bne = \"=⃥\";\nvar bnequiv = \"≡⃥\";\nvar bNot = \"⫭\";\nvar bnot = \"⌐\";\nvar Bopf = \"𝔹\";\nvar bopf = \"𝕓\";\nvar bot = \"⊥\";\nvar bottom = \"⊥\";\nvar bowtie = \"⋈\";\nvar boxbox = \"⧉\";\nvar boxdl = \"┐\";\nvar boxdL = \"╕\";\nvar boxDl = \"╖\";\nvar boxDL = \"╗\";\nvar boxdr = \"┌\";\nvar boxdR = \"╒\";\nvar boxDr = \"╓\";\nvar boxDR = \"╔\";\nvar boxh = \"─\";\nvar boxH = \"═\";\nvar boxhd = \"┬\";\nvar boxHd = \"╤\";\nvar boxhD = \"╥\";\nvar boxHD = \"╦\";\nvar boxhu = \"┴\";\nvar boxHu = \"╧\";\nvar boxhU = \"╨\";\nvar boxHU = \"╩\";\nvar boxminus = \"⊟\";\nvar boxplus = \"⊞\";\nvar boxtimes = \"⊠\";\nvar boxul = \"┘\";\nvar boxuL = \"╛\";\nvar boxUl = \"╜\";\nvar boxUL = \"╝\";\nvar boxur = \"└\";\nvar boxuR = \"╘\";\nvar boxUr = \"╙\";\nvar boxUR = \"╚\";\nvar boxv = \"│\";\nvar boxV = \"║\";\nvar boxvh = \"┼\";\nvar boxvH = \"╪\";\nvar boxVh = \"╫\";\nvar boxVH = \"╬\";\nvar boxvl = \"┤\";\nvar boxvL = \"╡\";\nvar boxVl = \"╢\";\nvar boxVL = \"╣\";\nvar boxvr = \"├\";\nvar boxvR = \"╞\";\nvar boxVr = \"╟\";\nvar boxVR = \"╠\";\nvar bprime = \"‵\";\nvar breve = \"˘\";\nvar Breve = \"˘\";\nvar brvbar$1 = \"¦\";\nvar bscr = \"𝒷\";\nvar Bscr = \"ℬ\";\nvar bsemi = \"⁏\";\nvar bsim = \"∽\";\nvar bsime = \"⋍\";\nvar bsolb = \"⧅\";\nvar bsol = \"\\\\\";\nvar bsolhsub = \"⟈\";\nvar bull = \"•\";\nvar bullet = \"•\";\nvar bump = \"≎\";\nvar bumpE = \"⪮\";\nvar bumpe = \"≏\";\nvar Bumpeq = \"≎\";\nvar bumpeq = \"≏\";\nvar Cacute = \"Ć\";\nvar cacute = \"ć\";\nvar capand = \"⩄\";\nvar capbrcup = \"⩉\";\nvar capcap = \"⩋\";\nvar cap = \"∩\";\nvar Cap = \"⋒\";\nvar capcup = \"⩇\";\nvar capdot = \"⩀\";\nvar CapitalDifferentialD = \"ⅅ\";\nvar caps = \"∩︀\";\nvar caret = \"⁁\";\nvar caron = \"ˇ\";\nvar Cayleys = \"ℭ\";\nvar ccaps = \"⩍\";\nvar Ccaron = \"Č\";\nvar ccaron = \"č\";\nvar Ccedil$1 = \"Ç\";\nvar ccedil$1 = \"ç\";\nvar Ccirc = \"Ĉ\";\nvar ccirc = \"ĉ\";\nvar Cconint = \"∰\";\nvar ccups = \"⩌\";\nvar ccupssm = \"⩐\";\nvar Cdot = \"Ċ\";\nvar cdot = \"ċ\";\nvar cedil$1 = \"¸\";\nvar Cedilla = \"¸\";\nvar cemptyv = \"⦲\";\nvar cent$1 = \"¢\";\nvar centerdot = \"·\";\nvar CenterDot = \"·\";\nvar cfr = \"𝔠\";\nvar Cfr = \"ℭ\";\nvar CHcy = \"Ч\";\nvar chcy = \"ч\";\nvar check = \"✓\";\nvar checkmark = \"✓\";\nvar Chi = \"Χ\";\nvar chi = \"χ\";\nvar circ = \"ˆ\";\nvar circeq = \"≗\";\nvar circlearrowleft = \"↺\";\nvar circlearrowright = \"↻\";\nvar circledast = \"⊛\";\nvar circledcirc = \"⊚\";\nvar circleddash = \"⊝\";\nvar CircleDot = \"⊙\";\nvar circledR = \"®\";\nvar circledS = \"Ⓢ\";\nvar CircleMinus = \"⊖\";\nvar CirclePlus = \"⊕\";\nvar CircleTimes = \"⊗\";\nvar cir = \"○\";\nvar cirE = \"⧃\";\nvar cire = \"≗\";\nvar cirfnint = \"⨐\";\nvar cirmid = \"⫯\";\nvar cirscir = \"⧂\";\nvar ClockwiseContourIntegral = \"∲\";\nvar CloseCurlyDoubleQuote = \"”\";\nvar CloseCurlyQuote = \"’\";\nvar clubs = \"♣\";\nvar clubsuit = \"♣\";\nvar colon = \":\";\nvar Colon = \"∷\";\nvar Colone = \"⩴\";\nvar colone = \"≔\";\nvar coloneq = \"≔\";\nvar comma = \",\";\nvar commat = \"@\";\nvar comp = \"∁\";\nvar compfn = \"∘\";\nvar complement = \"∁\";\nvar complexes = \"ℂ\";\nvar cong = \"≅\";\nvar congdot = \"⩭\";\nvar Congruent = \"≡\";\nvar conint = \"∮\";\nvar Conint = \"∯\";\nvar ContourIntegral = \"∮\";\nvar copf = \"𝕔\";\nvar Copf = \"ℂ\";\nvar coprod = \"∐\";\nvar Coproduct = \"∐\";\nvar copy$1 = \"©\";\nvar COPY$1 = \"©\";\nvar copysr = \"℗\";\nvar CounterClockwiseContourIntegral = \"∳\";\nvar crarr = \"↵\";\nvar cross = \"✗\";\nvar Cross = \"⨯\";\nvar Cscr = \"𝒞\";\nvar cscr = \"𝒸\";\nvar csub = \"⫏\";\nvar csube = \"⫑\";\nvar csup = \"⫐\";\nvar csupe = \"⫒\";\nvar ctdot = \"⋯\";\nvar cudarrl = \"⤸\";\nvar cudarrr = \"⤵\";\nvar cuepr = \"⋞\";\nvar cuesc = \"⋟\";\nvar cularr = \"↶\";\nvar cularrp = \"⤽\";\nvar cupbrcap = \"⩈\";\nvar cupcap = \"⩆\";\nvar CupCap = \"≍\";\nvar cup = \"∪\";\nvar Cup = \"⋓\";\nvar cupcup = \"⩊\";\nvar cupdot = \"⊍\";\nvar cupor = \"⩅\";\nvar cups = \"∪︀\";\nvar curarr = \"↷\";\nvar curarrm = \"⤼\";\nvar curlyeqprec = \"⋞\";\nvar curlyeqsucc = \"⋟\";\nvar curlyvee = \"⋎\";\nvar curlywedge = \"⋏\";\nvar curren$1 = \"¤\";\nvar curvearrowleft = \"↶\";\nvar curvearrowright = \"↷\";\nvar cuvee = \"⋎\";\nvar cuwed = \"⋏\";\nvar cwconint = \"∲\";\nvar cwint = \"∱\";\nvar cylcty = \"⌭\";\nvar dagger = \"†\";\nvar Dagger = \"‡\";\nvar daleth = \"ℸ\";\nvar darr = \"↓\";\nvar Darr = \"↡\";\nvar dArr = \"⇓\";\nvar dash = \"‐\";\nvar Dashv = \"⫤\";\nvar dashv = \"⊣\";\nvar dbkarow = \"⤏\";\nvar dblac = \"˝\";\nvar Dcaron = \"Ď\";\nvar dcaron = \"ď\";\nvar Dcy = \"Д\";\nvar dcy = \"д\";\nvar ddagger = \"‡\";\nvar ddarr = \"⇊\";\nvar DD = \"ⅅ\";\nvar dd = \"ⅆ\";\nvar DDotrahd = \"⤑\";\nvar ddotseq = \"⩷\";\nvar deg$1 = \"°\";\nvar Del = \"∇\";\nvar Delta = \"Δ\";\nvar delta = \"δ\";\nvar demptyv = \"⦱\";\nvar dfisht = \"⥿\";\nvar Dfr = \"𝔇\";\nvar dfr = \"𝔡\";\nvar dHar = \"⥥\";\nvar dharl = \"⇃\";\nvar dharr = \"⇂\";\nvar DiacriticalAcute = \"´\";\nvar DiacriticalDot = \"˙\";\nvar DiacriticalDoubleAcute = \"˝\";\nvar DiacriticalGrave = \"`\";\nvar DiacriticalTilde = \"˜\";\nvar diam = \"⋄\";\nvar diamond = \"⋄\";\nvar Diamond = \"⋄\";\nvar diamondsuit = \"♦\";\nvar diams = \"♦\";\nvar die = \"¨\";\nvar DifferentialD = \"ⅆ\";\nvar digamma = \"ϝ\";\nvar disin = \"⋲\";\nvar div = \"÷\";\nvar divide$1 = \"÷\";\nvar divideontimes = \"⋇\";\nvar divonx = \"⋇\";\nvar DJcy = \"Ђ\";\nvar djcy = \"ђ\";\nvar dlcorn = \"⌞\";\nvar dlcrop = \"⌍\";\nvar dollar = \"$\";\nvar Dopf = \"𝔻\";\nvar dopf = \"𝕕\";\nvar Dot = \"¨\";\nvar dot = \"˙\";\nvar DotDot = \"⃜\";\nvar doteq = \"≐\";\nvar doteqdot = \"≑\";\nvar DotEqual = \"≐\";\nvar dotminus = \"∸\";\nvar dotplus = \"∔\";\nvar dotsquare = \"⊡\";\nvar doublebarwedge = \"⌆\";\nvar DoubleContourIntegral = \"∯\";\nvar DoubleDot = \"¨\";\nvar DoubleDownArrow = \"⇓\";\nvar DoubleLeftArrow = \"⇐\";\nvar DoubleLeftRightArrow = \"⇔\";\nvar DoubleLeftTee = \"⫤\";\nvar DoubleLongLeftArrow = \"⟸\";\nvar DoubleLongLeftRightArrow = \"⟺\";\nvar DoubleLongRightArrow = \"⟹\";\nvar DoubleRightArrow = \"⇒\";\nvar DoubleRightTee = \"⊨\";\nvar DoubleUpArrow = \"⇑\";\nvar DoubleUpDownArrow = \"⇕\";\nvar DoubleVerticalBar = \"∥\";\nvar DownArrowBar = \"⤓\";\nvar downarrow = \"↓\";\nvar DownArrow = \"↓\";\nvar Downarrow = \"⇓\";\nvar DownArrowUpArrow = \"⇵\";\nvar DownBreve = \"̑\";\nvar downdownarrows = \"⇊\";\nvar downharpoonleft = \"⇃\";\nvar downharpoonright = \"⇂\";\nvar DownLeftRightVector = \"⥐\";\nvar DownLeftTeeVector = \"⥞\";\nvar DownLeftVectorBar = \"⥖\";\nvar DownLeftVector = \"↽\";\nvar DownRightTeeVector = \"⥟\";\nvar DownRightVectorBar = \"⥗\";\nvar DownRightVector = \"⇁\";\nvar DownTeeArrow = \"↧\";\nvar DownTee = \"⊤\";\nvar drbkarow = \"⤐\";\nvar drcorn = \"⌟\";\nvar drcrop = \"⌌\";\nvar Dscr = \"𝒟\";\nvar dscr = \"𝒹\";\nvar DScy = \"Ѕ\";\nvar dscy = \"ѕ\";\nvar dsol = \"⧶\";\nvar Dstrok = \"Đ\";\nvar dstrok = \"đ\";\nvar dtdot = \"⋱\";\nvar dtri = \"▿\";\nvar dtrif = \"▾\";\nvar duarr = \"⇵\";\nvar duhar = \"⥯\";\nvar dwangle = \"⦦\";\nvar DZcy = \"Џ\";\nvar dzcy = \"џ\";\nvar dzigrarr = \"⟿\";\nvar Eacute$1 = \"É\";\nvar eacute$1 = \"é\";\nvar easter = \"⩮\";\nvar Ecaron = \"Ě\";\nvar ecaron = \"ě\";\nvar Ecirc$1 = \"Ê\";\nvar ecirc$1 = \"ê\";\nvar ecir = \"≖\";\nvar ecolon = \"≕\";\nvar Ecy = \"Э\";\nvar ecy = \"э\";\nvar eDDot = \"⩷\";\nvar Edot = \"Ė\";\nvar edot = \"ė\";\nvar eDot = \"≑\";\nvar ee = \"ⅇ\";\nvar efDot = \"≒\";\nvar Efr = \"𝔈\";\nvar efr = \"𝔢\";\nvar eg = \"⪚\";\nvar Egrave$1 = \"È\";\nvar egrave$1 = \"è\";\nvar egs = \"⪖\";\nvar egsdot = \"⪘\";\nvar el = \"⪙\";\nvar Element$1 = \"∈\";\nvar elinters = \"⏧\";\nvar ell = \"ℓ\";\nvar els = \"⪕\";\nvar elsdot = \"⪗\";\nvar Emacr = \"Ē\";\nvar emacr = \"ē\";\nvar empty = \"∅\";\nvar emptyset = \"∅\";\nvar EmptySmallSquare = \"◻\";\nvar emptyv = \"∅\";\nvar EmptyVerySmallSquare = \"▫\";\nvar emsp13 = \" \";\nvar emsp14 = \" \";\nvar emsp = \" \";\nvar ENG = \"Ŋ\";\nvar eng = \"ŋ\";\nvar ensp = \" \";\nvar Eogon = \"Ę\";\nvar eogon = \"ę\";\nvar Eopf = \"𝔼\";\nvar eopf = \"𝕖\";\nvar epar = \"⋕\";\nvar eparsl = \"⧣\";\nvar eplus = \"⩱\";\nvar epsi = \"ε\";\nvar Epsilon = \"Ε\";\nvar epsilon = \"ε\";\nvar epsiv = \"ϵ\";\nvar eqcirc = \"≖\";\nvar eqcolon = \"≕\";\nvar eqsim = \"≂\";\nvar eqslantgtr = \"⪖\";\nvar eqslantless = \"⪕\";\nvar Equal = \"⩵\";\nvar equals = \"=\";\nvar EqualTilde = \"≂\";\nvar equest = \"≟\";\nvar Equilibrium = \"⇌\";\nvar equiv = \"≡\";\nvar equivDD = \"⩸\";\nvar eqvparsl = \"⧥\";\nvar erarr = \"⥱\";\nvar erDot = \"≓\";\nvar escr = \"ℯ\";\nvar Escr = \"ℰ\";\nvar esdot = \"≐\";\nvar Esim = \"⩳\";\nvar esim = \"≂\";\nvar Eta = \"Η\";\nvar eta = \"η\";\nvar ETH$1 = \"Ð\";\nvar eth$1 = \"ð\";\nvar Euml$1 = \"Ë\";\nvar euml$1 = \"ë\";\nvar euro = \"€\";\nvar excl = \"!\";\nvar exist = \"∃\";\nvar Exists = \"∃\";\nvar expectation = \"ℰ\";\nvar exponentiale = \"ⅇ\";\nvar ExponentialE = \"ⅇ\";\nvar fallingdotseq = \"≒\";\nvar Fcy = \"Ф\";\nvar fcy = \"ф\";\nvar female = \"♀\";\nvar ffilig = \"ﬃ\";\nvar fflig = \"ﬀ\";\nvar ffllig = \"ﬄ\";\nvar Ffr = \"𝔉\";\nvar ffr = \"𝔣\";\nvar filig = \"ﬁ\";\nvar FilledSmallSquare = \"◼\";\nvar FilledVerySmallSquare = \"▪\";\nvar fjlig = \"fj\";\nvar flat = \"♭\";\nvar fllig = \"ﬂ\";\nvar fltns = \"▱\";\nvar fnof = \"ƒ\";\nvar Fopf = \"𝔽\";\nvar fopf = \"𝕗\";\nvar forall = \"∀\";\nvar ForAll = \"∀\";\nvar fork = \"⋔\";\nvar forkv = \"⫙\";\nvar Fouriertrf = \"ℱ\";\nvar fpartint = \"⨍\";\nvar frac12$1 = \"½\";\nvar frac13 = \"⅓\";\nvar frac14$1 = \"¼\";\nvar frac15 = \"⅕\";\nvar frac16 = \"⅙\";\nvar frac18 = \"⅛\";\nvar frac23 = \"⅔\";\nvar frac25 = \"⅖\";\nvar frac34$1 = \"¾\";\nvar frac35 = \"⅗\";\nvar frac38 = \"⅜\";\nvar frac45 = \"⅘\";\nvar frac56 = \"⅚\";\nvar frac58 = \"⅝\";\nvar frac78 = \"⅞\";\nvar frasl = \"⁄\";\nvar frown = \"⌢\";\nvar fscr = \"𝒻\";\nvar Fscr = \"ℱ\";\nvar gacute = \"ǵ\";\nvar Gamma = \"Γ\";\nvar gamma = \"γ\";\nvar Gammad = \"Ϝ\";\nvar gammad = \"ϝ\";\nvar gap = \"⪆\";\nvar Gbreve = \"Ğ\";\nvar gbreve = \"ğ\";\nvar Gcedil = \"Ģ\";\nvar Gcirc = \"Ĝ\";\nvar gcirc = \"ĝ\";\nvar Gcy = \"Г\";\nvar gcy = \"г\";\nvar Gdot = \"Ġ\";\nvar gdot = \"ġ\";\nvar ge = \"≥\";\nvar gE = \"≧\";\nvar gEl = \"⪌\";\nvar gel = \"⋛\";\nvar geq = \"≥\";\nvar geqq = \"≧\";\nvar geqslant = \"⩾\";\nvar gescc = \"⪩\";\nvar ges = \"⩾\";\nvar gesdot = \"⪀\";\nvar gesdoto = \"⪂\";\nvar gesdotol = \"⪄\";\nvar gesl = \"⋛︀\";\nvar gesles = \"⪔\";\nvar Gfr = \"𝔊\";\nvar gfr = \"𝔤\";\nvar gg = \"≫\";\nvar Gg = \"⋙\";\nvar ggg = \"⋙\";\nvar gimel = \"ℷ\";\nvar GJcy = \"Ѓ\";\nvar gjcy = \"ѓ\";\nvar gla = \"⪥\";\nvar gl = \"≷\";\nvar glE = \"⪒\";\nvar glj = \"⪤\";\nvar gnap = \"⪊\";\nvar gnapprox = \"⪊\";\nvar gne = \"⪈\";\nvar gnE = \"≩\";\nvar gneq = \"⪈\";\nvar gneqq = \"≩\";\nvar gnsim = \"⋧\";\nvar Gopf = \"𝔾\";\nvar gopf = \"𝕘\";\nvar grave = \"`\";\nvar GreaterEqual = \"≥\";\nvar GreaterEqualLess = \"⋛\";\nvar GreaterFullEqual = \"≧\";\nvar GreaterGreater = \"⪢\";\nvar GreaterLess = \"≷\";\nvar GreaterSlantEqual = \"⩾\";\nvar GreaterTilde = \"≳\";\nvar Gscr = \"𝒢\";\nvar gscr = \"ℊ\";\nvar gsim = \"≳\";\nvar gsime = \"⪎\";\nvar gsiml = \"⪐\";\nvar gtcc = \"⪧\";\nvar gtcir = \"⩺\";\nvar gt$2 = \">\";\nvar GT$1 = \">\";\nvar Gt = \"≫\";\nvar gtdot = \"⋗\";\nvar gtlPar = \"⦕\";\nvar gtquest = \"⩼\";\nvar gtrapprox = \"⪆\";\nvar gtrarr = \"⥸\";\nvar gtrdot = \"⋗\";\nvar gtreqless = \"⋛\";\nvar gtreqqless = \"⪌\";\nvar gtrless = \"≷\";\nvar gtrsim = \"≳\";\nvar gvertneqq = \"≩︀\";\nvar gvnE = \"≩︀\";\nvar Hacek = \"ˇ\";\nvar hairsp = \" \";\nvar half = \"½\";\nvar hamilt = \"ℋ\";\nvar HARDcy = \"Ъ\";\nvar hardcy = \"ъ\";\nvar harrcir = \"⥈\";\nvar harr = \"↔\";\nvar hArr = \"⇔\";\nvar harrw = \"↭\";\nvar Hat = \"^\";\nvar hbar = \"ℏ\";\nvar Hcirc = \"Ĥ\";\nvar hcirc = \"ĥ\";\nvar hearts = \"♥\";\nvar heartsuit = \"♥\";\nvar hellip = \"…\";\nvar hercon = \"⊹\";\nvar hfr = \"𝔥\";\nvar Hfr = \"ℌ\";\nvar HilbertSpace = \"ℋ\";\nvar hksearow = \"⤥\";\nvar hkswarow = \"⤦\";\nvar hoarr = \"⇿\";\nvar homtht = \"∻\";\nvar hookleftarrow = \"↩\";\nvar hookrightarrow = \"↪\";\nvar hopf = \"𝕙\";\nvar Hopf = \"ℍ\";\nvar horbar = \"―\";\nvar HorizontalLine = \"─\";\nvar hscr = \"𝒽\";\nvar Hscr = \"ℋ\";\nvar hslash = \"ℏ\";\nvar Hstrok = \"Ħ\";\nvar hstrok = \"ħ\";\nvar HumpDownHump = \"≎\";\nvar HumpEqual = \"≏\";\nvar hybull = \"⁃\";\nvar hyphen = \"‐\";\nvar Iacute$1 = \"Í\";\nvar iacute$1 = \"í\";\nvar ic = \"⁣\";\nvar Icirc$1 = \"Î\";\nvar icirc$1 = \"î\";\nvar Icy = \"И\";\nvar icy = \"и\";\nvar Idot = \"İ\";\nvar IEcy = \"Е\";\nvar iecy = \"е\";\nvar iexcl$1 = \"¡\";\nvar iff = \"⇔\";\nvar ifr = \"𝔦\";\nvar Ifr = \"ℑ\";\nvar Igrave$1 = \"Ì\";\nvar igrave$1 = \"ì\";\nvar ii = \"ⅈ\";\nvar iiiint = \"⨌\";\nvar iiint = \"∭\";\nvar iinfin = \"⧜\";\nvar iiota = \"℩\";\nvar IJlig = \"Ĳ\";\nvar ijlig = \"ĳ\";\nvar Imacr = \"Ī\";\nvar imacr = \"ī\";\nvar image = \"ℑ\";\nvar ImaginaryI = \"ⅈ\";\nvar imagline = \"ℐ\";\nvar imagpart = \"ℑ\";\nvar imath = \"ı\";\nvar Im = \"ℑ\";\nvar imof = \"⊷\";\nvar imped = \"Ƶ\";\nvar Implies = \"⇒\";\nvar incare = \"℅\";\nvar infin = \"∞\";\nvar infintie = \"⧝\";\nvar inodot = \"ı\";\nvar intcal = \"⊺\";\nvar int = \"∫\";\nvar Int = \"∬\";\nvar integers = \"ℤ\";\nvar Integral = \"∫\";\nvar intercal = \"⊺\";\nvar Intersection = \"⋂\";\nvar intlarhk = \"⨗\";\nvar intprod = \"⨼\";\nvar InvisibleComma = \"⁣\";\nvar InvisibleTimes = \"⁢\";\nvar IOcy = \"Ё\";\nvar iocy = \"ё\";\nvar Iogon = \"Į\";\nvar iogon = \"į\";\nvar Iopf = \"𝕀\";\nvar iopf = \"𝕚\";\nvar Iota = \"Ι\";\nvar iota = \"ι\";\nvar iprod = \"⨼\";\nvar iquest$1 = \"¿\";\nvar iscr = \"𝒾\";\nvar Iscr = \"ℐ\";\nvar isin = \"∈\";\nvar isindot = \"⋵\";\nvar isinE = \"⋹\";\nvar isins = \"⋴\";\nvar isinsv = \"⋳\";\nvar isinv = \"∈\";\nvar it = \"⁢\";\nvar Itilde = \"Ĩ\";\nvar itilde = \"ĩ\";\nvar Iukcy = \"І\";\nvar iukcy = \"і\";\nvar Iuml$1 = \"Ï\";\nvar iuml$1 = \"ï\";\nvar Jcirc = \"Ĵ\";\nvar jcirc = \"ĵ\";\nvar Jcy = \"Й\";\nvar jcy = \"й\";\nvar Jfr = \"𝔍\";\nvar jfr = \"𝔧\";\nvar jmath = \"ȷ\";\nvar Jopf = \"𝕁\";\nvar jopf = \"𝕛\";\nvar Jscr = \"𝒥\";\nvar jscr = \"𝒿\";\nvar Jsercy = \"Ј\";\nvar jsercy = \"ј\";\nvar Jukcy = \"Є\";\nvar jukcy = \"є\";\nvar Kappa = \"Κ\";\nvar kappa = \"κ\";\nvar kappav = \"ϰ\";\nvar Kcedil = \"Ķ\";\nvar kcedil = \"ķ\";\nvar Kcy = \"К\";\nvar kcy = \"к\";\nvar Kfr = \"𝔎\";\nvar kfr = \"𝔨\";\nvar kgreen = \"ĸ\";\nvar KHcy = \"Х\";\nvar khcy = \"х\";\nvar KJcy = \"Ќ\";\nvar kjcy = \"ќ\";\nvar Kopf = \"𝕂\";\nvar kopf = \"𝕜\";\nvar Kscr = \"𝒦\";\nvar kscr = \"𝓀\";\nvar lAarr = \"⇚\";\nvar Lacute = \"Ĺ\";\nvar lacute = \"ĺ\";\nvar laemptyv = \"⦴\";\nvar lagran = \"ℒ\";\nvar Lambda = \"Λ\";\nvar lambda = \"λ\";\nvar lang = \"⟨\";\nvar Lang = \"⟪\";\nvar langd = \"⦑\";\nvar langle = \"⟨\";\nvar lap = \"⪅\";\nvar Laplacetrf = \"ℒ\";\nvar laquo$1 = \"«\";\nvar larrb = \"⇤\";\nvar larrbfs = \"⤟\";\nvar larr = \"←\";\nvar Larr = \"↞\";\nvar lArr = \"⇐\";\nvar larrfs = \"⤝\";\nvar larrhk = \"↩\";\nvar larrlp = \"↫\";\nvar larrpl = \"⤹\";\nvar larrsim = \"⥳\";\nvar larrtl = \"↢\";\nvar latail = \"⤙\";\nvar lAtail = \"⤛\";\nvar lat = \"⪫\";\nvar late = \"⪭\";\nvar lates = \"⪭︀\";\nvar lbarr = \"⤌\";\nvar lBarr = \"⤎\";\nvar lbbrk = \"❲\";\nvar lbrace = \"{\";\nvar lbrack = \"[\";\nvar lbrke = \"⦋\";\nvar lbrksld = \"⦏\";\nvar lbrkslu = \"⦍\";\nvar Lcaron = \"Ľ\";\nvar lcaron = \"ľ\";\nvar Lcedil = \"Ļ\";\nvar lcedil = \"ļ\";\nvar lceil = \"⌈\";\nvar lcub = \"{\";\nvar Lcy = \"Л\";\nvar lcy = \"л\";\nvar ldca = \"⤶\";\nvar ldquo = \"“\";\nvar ldquor = \"„\";\nvar ldrdhar = \"⥧\";\nvar ldrushar = \"⥋\";\nvar ldsh = \"↲\";\nvar le = \"≤\";\nvar lE = \"≦\";\nvar LeftAngleBracket = \"⟨\";\nvar LeftArrowBar = \"⇤\";\nvar leftarrow = \"←\";\nvar LeftArrow = \"←\";\nvar Leftarrow = \"⇐\";\nvar LeftArrowRightArrow = \"⇆\";\nvar leftarrowtail = \"↢\";\nvar LeftCeiling = \"⌈\";\nvar LeftDoubleBracket = \"⟦\";\nvar LeftDownTeeVector = \"⥡\";\nvar LeftDownVectorBar = \"⥙\";\nvar LeftDownVector = \"⇃\";\nvar LeftFloor = \"⌊\";\nvar leftharpoondown = \"↽\";\nvar leftharpoonup = \"↼\";\nvar leftleftarrows = \"⇇\";\nvar leftrightarrow = \"↔\";\nvar LeftRightArrow = \"↔\";\nvar Leftrightarrow = \"⇔\";\nvar leftrightarrows = \"⇆\";\nvar leftrightharpoons = \"⇋\";\nvar leftrightsquigarrow = \"↭\";\nvar LeftRightVector = \"⥎\";\nvar LeftTeeArrow = \"↤\";\nvar LeftTee = \"⊣\";\nvar LeftTeeVector = \"⥚\";\nvar leftthreetimes = \"⋋\";\nvar LeftTriangleBar = \"⧏\";\nvar LeftTriangle = \"⊲\";\nvar LeftTriangleEqual = \"⊴\";\nvar LeftUpDownVector = \"⥑\";\nvar LeftUpTeeVector = \"⥠\";\nvar LeftUpVectorBar = \"⥘\";\nvar LeftUpVector = \"↿\";\nvar LeftVectorBar = \"⥒\";\nvar LeftVector = \"↼\";\nvar lEg = \"⪋\";\nvar leg = \"⋚\";\nvar leq = \"≤\";\nvar leqq = \"≦\";\nvar leqslant = \"⩽\";\nvar lescc = \"⪨\";\nvar les = \"⩽\";\nvar lesdot = \"⩿\";\nvar lesdoto = \"⪁\";\nvar lesdotor = \"⪃\";\nvar lesg = \"⋚︀\";\nvar lesges = \"⪓\";\nvar lessapprox = \"⪅\";\nvar lessdot = \"⋖\";\nvar lesseqgtr = \"⋚\";\nvar lesseqqgtr = \"⪋\";\nvar LessEqualGreater = \"⋚\";\nvar LessFullEqual = \"≦\";\nvar LessGreater = \"≶\";\nvar lessgtr = \"≶\";\nvar LessLess = \"⪡\";\nvar lesssim = \"≲\";\nvar LessSlantEqual = \"⩽\";\nvar LessTilde = \"≲\";\nvar lfisht = \"⥼\";\nvar lfloor = \"⌊\";\nvar Lfr = \"𝔏\";\nvar lfr = \"𝔩\";\nvar lg = \"≶\";\nvar lgE = \"⪑\";\nvar lHar = \"⥢\";\nvar lhard = \"↽\";\nvar lharu = \"↼\";\nvar lharul = \"⥪\";\nvar lhblk = \"▄\";\nvar LJcy = \"Љ\";\nvar ljcy = \"љ\";\nvar llarr = \"⇇\";\nvar ll = \"≪\";\nvar Ll = \"⋘\";\nvar llcorner = \"⌞\";\nvar Lleftarrow = \"⇚\";\nvar llhard = \"⥫\";\nvar lltri = \"◺\";\nvar Lmidot = \"Ŀ\";\nvar lmidot = \"ŀ\";\nvar lmoustache = \"⎰\";\nvar lmoust = \"⎰\";\nvar lnap = \"⪉\";\nvar lnapprox = \"⪉\";\nvar lne = \"⪇\";\nvar lnE = \"≨\";\nvar lneq = \"⪇\";\nvar lneqq = \"≨\";\nvar lnsim = \"⋦\";\nvar loang = \"⟬\";\nvar loarr = \"⇽\";\nvar lobrk = \"⟦\";\nvar longleftarrow = \"⟵\";\nvar LongLeftArrow = \"⟵\";\nvar Longleftarrow = \"⟸\";\nvar longleftrightarrow = \"⟷\";\nvar LongLeftRightArrow = \"⟷\";\nvar Longleftrightarrow = \"⟺\";\nvar longmapsto = \"⟼\";\nvar longrightarrow = \"⟶\";\nvar LongRightArrow = \"⟶\";\nvar Longrightarrow = \"⟹\";\nvar looparrowleft = \"↫\";\nvar looparrowright = \"↬\";\nvar lopar = \"⦅\";\nvar Lopf = \"𝕃\";\nvar lopf = \"𝕝\";\nvar loplus = \"⨭\";\nvar lotimes = \"⨴\";\nvar lowast = \"∗\";\nvar lowbar = \"_\";\nvar LowerLeftArrow = \"↙\";\nvar LowerRightArrow = \"↘\";\nvar loz = \"◊\";\nvar lozenge = \"◊\";\nvar lozf = \"⧫\";\nvar lpar = \"(\";\nvar lparlt = \"⦓\";\nvar lrarr = \"⇆\";\nvar lrcorner = \"⌟\";\nvar lrhar = \"⇋\";\nvar lrhard = \"⥭\";\nvar lrm = \"‎\";\nvar lrtri = \"⊿\";\nvar lsaquo = \"‹\";\nvar lscr = \"𝓁\";\nvar Lscr = \"ℒ\";\nvar lsh = \"↰\";\nvar Lsh = \"↰\";\nvar lsim = \"≲\";\nvar lsime = \"⪍\";\nvar lsimg = \"⪏\";\nvar lsqb = \"[\";\nvar lsquo = \"‘\";\nvar lsquor = \"‚\";\nvar Lstrok = \"Ł\";\nvar lstrok = \"ł\";\nvar ltcc = \"⪦\";\nvar ltcir = \"⩹\";\nvar lt$2 = \"<\";\nvar LT$1 = \"<\";\nvar Lt = \"≪\";\nvar ltdot = \"⋖\";\nvar lthree = \"⋋\";\nvar ltimes = \"⋉\";\nvar ltlarr = \"⥶\";\nvar ltquest = \"⩻\";\nvar ltri = \"◃\";\nvar ltrie = \"⊴\";\nvar ltrif = \"◂\";\nvar ltrPar = \"⦖\";\nvar lurdshar = \"⥊\";\nvar luruhar = \"⥦\";\nvar lvertneqq = \"≨︀\";\nvar lvnE = \"≨︀\";\nvar macr$1 = \"¯\";\nvar male = \"♂\";\nvar malt = \"✠\";\nvar maltese = \"✠\";\nvar map = \"↦\";\nvar mapsto = \"↦\";\nvar mapstodown = \"↧\";\nvar mapstoleft = \"↤\";\nvar mapstoup = \"↥\";\nvar marker = \"▮\";\nvar mcomma = \"⨩\";\nvar Mcy = \"М\";\nvar mcy = \"м\";\nvar mdash = \"—\";\nvar mDDot = \"∺\";\nvar measuredangle = \"∡\";\nvar MediumSpace = \" \";\nvar Mellintrf = \"ℳ\";\nvar Mfr = \"𝔐\";\nvar mfr = \"𝔪\";\nvar mho = \"℧\";\nvar micro$1 = \"µ\";\nvar midast = \"*\";\nvar midcir = \"⫰\";\nvar mid = \"∣\";\nvar middot$1 = \"·\";\nvar minusb = \"⊟\";\nvar minus = \"−\";\nvar minusd = \"∸\";\nvar minusdu = \"⨪\";\nvar MinusPlus = \"∓\";\nvar mlcp = \"⫛\";\nvar mldr = \"…\";\nvar mnplus = \"∓\";\nvar models = \"⊧\";\nvar Mopf = \"𝕄\";\nvar mopf = \"𝕞\";\nvar mp = \"∓\";\nvar mscr = \"𝓂\";\nvar Mscr = \"ℳ\";\nvar mstpos = \"∾\";\nvar Mu = \"Μ\";\nvar mu = \"μ\";\nvar multimap = \"⊸\";\nvar mumap = \"⊸\";\nvar nabla = \"∇\";\nvar Nacute = \"Ń\";\nvar nacute = \"ń\";\nvar nang = \"∠⃒\";\nvar nap = \"≉\";\nvar napE = \"⩰̸\";\nvar napid = \"≋̸\";\nvar napos = \"ŉ\";\nvar napprox = \"≉\";\nvar natural = \"♮\";\nvar naturals = \"ℕ\";\nvar natur = \"♮\";\nvar nbsp$1 = \" \";\nvar nbump = \"≎̸\";\nvar nbumpe = \"≏̸\";\nvar ncap = \"⩃\";\nvar Ncaron = \"Ň\";\nvar ncaron = \"ň\";\nvar Ncedil = \"Ņ\";\nvar ncedil = \"ņ\";\nvar ncong = \"≇\";\nvar ncongdot = \"⩭̸\";\nvar ncup = \"⩂\";\nvar Ncy = \"Н\";\nvar ncy = \"н\";\nvar ndash = \"–\";\nvar nearhk = \"⤤\";\nvar nearr = \"↗\";\nvar neArr = \"⇗\";\nvar nearrow = \"↗\";\nvar ne = \"≠\";\nvar nedot = \"≐̸\";\nvar NegativeMediumSpace = \"​\";\nvar NegativeThickSpace = \"​\";\nvar NegativeThinSpace = \"​\";\nvar NegativeVeryThinSpace = \"​\";\nvar nequiv = \"≢\";\nvar nesear = \"⤨\";\nvar nesim = \"≂̸\";\nvar NestedGreaterGreater = \"≫\";\nvar NestedLessLess = \"≪\";\nvar NewLine = \"\\n\";\nvar nexist = \"∄\";\nvar nexists = \"∄\";\nvar Nfr = \"𝔑\";\nvar nfr = \"𝔫\";\nvar ngE = \"≧̸\";\nvar nge = \"≱\";\nvar ngeq = \"≱\";\nvar ngeqq = \"≧̸\";\nvar ngeqslant = \"⩾̸\";\nvar nges = \"⩾̸\";\nvar nGg = \"⋙̸\";\nvar ngsim = \"≵\";\nvar nGt = \"≫⃒\";\nvar ngt = \"≯\";\nvar ngtr = \"≯\";\nvar nGtv = \"≫̸\";\nvar nharr = \"↮\";\nvar nhArr = \"⇎\";\nvar nhpar = \"⫲\";\nvar ni = \"∋\";\nvar nis = \"⋼\";\nvar nisd = \"⋺\";\nvar niv = \"∋\";\nvar NJcy = \"Њ\";\nvar njcy = \"њ\";\nvar nlarr = \"↚\";\nvar nlArr = \"⇍\";\nvar nldr = \"‥\";\nvar nlE = \"≦̸\";\nvar nle = \"≰\";\nvar nleftarrow = \"↚\";\nvar nLeftarrow = \"⇍\";\nvar nleftrightarrow = \"↮\";\nvar nLeftrightarrow = \"⇎\";\nvar nleq = \"≰\";\nvar nleqq = \"≦̸\";\nvar nleqslant = \"⩽̸\";\nvar nles = \"⩽̸\";\nvar nless = \"≮\";\nvar nLl = \"⋘̸\";\nvar nlsim = \"≴\";\nvar nLt = \"≪⃒\";\nvar nlt = \"≮\";\nvar nltri = \"⋪\";\nvar nltrie = \"⋬\";\nvar nLtv = \"≪̸\";\nvar nmid = \"∤\";\nvar NoBreak = \"⁠\";\nvar NonBreakingSpace = \" \";\nvar nopf = \"𝕟\";\nvar Nopf = \"ℕ\";\nvar Not = \"⫬\";\nvar not$1 = \"¬\";\nvar NotCongruent = \"≢\";\nvar NotCupCap = \"≭\";\nvar NotDoubleVerticalBar = \"∦\";\nvar NotElement = \"∉\";\nvar NotEqual = \"≠\";\nvar NotEqualTilde = \"≂̸\";\nvar NotExists = \"∄\";\nvar NotGreater = \"≯\";\nvar NotGreaterEqual = \"≱\";\nvar NotGreaterFullEqual = \"≧̸\";\nvar NotGreaterGreater = \"≫̸\";\nvar NotGreaterLess = \"≹\";\nvar NotGreaterSlantEqual = \"⩾̸\";\nvar NotGreaterTilde = \"≵\";\nvar NotHumpDownHump = \"≎̸\";\nvar NotHumpEqual = \"≏̸\";\nvar notin = \"∉\";\nvar notindot = \"⋵̸\";\nvar notinE = \"⋹̸\";\nvar notinva = \"∉\";\nvar notinvb = \"⋷\";\nvar notinvc = \"⋶\";\nvar NotLeftTriangleBar = \"⧏̸\";\nvar NotLeftTriangle = \"⋪\";\nvar NotLeftTriangleEqual = \"⋬\";\nvar NotLess = \"≮\";\nvar NotLessEqual = \"≰\";\nvar NotLessGreater = \"≸\";\nvar NotLessLess = \"≪̸\";\nvar NotLessSlantEqual = \"⩽̸\";\nvar NotLessTilde = \"≴\";\nvar NotNestedGreaterGreater = \"⪢̸\";\nvar NotNestedLessLess = \"⪡̸\";\nvar notni = \"∌\";\nvar notniva = \"∌\";\nvar notnivb = \"⋾\";\nvar notnivc = \"⋽\";\nvar NotPrecedes = \"⊀\";\nvar NotPrecedesEqual = \"⪯̸\";\nvar NotPrecedesSlantEqual = \"⋠\";\nvar NotReverseElement = \"∌\";\nvar NotRightTriangleBar = \"⧐̸\";\nvar NotRightTriangle = \"⋫\";\nvar NotRightTriangleEqual = \"⋭\";\nvar NotSquareSubset = \"⊏̸\";\nvar NotSquareSubsetEqual = \"⋢\";\nvar NotSquareSuperset = \"⊐̸\";\nvar NotSquareSupersetEqual = \"⋣\";\nvar NotSubset = \"⊂⃒\";\nvar NotSubsetEqual = \"⊈\";\nvar NotSucceeds = \"⊁\";\nvar NotSucceedsEqual = \"⪰̸\";\nvar NotSucceedsSlantEqual = \"⋡\";\nvar NotSucceedsTilde = \"≿̸\";\nvar NotSuperset = \"⊃⃒\";\nvar NotSupersetEqual = \"⊉\";\nvar NotTilde = \"≁\";\nvar NotTildeEqual = \"≄\";\nvar NotTildeFullEqual = \"≇\";\nvar NotTildeTilde = \"≉\";\nvar NotVerticalBar = \"∤\";\nvar nparallel = \"∦\";\nvar npar = \"∦\";\nvar nparsl = \"⫽⃥\";\nvar npart = \"∂̸\";\nvar npolint = \"⨔\";\nvar npr = \"⊀\";\nvar nprcue = \"⋠\";\nvar nprec = \"⊀\";\nvar npreceq = \"⪯̸\";\nvar npre = \"⪯̸\";\nvar nrarrc = \"⤳̸\";\nvar nrarr = \"↛\";\nvar nrArr = \"⇏\";\nvar nrarrw = \"↝̸\";\nvar nrightarrow = \"↛\";\nvar nRightarrow = \"⇏\";\nvar nrtri = \"⋫\";\nvar nrtrie = \"⋭\";\nvar nsc = \"⊁\";\nvar nsccue = \"⋡\";\nvar nsce = \"⪰̸\";\nvar Nscr = \"𝒩\";\nvar nscr = \"𝓃\";\nvar nshortmid = \"∤\";\nvar nshortparallel = \"∦\";\nvar nsim = \"≁\";\nvar nsime = \"≄\";\nvar nsimeq = \"≄\";\nvar nsmid = \"∤\";\nvar nspar = \"∦\";\nvar nsqsube = \"⋢\";\nvar nsqsupe = \"⋣\";\nvar nsub = \"⊄\";\nvar nsubE = \"⫅̸\";\nvar nsube = \"⊈\";\nvar nsubset = \"⊂⃒\";\nvar nsubseteq = \"⊈\";\nvar nsubseteqq = \"⫅̸\";\nvar nsucc = \"⊁\";\nvar nsucceq = \"⪰̸\";\nvar nsup = \"⊅\";\nvar nsupE = \"⫆̸\";\nvar nsupe = \"⊉\";\nvar nsupset = \"⊃⃒\";\nvar nsupseteq = \"⊉\";\nvar nsupseteqq = \"⫆̸\";\nvar ntgl = \"≹\";\nvar Ntilde$1 = \"Ñ\";\nvar ntilde$1 = \"ñ\";\nvar ntlg = \"≸\";\nvar ntriangleleft = \"⋪\";\nvar ntrianglelefteq = \"⋬\";\nvar ntriangleright = \"⋫\";\nvar ntrianglerighteq = \"⋭\";\nvar Nu = \"Ν\";\nvar nu = \"ν\";\nvar num = \"#\";\nvar numero = \"№\";\nvar numsp = \" \";\nvar nvap = \"≍⃒\";\nvar nvdash = \"⊬\";\nvar nvDash = \"⊭\";\nvar nVdash = \"⊮\";\nvar nVDash = \"⊯\";\nvar nvge = \"≥⃒\";\nvar nvgt = \">⃒\";\nvar nvHarr = \"⤄\";\nvar nvinfin = \"⧞\";\nvar nvlArr = \"⤂\";\nvar nvle = \"≤⃒\";\nvar nvlt = \"<⃒\";\nvar nvltrie = \"⊴⃒\";\nvar nvrArr = \"⤃\";\nvar nvrtrie = \"⊵⃒\";\nvar nvsim = \"∼⃒\";\nvar nwarhk = \"⤣\";\nvar nwarr = \"↖\";\nvar nwArr = \"⇖\";\nvar nwarrow = \"↖\";\nvar nwnear = \"⤧\";\nvar Oacute$1 = \"Ó\";\nvar oacute$1 = \"ó\";\nvar oast = \"⊛\";\nvar Ocirc$1 = \"Ô\";\nvar ocirc$1 = \"ô\";\nvar ocir = \"⊚\";\nvar Ocy = \"О\";\nvar ocy = \"о\";\nvar odash = \"⊝\";\nvar Odblac = \"Ő\";\nvar odblac = \"ő\";\nvar odiv = \"⨸\";\nvar odot = \"⊙\";\nvar odsold = \"⦼\";\nvar OElig = \"Œ\";\nvar oelig = \"œ\";\nvar ofcir = \"⦿\";\nvar Ofr = \"𝔒\";\nvar ofr = \"𝔬\";\nvar ogon = \"˛\";\nvar Ograve$1 = \"Ò\";\nvar ograve$1 = \"ò\";\nvar ogt = \"⧁\";\nvar ohbar = \"⦵\";\nvar ohm = \"Ω\";\nvar oint = \"∮\";\nvar olarr = \"↺\";\nvar olcir = \"⦾\";\nvar olcross = \"⦻\";\nvar oline = \"‾\";\nvar olt = \"⧀\";\nvar Omacr = \"Ō\";\nvar omacr = \"ō\";\nvar Omega = \"Ω\";\nvar omega = \"ω\";\nvar Omicron = \"Ο\";\nvar omicron = \"ο\";\nvar omid = \"⦶\";\nvar ominus = \"⊖\";\nvar Oopf = \"𝕆\";\nvar oopf = \"𝕠\";\nvar opar = \"⦷\";\nvar OpenCurlyDoubleQuote = \"“\";\nvar OpenCurlyQuote = \"‘\";\nvar operp = \"⦹\";\nvar oplus = \"⊕\";\nvar orarr = \"↻\";\nvar Or = \"⩔\";\nvar or = \"∨\";\nvar ord = \"⩝\";\nvar order = \"ℴ\";\nvar orderof = \"ℴ\";\nvar ordf$1 = \"ª\";\nvar ordm$1 = \"º\";\nvar origof = \"⊶\";\nvar oror = \"⩖\";\nvar orslope = \"⩗\";\nvar orv = \"⩛\";\nvar oS = \"Ⓢ\";\nvar Oscr = \"𝒪\";\nvar oscr = \"ℴ\";\nvar Oslash$1 = \"Ø\";\nvar oslash$1 = \"ø\";\nvar osol = \"⊘\";\nvar Otilde$1 = \"Õ\";\nvar otilde$1 = \"õ\";\nvar otimesas = \"⨶\";\nvar Otimes = \"⨷\";\nvar otimes = \"⊗\";\nvar Ouml$1 = \"Ö\";\nvar ouml$1 = \"ö\";\nvar ovbar = \"⌽\";\nvar OverBar = \"‾\";\nvar OverBrace = \"⏞\";\nvar OverBracket = \"⎴\";\nvar OverParenthesis = \"⏜\";\nvar para$1 = \"¶\";\nvar parallel = \"∥\";\nvar par = \"∥\";\nvar parsim = \"⫳\";\nvar parsl = \"⫽\";\nvar part = \"∂\";\nvar PartialD = \"∂\";\nvar Pcy = \"П\";\nvar pcy = \"п\";\nvar percnt = \"%\";\nvar period = \".\";\nvar permil = \"‰\";\nvar perp = \"⊥\";\nvar pertenk = \"‱\";\nvar Pfr = \"𝔓\";\nvar pfr = \"𝔭\";\nvar Phi = \"Φ\";\nvar phi = \"φ\";\nvar phiv = \"ϕ\";\nvar phmmat = \"ℳ\";\nvar phone = \"☎\";\nvar Pi = \"Π\";\nvar pi = \"π\";\nvar pitchfork = \"⋔\";\nvar piv = \"ϖ\";\nvar planck = \"ℏ\";\nvar planckh = \"ℎ\";\nvar plankv = \"ℏ\";\nvar plusacir = \"⨣\";\nvar plusb = \"⊞\";\nvar pluscir = \"⨢\";\nvar plus = \"+\";\nvar plusdo = \"∔\";\nvar plusdu = \"⨥\";\nvar pluse = \"⩲\";\nvar PlusMinus = \"±\";\nvar plusmn$1 = \"±\";\nvar plussim = \"⨦\";\nvar plustwo = \"⨧\";\nvar pm = \"±\";\nvar Poincareplane = \"ℌ\";\nvar pointint = \"⨕\";\nvar popf = \"𝕡\";\nvar Popf = \"ℙ\";\nvar pound$1 = \"£\";\nvar prap = \"⪷\";\nvar Pr = \"⪻\";\nvar pr = \"≺\";\nvar prcue = \"≼\";\nvar precapprox = \"⪷\";\nvar prec = \"≺\";\nvar preccurlyeq = \"≼\";\nvar Precedes = \"≺\";\nvar PrecedesEqual = \"⪯\";\nvar PrecedesSlantEqual = \"≼\";\nvar PrecedesTilde = \"≾\";\nvar preceq = \"⪯\";\nvar precnapprox = \"⪹\";\nvar precneqq = \"⪵\";\nvar precnsim = \"⋨\";\nvar pre = \"⪯\";\nvar prE = \"⪳\";\nvar precsim = \"≾\";\nvar prime = \"′\";\nvar Prime = \"″\";\nvar primes = \"ℙ\";\nvar prnap = \"⪹\";\nvar prnE = \"⪵\";\nvar prnsim = \"⋨\";\nvar prod = \"∏\";\nvar Product = \"∏\";\nvar profalar = \"⌮\";\nvar profline = \"⌒\";\nvar profsurf = \"⌓\";\nvar prop = \"∝\";\nvar Proportional = \"∝\";\nvar Proportion = \"∷\";\nvar propto = \"∝\";\nvar prsim = \"≾\";\nvar prurel = \"⊰\";\nvar Pscr = \"𝒫\";\nvar pscr = \"𝓅\";\nvar Psi = \"Ψ\";\nvar psi = \"ψ\";\nvar puncsp = \" \";\nvar Qfr = \"𝔔\";\nvar qfr = \"𝔮\";\nvar qint = \"⨌\";\nvar qopf = \"𝕢\";\nvar Qopf = \"ℚ\";\nvar qprime = \"⁗\";\nvar Qscr = \"𝒬\";\nvar qscr = \"𝓆\";\nvar quaternions = \"ℍ\";\nvar quatint = \"⨖\";\nvar quest = \"?\";\nvar questeq = \"≟\";\nvar quot$2 = \"\\\"\";\nvar QUOT$1 = \"\\\"\";\nvar rAarr = \"⇛\";\nvar race = \"∽̱\";\nvar Racute = \"Ŕ\";\nvar racute = \"ŕ\";\nvar radic = \"√\";\nvar raemptyv = \"⦳\";\nvar rang = \"⟩\";\nvar Rang = \"⟫\";\nvar rangd = \"⦒\";\nvar range = \"⦥\";\nvar rangle = \"⟩\";\nvar raquo$1 = \"»\";\nvar rarrap = \"⥵\";\nvar rarrb = \"⇥\";\nvar rarrbfs = \"⤠\";\nvar rarrc = \"⤳\";\nvar rarr = \"→\";\nvar Rarr = \"↠\";\nvar rArr = \"⇒\";\nvar rarrfs = \"⤞\";\nvar rarrhk = \"↪\";\nvar rarrlp = \"↬\";\nvar rarrpl = \"⥅\";\nvar rarrsim = \"⥴\";\nvar Rarrtl = \"⤖\";\nvar rarrtl = \"↣\";\nvar rarrw = \"↝\";\nvar ratail = \"⤚\";\nvar rAtail = \"⤜\";\nvar ratio = \"∶\";\nvar rationals = \"ℚ\";\nvar rbarr = \"⤍\";\nvar rBarr = \"⤏\";\nvar RBarr = \"⤐\";\nvar rbbrk = \"❳\";\nvar rbrace = \"}\";\nvar rbrack = \"]\";\nvar rbrke = \"⦌\";\nvar rbrksld = \"⦎\";\nvar rbrkslu = \"⦐\";\nvar Rcaron = \"Ř\";\nvar rcaron = \"ř\";\nvar Rcedil = \"Ŗ\";\nvar rcedil = \"ŗ\";\nvar rceil = \"⌉\";\nvar rcub = \"}\";\nvar Rcy = \"Р\";\nvar rcy = \"р\";\nvar rdca = \"⤷\";\nvar rdldhar = \"⥩\";\nvar rdquo = \"”\";\nvar rdquor = \"”\";\nvar rdsh = \"↳\";\nvar real = \"ℜ\";\nvar realine = \"ℛ\";\nvar realpart = \"ℜ\";\nvar reals = \"ℝ\";\nvar Re = \"ℜ\";\nvar rect = \"▭\";\nvar reg$1 = \"®\";\nvar REG$1 = \"®\";\nvar ReverseElement = \"∋\";\nvar ReverseEquilibrium = \"⇋\";\nvar ReverseUpEquilibrium = \"⥯\";\nvar rfisht = \"⥽\";\nvar rfloor = \"⌋\";\nvar rfr = \"𝔯\";\nvar Rfr = \"ℜ\";\nvar rHar = \"⥤\";\nvar rhard = \"⇁\";\nvar rharu = \"⇀\";\nvar rharul = \"⥬\";\nvar Rho = \"Ρ\";\nvar rho = \"ρ\";\nvar rhov = \"ϱ\";\nvar RightAngleBracket = \"⟩\";\nvar RightArrowBar = \"⇥\";\nvar rightarrow = \"→\";\nvar RightArrow = \"→\";\nvar Rightarrow = \"⇒\";\nvar RightArrowLeftArrow = \"⇄\";\nvar rightarrowtail = \"↣\";\nvar RightCeiling = \"⌉\";\nvar RightDoubleBracket = \"⟧\";\nvar RightDownTeeVector = \"⥝\";\nvar RightDownVectorBar = \"⥕\";\nvar RightDownVector = \"⇂\";\nvar RightFloor = \"⌋\";\nvar rightharpoondown = \"⇁\";\nvar rightharpoonup = \"⇀\";\nvar rightleftarrows = \"⇄\";\nvar rightleftharpoons = \"⇌\";\nvar rightrightarrows = \"⇉\";\nvar rightsquigarrow = \"↝\";\nvar RightTeeArrow = \"↦\";\nvar RightTee = \"⊢\";\nvar RightTeeVector = \"⥛\";\nvar rightthreetimes = \"⋌\";\nvar RightTriangleBar = \"⧐\";\nvar RightTriangle = \"⊳\";\nvar RightTriangleEqual = \"⊵\";\nvar RightUpDownVector = \"⥏\";\nvar RightUpTeeVector = \"⥜\";\nvar RightUpVectorBar = \"⥔\";\nvar RightUpVector = \"↾\";\nvar RightVectorBar = \"⥓\";\nvar RightVector = \"⇀\";\nvar ring = \"˚\";\nvar risingdotseq = \"≓\";\nvar rlarr = \"⇄\";\nvar rlhar = \"⇌\";\nvar rlm = \"‏\";\nvar rmoustache = \"⎱\";\nvar rmoust = \"⎱\";\nvar rnmid = \"⫮\";\nvar roang = \"⟭\";\nvar roarr = \"⇾\";\nvar robrk = \"⟧\";\nvar ropar = \"⦆\";\nvar ropf = \"𝕣\";\nvar Ropf = \"ℝ\";\nvar roplus = \"⨮\";\nvar rotimes = \"⨵\";\nvar RoundImplies = \"⥰\";\nvar rpar = \")\";\nvar rpargt = \"⦔\";\nvar rppolint = \"⨒\";\nvar rrarr = \"⇉\";\nvar Rrightarrow = \"⇛\";\nvar rsaquo = \"›\";\nvar rscr = \"𝓇\";\nvar Rscr = \"ℛ\";\nvar rsh = \"↱\";\nvar Rsh = \"↱\";\nvar rsqb = \"]\";\nvar rsquo = \"’\";\nvar rsquor = \"’\";\nvar rthree = \"⋌\";\nvar rtimes = \"⋊\";\nvar rtri = \"▹\";\nvar rtrie = \"⊵\";\nvar rtrif = \"▸\";\nvar rtriltri = \"⧎\";\nvar RuleDelayed = \"⧴\";\nvar ruluhar = \"⥨\";\nvar rx = \"℞\";\nvar Sacute = \"Ś\";\nvar sacute = \"ś\";\nvar sbquo = \"‚\";\nvar scap = \"⪸\";\nvar Scaron = \"Š\";\nvar scaron = \"š\";\nvar Sc = \"⪼\";\nvar sc = \"≻\";\nvar sccue = \"≽\";\nvar sce = \"⪰\";\nvar scE = \"⪴\";\nvar Scedil = \"Ş\";\nvar scedil = \"ş\";\nvar Scirc = \"Ŝ\";\nvar scirc = \"ŝ\";\nvar scnap = \"⪺\";\nvar scnE = \"⪶\";\nvar scnsim = \"⋩\";\nvar scpolint = \"⨓\";\nvar scsim = \"≿\";\nvar Scy = \"С\";\nvar scy = \"с\";\nvar sdotb = \"⊡\";\nvar sdot = \"⋅\";\nvar sdote = \"⩦\";\nvar searhk = \"⤥\";\nvar searr = \"↘\";\nvar seArr = \"⇘\";\nvar searrow = \"↘\";\nvar sect$1 = \"§\";\nvar semi = \";\";\nvar seswar = \"⤩\";\nvar setminus = \"∖\";\nvar setmn = \"∖\";\nvar sext = \"✶\";\nvar Sfr = \"𝔖\";\nvar sfr = \"𝔰\";\nvar sfrown = \"⌢\";\nvar sharp = \"♯\";\nvar SHCHcy = \"Щ\";\nvar shchcy = \"щ\";\nvar SHcy = \"Ш\";\nvar shcy = \"ш\";\nvar ShortDownArrow = \"↓\";\nvar ShortLeftArrow = \"←\";\nvar shortmid = \"∣\";\nvar shortparallel = \"∥\";\nvar ShortRightArrow = \"→\";\nvar ShortUpArrow = \"↑\";\nvar shy$1 = \"­\";\nvar Sigma = \"Σ\";\nvar sigma = \"σ\";\nvar sigmaf = \"ς\";\nvar sigmav = \"ς\";\nvar sim = \"∼\";\nvar simdot = \"⩪\";\nvar sime = \"≃\";\nvar simeq = \"≃\";\nvar simg = \"⪞\";\nvar simgE = \"⪠\";\nvar siml = \"⪝\";\nvar simlE = \"⪟\";\nvar simne = \"≆\";\nvar simplus = \"⨤\";\nvar simrarr = \"⥲\";\nvar slarr = \"←\";\nvar SmallCircle = \"∘\";\nvar smallsetminus = \"∖\";\nvar smashp = \"⨳\";\nvar smeparsl = \"⧤\";\nvar smid = \"∣\";\nvar smile = \"⌣\";\nvar smt = \"⪪\";\nvar smte = \"⪬\";\nvar smtes = \"⪬︀\";\nvar SOFTcy = \"Ь\";\nvar softcy = \"ь\";\nvar solbar = \"⌿\";\nvar solb = \"⧄\";\nvar sol = \"/\";\nvar Sopf = \"𝕊\";\nvar sopf = \"𝕤\";\nvar spades = \"♠\";\nvar spadesuit = \"♠\";\nvar spar = \"∥\";\nvar sqcap = \"⊓\";\nvar sqcaps = \"⊓︀\";\nvar sqcup = \"⊔\";\nvar sqcups = \"⊔︀\";\nvar Sqrt = \"√\";\nvar sqsub = \"⊏\";\nvar sqsube = \"⊑\";\nvar sqsubset = \"⊏\";\nvar sqsubseteq = \"⊑\";\nvar sqsup = \"⊐\";\nvar sqsupe = \"⊒\";\nvar sqsupset = \"⊐\";\nvar sqsupseteq = \"⊒\";\nvar square = \"□\";\nvar Square = \"□\";\nvar SquareIntersection = \"⊓\";\nvar SquareSubset = \"⊏\";\nvar SquareSubsetEqual = \"⊑\";\nvar SquareSuperset = \"⊐\";\nvar SquareSupersetEqual = \"⊒\";\nvar SquareUnion = \"⊔\";\nvar squarf = \"▪\";\nvar squ = \"□\";\nvar squf = \"▪\";\nvar srarr = \"→\";\nvar Sscr = \"𝒮\";\nvar sscr = \"𝓈\";\nvar ssetmn = \"∖\";\nvar ssmile = \"⌣\";\nvar sstarf = \"⋆\";\nvar Star = \"⋆\";\nvar star = \"☆\";\nvar starf = \"★\";\nvar straightepsilon = \"ϵ\";\nvar straightphi = \"ϕ\";\nvar strns = \"¯\";\nvar sub = \"⊂\";\nvar Sub = \"⋐\";\nvar subdot = \"⪽\";\nvar subE = \"⫅\";\nvar sube = \"⊆\";\nvar subedot = \"⫃\";\nvar submult = \"⫁\";\nvar subnE = \"⫋\";\nvar subne = \"⊊\";\nvar subplus = \"⪿\";\nvar subrarr = \"⥹\";\nvar subset = \"⊂\";\nvar Subset = \"⋐\";\nvar subseteq = \"⊆\";\nvar subseteqq = \"⫅\";\nvar SubsetEqual = \"⊆\";\nvar subsetneq = \"⊊\";\nvar subsetneqq = \"⫋\";\nvar subsim = \"⫇\";\nvar subsub = \"⫕\";\nvar subsup = \"⫓\";\nvar succapprox = \"⪸\";\nvar succ = \"≻\";\nvar succcurlyeq = \"≽\";\nvar Succeeds = \"≻\";\nvar SucceedsEqual = \"⪰\";\nvar SucceedsSlantEqual = \"≽\";\nvar SucceedsTilde = \"≿\";\nvar succeq = \"⪰\";\nvar succnapprox = \"⪺\";\nvar succneqq = \"⪶\";\nvar succnsim = \"⋩\";\nvar succsim = \"≿\";\nvar SuchThat = \"∋\";\nvar sum = \"∑\";\nvar Sum = \"∑\";\nvar sung = \"♪\";\nvar sup1$1 = \"¹\";\nvar sup2$1 = \"²\";\nvar sup3$1 = \"³\";\nvar sup = \"⊃\";\nvar Sup = \"⋑\";\nvar supdot = \"⪾\";\nvar supdsub = \"⫘\";\nvar supE = \"⫆\";\nvar supe = \"⊇\";\nvar supedot = \"⫄\";\nvar Superset = \"⊃\";\nvar SupersetEqual = \"⊇\";\nvar suphsol = \"⟉\";\nvar suphsub = \"⫗\";\nvar suplarr = \"⥻\";\nvar supmult = \"⫂\";\nvar supnE = \"⫌\";\nvar supne = \"⊋\";\nvar supplus = \"⫀\";\nvar supset = \"⊃\";\nvar Supset = \"⋑\";\nvar supseteq = \"⊇\";\nvar supseteqq = \"⫆\";\nvar supsetneq = \"⊋\";\nvar supsetneqq = \"⫌\";\nvar supsim = \"⫈\";\nvar supsub = \"⫔\";\nvar supsup = \"⫖\";\nvar swarhk = \"⤦\";\nvar swarr = \"↙\";\nvar swArr = \"⇙\";\nvar swarrow = \"↙\";\nvar swnwar = \"⤪\";\nvar szlig$1 = \"ß\";\nvar Tab = \"\\t\";\nvar target = \"⌖\";\nvar Tau = \"Τ\";\nvar tau = \"τ\";\nvar tbrk = \"⎴\";\nvar Tcaron = \"Ť\";\nvar tcaron = \"ť\";\nvar Tcedil = \"Ţ\";\nvar tcedil = \"ţ\";\nvar Tcy = \"Т\";\nvar tcy = \"т\";\nvar tdot = \"⃛\";\nvar telrec = \"⌕\";\nvar Tfr = \"𝔗\";\nvar tfr = \"𝔱\";\nvar there4 = \"∴\";\nvar therefore = \"∴\";\nvar Therefore = \"∴\";\nvar Theta = \"Θ\";\nvar theta = \"θ\";\nvar thetasym = \"ϑ\";\nvar thetav = \"ϑ\";\nvar thickapprox = \"≈\";\nvar thicksim = \"∼\";\nvar ThickSpace = \"  \";\nvar ThinSpace = \" \";\nvar thinsp = \" \";\nvar thkap = \"≈\";\nvar thksim = \"∼\";\nvar THORN$1 = \"Þ\";\nvar thorn$1 = \"þ\";\nvar tilde = \"˜\";\nvar Tilde = \"∼\";\nvar TildeEqual = \"≃\";\nvar TildeFullEqual = \"≅\";\nvar TildeTilde = \"≈\";\nvar timesbar = \"⨱\";\nvar timesb = \"⊠\";\nvar times$1 = \"×\";\nvar timesd = \"⨰\";\nvar tint = \"∭\";\nvar toea = \"⤨\";\nvar topbot = \"⌶\";\nvar topcir = \"⫱\";\nvar top = \"⊤\";\nvar Topf = \"𝕋\";\nvar topf = \"𝕥\";\nvar topfork = \"⫚\";\nvar tosa = \"⤩\";\nvar tprime = \"‴\";\nvar trade = \"™\";\nvar TRADE = \"™\";\nvar triangle = \"▵\";\nvar triangledown = \"▿\";\nvar triangleleft = \"◃\";\nvar trianglelefteq = \"⊴\";\nvar triangleq = \"≜\";\nvar triangleright = \"▹\";\nvar trianglerighteq = \"⊵\";\nvar tridot = \"◬\";\nvar trie = \"≜\";\nvar triminus = \"⨺\";\nvar TripleDot = \"⃛\";\nvar triplus = \"⨹\";\nvar trisb = \"⧍\";\nvar tritime = \"⨻\";\nvar trpezium = \"⏢\";\nvar Tscr = \"𝒯\";\nvar tscr = \"𝓉\";\nvar TScy = \"Ц\";\nvar tscy = \"ц\";\nvar TSHcy = \"Ћ\";\nvar tshcy = \"ћ\";\nvar Tstrok = \"Ŧ\";\nvar tstrok = \"ŧ\";\nvar twixt = \"≬\";\nvar twoheadleftarrow = \"↞\";\nvar twoheadrightarrow = \"↠\";\nvar Uacute$1 = \"Ú\";\nvar uacute$1 = \"ú\";\nvar uarr = \"↑\";\nvar Uarr = \"↟\";\nvar uArr = \"⇑\";\nvar Uarrocir = \"⥉\";\nvar Ubrcy = \"Ў\";\nvar ubrcy = \"ў\";\nvar Ubreve = \"Ŭ\";\nvar ubreve = \"ŭ\";\nvar Ucirc$1 = \"Û\";\nvar ucirc$1 = \"û\";\nvar Ucy = \"У\";\nvar ucy = \"у\";\nvar udarr = \"⇅\";\nvar Udblac = \"Ű\";\nvar udblac = \"ű\";\nvar udhar = \"⥮\";\nvar ufisht = \"⥾\";\nvar Ufr = \"𝔘\";\nvar ufr = \"𝔲\";\nvar Ugrave$1 = \"Ù\";\nvar ugrave$1 = \"ù\";\nvar uHar = \"⥣\";\nvar uharl = \"↿\";\nvar uharr = \"↾\";\nvar uhblk = \"▀\";\nvar ulcorn = \"⌜\";\nvar ulcorner = \"⌜\";\nvar ulcrop = \"⌏\";\nvar ultri = \"◸\";\nvar Umacr = \"Ū\";\nvar umacr = \"ū\";\nvar uml$1 = \"¨\";\nvar UnderBar = \"_\";\nvar UnderBrace = \"⏟\";\nvar UnderBracket = \"⎵\";\nvar UnderParenthesis = \"⏝\";\nvar Union = \"⋃\";\nvar UnionPlus = \"⊎\";\nvar Uogon = \"Ų\";\nvar uogon = \"ų\";\nvar Uopf = \"𝕌\";\nvar uopf = \"𝕦\";\nvar UpArrowBar = \"⤒\";\nvar uparrow = \"↑\";\nvar UpArrow = \"↑\";\nvar Uparrow = \"⇑\";\nvar UpArrowDownArrow = \"⇅\";\nvar updownarrow = \"↕\";\nvar UpDownArrow = \"↕\";\nvar Updownarrow = \"⇕\";\nvar UpEquilibrium = \"⥮\";\nvar upharpoonleft = \"↿\";\nvar upharpoonright = \"↾\";\nvar uplus = \"⊎\";\nvar UpperLeftArrow = \"↖\";\nvar UpperRightArrow = \"↗\";\nvar upsi = \"υ\";\nvar Upsi = \"ϒ\";\nvar upsih = \"ϒ\";\nvar Upsilon = \"Υ\";\nvar upsilon = \"υ\";\nvar UpTeeArrow = \"↥\";\nvar UpTee = \"⊥\";\nvar upuparrows = \"⇈\";\nvar urcorn = \"⌝\";\nvar urcorner = \"⌝\";\nvar urcrop = \"⌎\";\nvar Uring = \"Ů\";\nvar uring = \"ů\";\nvar urtri = \"◹\";\nvar Uscr = \"𝒰\";\nvar uscr = \"𝓊\";\nvar utdot = \"⋰\";\nvar Utilde = \"Ũ\";\nvar utilde = \"ũ\";\nvar utri = \"▵\";\nvar utrif = \"▴\";\nvar uuarr = \"⇈\";\nvar Uuml$1 = \"Ü\";\nvar uuml$1 = \"ü\";\nvar uwangle = \"⦧\";\nvar vangrt = \"⦜\";\nvar varepsilon = \"ϵ\";\nvar varkappa = \"ϰ\";\nvar varnothing = \"∅\";\nvar varphi = \"ϕ\";\nvar varpi = \"ϖ\";\nvar varpropto = \"∝\";\nvar varr = \"↕\";\nvar vArr = \"⇕\";\nvar varrho = \"ϱ\";\nvar varsigma = \"ς\";\nvar varsubsetneq = \"⊊︀\";\nvar varsubsetneqq = \"⫋︀\";\nvar varsupsetneq = \"⊋︀\";\nvar varsupsetneqq = \"⫌︀\";\nvar vartheta = \"ϑ\";\nvar vartriangleleft = \"⊲\";\nvar vartriangleright = \"⊳\";\nvar vBar = \"⫨\";\nvar Vbar = \"⫫\";\nvar vBarv = \"⫩\";\nvar Vcy = \"В\";\nvar vcy = \"в\";\nvar vdash = \"⊢\";\nvar vDash = \"⊨\";\nvar Vdash = \"⊩\";\nvar VDash = \"⊫\";\nvar Vdashl = \"⫦\";\nvar veebar = \"⊻\";\nvar vee = \"∨\";\nvar Vee = \"⋁\";\nvar veeeq = \"≚\";\nvar vellip = \"⋮\";\nvar verbar = \"|\";\nvar Verbar = \"‖\";\nvar vert = \"|\";\nvar Vert = \"‖\";\nvar VerticalBar = \"∣\";\nvar VerticalLine = \"|\";\nvar VerticalSeparator = \"❘\";\nvar VerticalTilde = \"≀\";\nvar VeryThinSpace = \" \";\nvar Vfr = \"𝔙\";\nvar vfr = \"𝔳\";\nvar vltri = \"⊲\";\nvar vnsub = \"⊂⃒\";\nvar vnsup = \"⊃⃒\";\nvar Vopf = \"𝕍\";\nvar vopf = \"𝕧\";\nvar vprop = \"∝\";\nvar vrtri = \"⊳\";\nvar Vscr = \"𝒱\";\nvar vscr = \"𝓋\";\nvar vsubnE = \"⫋︀\";\nvar vsubne = \"⊊︀\";\nvar vsupnE = \"⫌︀\";\nvar vsupne = \"⊋︀\";\nvar Vvdash = \"⊪\";\nvar vzigzag = \"⦚\";\nvar Wcirc = \"Ŵ\";\nvar wcirc = \"ŵ\";\nvar wedbar = \"⩟\";\nvar wedge = \"∧\";\nvar Wedge = \"⋀\";\nvar wedgeq = \"≙\";\nvar weierp = \"℘\";\nvar Wfr = \"𝔚\";\nvar wfr = \"𝔴\";\nvar Wopf = \"𝕎\";\nvar wopf = \"𝕨\";\nvar wp = \"℘\";\nvar wr = \"≀\";\nvar wreath = \"≀\";\nvar Wscr = \"𝒲\";\nvar wscr = \"𝓌\";\nvar xcap = \"⋂\";\nvar xcirc = \"◯\";\nvar xcup = \"⋃\";\nvar xdtri = \"▽\";\nvar Xfr = \"𝔛\";\nvar xfr = \"𝔵\";\nvar xharr = \"⟷\";\nvar xhArr = \"⟺\";\nvar Xi = \"Ξ\";\nvar xi = \"ξ\";\nvar xlarr = \"⟵\";\nvar xlArr = \"⟸\";\nvar xmap = \"⟼\";\nvar xnis = \"⋻\";\nvar xodot = \"⨀\";\nvar Xopf = \"𝕏\";\nvar xopf = \"𝕩\";\nvar xoplus = \"⨁\";\nvar xotime = \"⨂\";\nvar xrarr = \"⟶\";\nvar xrArr = \"⟹\";\nvar Xscr = \"𝒳\";\nvar xscr = \"𝓍\";\nvar xsqcup = \"⨆\";\nvar xuplus = \"⨄\";\nvar xutri = \"△\";\nvar xvee = \"⋁\";\nvar xwedge = \"⋀\";\nvar Yacute$1 = \"Ý\";\nvar yacute$1 = \"ý\";\nvar YAcy = \"Я\";\nvar yacy = \"я\";\nvar Ycirc = \"Ŷ\";\nvar ycirc = \"ŷ\";\nvar Ycy = \"Ы\";\nvar ycy = \"ы\";\nvar yen$1 = \"¥\";\nvar Yfr = \"𝔜\";\nvar yfr = \"𝔶\";\nvar YIcy = \"Ї\";\nvar yicy = \"ї\";\nvar Yopf = \"𝕐\";\nvar yopf = \"𝕪\";\nvar Yscr = \"𝒴\";\nvar yscr = \"𝓎\";\nvar YUcy = \"Ю\";\nvar yucy = \"ю\";\nvar yuml$1 = \"ÿ\";\nvar Yuml = \"Ÿ\";\nvar Zacute = \"Ź\";\nvar zacute = \"ź\";\nvar Zcaron = \"Ž\";\nvar zcaron = \"ž\";\nvar Zcy = \"З\";\nvar zcy = \"з\";\nvar Zdot = \"Ż\";\nvar zdot = \"ż\";\nvar zeetrf = \"ℨ\";\nvar ZeroWidthSpace = \"​\";\nvar Zeta = \"Ζ\";\nvar zeta = \"ζ\";\nvar zfr = \"𝔷\";\nvar Zfr = \"ℨ\";\nvar ZHcy = \"Ж\";\nvar zhcy = \"ж\";\nvar zigrarr = \"⇝\";\nvar zopf = \"𝕫\";\nvar Zopf = \"ℤ\";\nvar Zscr = \"𝒵\";\nvar zscr = \"𝓏\";\nvar zwj = \"‍\";\nvar zwnj = \"‌\";\nvar require$$1$1 = {\n\tAacute: Aacute$1,\n\taacute: aacute$1,\n\tAbreve: Abreve,\n\tabreve: abreve,\n\tac: ac,\n\tacd: acd,\n\tacE: acE,\n\tAcirc: Acirc$1,\n\tacirc: acirc$1,\n\tacute: acute$1,\n\tAcy: Acy,\n\tacy: acy,\n\tAElig: AElig$1,\n\taelig: aelig$1,\n\taf: af,\n\tAfr: Afr,\n\tafr: afr,\n\tAgrave: Agrave$1,\n\tagrave: agrave$1,\n\talefsym: alefsym,\n\taleph: aleph,\n\tAlpha: Alpha,\n\talpha: alpha,\n\tAmacr: Amacr,\n\tamacr: amacr,\n\tamalg: amalg,\n\tamp: amp$2,\n\tAMP: AMP$1,\n\tandand: andand,\n\tAnd: And,\n\tand: and,\n\tandd: andd,\n\tandslope: andslope,\n\tandv: andv,\n\tang: ang,\n\tange: ange,\n\tangle: angle,\n\tangmsdaa: angmsdaa,\n\tangmsdab: angmsdab,\n\tangmsdac: angmsdac,\n\tangmsdad: angmsdad,\n\tangmsdae: angmsdae,\n\tangmsdaf: angmsdaf,\n\tangmsdag: angmsdag,\n\tangmsdah: angmsdah,\n\tangmsd: angmsd,\n\tangrt: angrt,\n\tangrtvb: angrtvb,\n\tangrtvbd: angrtvbd,\n\tangsph: angsph,\n\tangst: angst,\n\tangzarr: angzarr,\n\tAogon: Aogon,\n\taogon: aogon,\n\tAopf: Aopf,\n\taopf: aopf,\n\tapacir: apacir,\n\tap: ap,\n\tapE: apE,\n\tape: ape,\n\tapid: apid,\n\tapos: apos$1,\n\tApplyFunction: ApplyFunction,\n\tapprox: approx,\n\tapproxeq: approxeq,\n\tAring: Aring$1,\n\taring: aring$1,\n\tAscr: Ascr,\n\tascr: ascr,\n\tAssign: Assign,\n\tast: ast,\n\tasymp: asymp,\n\tasympeq: asympeq,\n\tAtilde: Atilde$1,\n\tatilde: atilde$1,\n\tAuml: Auml$1,\n\tauml: auml$1,\n\tawconint: awconint,\n\tawint: awint,\n\tbackcong: backcong,\n\tbackepsilon: backepsilon,\n\tbackprime: backprime,\n\tbacksim: backsim,\n\tbacksimeq: backsimeq,\n\tBackslash: Backslash,\n\tBarv: Barv,\n\tbarvee: barvee,\n\tbarwed: barwed,\n\tBarwed: Barwed,\n\tbarwedge: barwedge,\n\tbbrk: bbrk,\n\tbbrktbrk: bbrktbrk,\n\tbcong: bcong,\n\tBcy: Bcy,\n\tbcy: bcy,\n\tbdquo: bdquo,\n\tbecaus: becaus,\n\tbecause: because,\n\tBecause: Because,\n\tbemptyv: bemptyv,\n\tbepsi: bepsi,\n\tbernou: bernou,\n\tBernoullis: Bernoullis,\n\tBeta: Beta,\n\tbeta: beta,\n\tbeth: beth,\n\tbetween: between,\n\tBfr: Bfr,\n\tbfr: bfr,\n\tbigcap: bigcap,\n\tbigcirc: bigcirc,\n\tbigcup: bigcup,\n\tbigodot: bigodot,\n\tbigoplus: bigoplus,\n\tbigotimes: bigotimes,\n\tbigsqcup: bigsqcup,\n\tbigstar: bigstar,\n\tbigtriangledown: bigtriangledown,\n\tbigtriangleup: bigtriangleup,\n\tbiguplus: biguplus,\n\tbigvee: bigvee,\n\tbigwedge: bigwedge,\n\tbkarow: bkarow,\n\tblacklozenge: blacklozenge,\n\tblacksquare: blacksquare,\n\tblacktriangle: blacktriangle,\n\tblacktriangledown: blacktriangledown,\n\tblacktriangleleft: blacktriangleleft,\n\tblacktriangleright: blacktriangleright,\n\tblank: blank,\n\tblk12: blk12,\n\tblk14: blk14,\n\tblk34: blk34,\n\tblock: block,\n\tbne: bne,\n\tbnequiv: bnequiv,\n\tbNot: bNot,\n\tbnot: bnot,\n\tBopf: Bopf,\n\tbopf: bopf,\n\tbot: bot,\n\tbottom: bottom,\n\tbowtie: bowtie,\n\tboxbox: boxbox,\n\tboxdl: boxdl,\n\tboxdL: boxdL,\n\tboxDl: boxDl,\n\tboxDL: boxDL,\n\tboxdr: boxdr,\n\tboxdR: boxdR,\n\tboxDr: boxDr,\n\tboxDR: boxDR,\n\tboxh: boxh,\n\tboxH: boxH,\n\tboxhd: boxhd,\n\tboxHd: boxHd,\n\tboxhD: boxhD,\n\tboxHD: boxHD,\n\tboxhu: boxhu,\n\tboxHu: boxHu,\n\tboxhU: boxhU,\n\tboxHU: boxHU,\n\tboxminus: boxminus,\n\tboxplus: boxplus,\n\tboxtimes: boxtimes,\n\tboxul: boxul,\n\tboxuL: boxuL,\n\tboxUl: boxUl,\n\tboxUL: boxUL,\n\tboxur: boxur,\n\tboxuR: boxuR,\n\tboxUr: boxUr,\n\tboxUR: boxUR,\n\tboxv: boxv,\n\tboxV: boxV,\n\tboxvh: boxvh,\n\tboxvH: boxvH,\n\tboxVh: boxVh,\n\tboxVH: boxVH,\n\tboxvl: boxvl,\n\tboxvL: boxvL,\n\tboxVl: boxVl,\n\tboxVL: boxVL,\n\tboxvr: boxvr,\n\tboxvR: boxvR,\n\tboxVr: boxVr,\n\tboxVR: boxVR,\n\tbprime: bprime,\n\tbreve: breve,\n\tBreve: Breve,\n\tbrvbar: brvbar$1,\n\tbscr: bscr,\n\tBscr: Bscr,\n\tbsemi: bsemi,\n\tbsim: bsim,\n\tbsime: bsime,\n\tbsolb: bsolb,\n\tbsol: bsol,\n\tbsolhsub: bsolhsub,\n\tbull: bull,\n\tbullet: bullet,\n\tbump: bump,\n\tbumpE: bumpE,\n\tbumpe: bumpe,\n\tBumpeq: Bumpeq,\n\tbumpeq: bumpeq,\n\tCacute: Cacute,\n\tcacute: cacute,\n\tcapand: capand,\n\tcapbrcup: capbrcup,\n\tcapcap: capcap,\n\tcap: cap,\n\tCap: Cap,\n\tcapcup: capcup,\n\tcapdot: capdot,\n\tCapitalDifferentialD: CapitalDifferentialD,\n\tcaps: caps,\n\tcaret: caret,\n\tcaron: caron,\n\tCayleys: Cayleys,\n\tccaps: ccaps,\n\tCcaron: Ccaron,\n\tccaron: ccaron,\n\tCcedil: Ccedil$1,\n\tccedil: ccedil$1,\n\tCcirc: Ccirc,\n\tccirc: ccirc,\n\tCconint: Cconint,\n\tccups: ccups,\n\tccupssm: ccupssm,\n\tCdot: Cdot,\n\tcdot: cdot,\n\tcedil: cedil$1,\n\tCedilla: Cedilla,\n\tcemptyv: cemptyv,\n\tcent: cent$1,\n\tcenterdot: centerdot,\n\tCenterDot: CenterDot,\n\tcfr: cfr,\n\tCfr: Cfr,\n\tCHcy: CHcy,\n\tchcy: chcy,\n\tcheck: check,\n\tcheckmark: checkmark,\n\tChi: Chi,\n\tchi: chi,\n\tcirc: circ,\n\tcirceq: circeq,\n\tcirclearrowleft: circlearrowleft,\n\tcirclearrowright: circlearrowright,\n\tcircledast: circledast,\n\tcircledcirc: circledcirc,\n\tcircleddash: circleddash,\n\tCircleDot: CircleDot,\n\tcircledR: circledR,\n\tcircledS: circledS,\n\tCircleMinus: CircleMinus,\n\tCirclePlus: CirclePlus,\n\tCircleTimes: CircleTimes,\n\tcir: cir,\n\tcirE: cirE,\n\tcire: cire,\n\tcirfnint: cirfnint,\n\tcirmid: cirmid,\n\tcirscir: cirscir,\n\tClockwiseContourIntegral: ClockwiseContourIntegral,\n\tCloseCurlyDoubleQuote: CloseCurlyDoubleQuote,\n\tCloseCurlyQuote: CloseCurlyQuote,\n\tclubs: clubs,\n\tclubsuit: clubsuit,\n\tcolon: colon,\n\tColon: Colon,\n\tColone: Colone,\n\tcolone: colone,\n\tcoloneq: coloneq,\n\tcomma: comma,\n\tcommat: commat,\n\tcomp: comp,\n\tcompfn: compfn,\n\tcomplement: complement,\n\tcomplexes: complexes,\n\tcong: cong,\n\tcongdot: congdot,\n\tCongruent: Congruent,\n\tconint: conint,\n\tConint: Conint,\n\tContourIntegral: ContourIntegral,\n\tcopf: copf,\n\tCopf: Copf,\n\tcoprod: coprod,\n\tCoproduct: Coproduct,\n\tcopy: copy$1,\n\tCOPY: COPY$1,\n\tcopysr: copysr,\n\tCounterClockwiseContourIntegral: CounterClockwiseContourIntegral,\n\tcrarr: crarr,\n\tcross: cross,\n\tCross: Cross,\n\tCscr: Cscr,\n\tcscr: cscr,\n\tcsub: csub,\n\tcsube: csube,\n\tcsup: csup,\n\tcsupe: csupe,\n\tctdot: ctdot,\n\tcudarrl: cudarrl,\n\tcudarrr: cudarrr,\n\tcuepr: cuepr,\n\tcuesc: cuesc,\n\tcularr: cularr,\n\tcularrp: cularrp,\n\tcupbrcap: cupbrcap,\n\tcupcap: cupcap,\n\tCupCap: CupCap,\n\tcup: cup,\n\tCup: Cup,\n\tcupcup: cupcup,\n\tcupdot: cupdot,\n\tcupor: cupor,\n\tcups: cups,\n\tcurarr: curarr,\n\tcurarrm: curarrm,\n\tcurlyeqprec: curlyeqprec,\n\tcurlyeqsucc: curlyeqsucc,\n\tcurlyvee: curlyvee,\n\tcurlywedge: curlywedge,\n\tcurren: curren$1,\n\tcurvearrowleft: curvearrowleft,\n\tcurvearrowright: curvearrowright,\n\tcuvee: cuvee,\n\tcuwed: cuwed,\n\tcwconint: cwconint,\n\tcwint: cwint,\n\tcylcty: cylcty,\n\tdagger: dagger,\n\tDagger: Dagger,\n\tdaleth: daleth,\n\tdarr: darr,\n\tDarr: Darr,\n\tdArr: dArr,\n\tdash: dash,\n\tDashv: Dashv,\n\tdashv: dashv,\n\tdbkarow: dbkarow,\n\tdblac: dblac,\n\tDcaron: Dcaron,\n\tdcaron: dcaron,\n\tDcy: Dcy,\n\tdcy: dcy,\n\tddagger: ddagger,\n\tddarr: ddarr,\n\tDD: DD,\n\tdd: dd,\n\tDDotrahd: DDotrahd,\n\tddotseq: ddotseq,\n\tdeg: deg$1,\n\tDel: Del,\n\tDelta: Delta,\n\tdelta: delta,\n\tdemptyv: demptyv,\n\tdfisht: dfisht,\n\tDfr: Dfr,\n\tdfr: dfr,\n\tdHar: dHar,\n\tdharl: dharl,\n\tdharr: dharr,\n\tDiacriticalAcute: DiacriticalAcute,\n\tDiacriticalDot: DiacriticalDot,\n\tDiacriticalDoubleAcute: DiacriticalDoubleAcute,\n\tDiacriticalGrave: DiacriticalGrave,\n\tDiacriticalTilde: DiacriticalTilde,\n\tdiam: diam,\n\tdiamond: diamond,\n\tDiamond: Diamond,\n\tdiamondsuit: diamondsuit,\n\tdiams: diams,\n\tdie: die,\n\tDifferentialD: DifferentialD,\n\tdigamma: digamma,\n\tdisin: disin,\n\tdiv: div,\n\tdivide: divide$1,\n\tdivideontimes: divideontimes,\n\tdivonx: divonx,\n\tDJcy: DJcy,\n\tdjcy: djcy,\n\tdlcorn: dlcorn,\n\tdlcrop: dlcrop,\n\tdollar: dollar,\n\tDopf: Dopf,\n\tdopf: dopf,\n\tDot: Dot,\n\tdot: dot,\n\tDotDot: DotDot,\n\tdoteq: doteq,\n\tdoteqdot: doteqdot,\n\tDotEqual: DotEqual,\n\tdotminus: dotminus,\n\tdotplus: dotplus,\n\tdotsquare: dotsquare,\n\tdoublebarwedge: doublebarwedge,\n\tDoubleContourIntegral: DoubleContourIntegral,\n\tDoubleDot: DoubleDot,\n\tDoubleDownArrow: DoubleDownArrow,\n\tDoubleLeftArrow: DoubleLeftArrow,\n\tDoubleLeftRightArrow: DoubleLeftRightArrow,\n\tDoubleLeftTee: DoubleLeftTee,\n\tDoubleLongLeftArrow: DoubleLongLeftArrow,\n\tDoubleLongLeftRightArrow: DoubleLongLeftRightArrow,\n\tDoubleLongRightArrow: DoubleLongRightArrow,\n\tDoubleRightArrow: DoubleRightArrow,\n\tDoubleRightTee: DoubleRightTee,\n\tDoubleUpArrow: DoubleUpArrow,\n\tDoubleUpDownArrow: DoubleUpDownArrow,\n\tDoubleVerticalBar: DoubleVerticalBar,\n\tDownArrowBar: DownArrowBar,\n\tdownarrow: downarrow,\n\tDownArrow: DownArrow,\n\tDownarrow: Downarrow,\n\tDownArrowUpArrow: DownArrowUpArrow,\n\tDownBreve: DownBreve,\n\tdowndownarrows: downdownarrows,\n\tdownharpoonleft: downharpoonleft,\n\tdownharpoonright: downharpoonright,\n\tDownLeftRightVector: DownLeftRightVector,\n\tDownLeftTeeVector: DownLeftTeeVector,\n\tDownLeftVectorBar: DownLeftVectorBar,\n\tDownLeftVector: DownLeftVector,\n\tDownRightTeeVector: DownRightTeeVector,\n\tDownRightVectorBar: DownRightVectorBar,\n\tDownRightVector: DownRightVector,\n\tDownTeeArrow: DownTeeArrow,\n\tDownTee: DownTee,\n\tdrbkarow: drbkarow,\n\tdrcorn: drcorn,\n\tdrcrop: drcrop,\n\tDscr: Dscr,\n\tdscr: dscr,\n\tDScy: DScy,\n\tdscy: dscy,\n\tdsol: dsol,\n\tDstrok: Dstrok,\n\tdstrok: dstrok,\n\tdtdot: dtdot,\n\tdtri: dtri,\n\tdtrif: dtrif,\n\tduarr: duarr,\n\tduhar: duhar,\n\tdwangle: dwangle,\n\tDZcy: DZcy,\n\tdzcy: dzcy,\n\tdzigrarr: dzigrarr,\n\tEacute: Eacute$1,\n\teacute: eacute$1,\n\teaster: easter,\n\tEcaron: Ecaron,\n\tecaron: ecaron,\n\tEcirc: Ecirc$1,\n\tecirc: ecirc$1,\n\tecir: ecir,\n\tecolon: ecolon,\n\tEcy: Ecy,\n\tecy: ecy,\n\teDDot: eDDot,\n\tEdot: Edot,\n\tedot: edot,\n\teDot: eDot,\n\tee: ee,\n\tefDot: efDot,\n\tEfr: Efr,\n\tefr: efr,\n\teg: eg,\n\tEgrave: Egrave$1,\n\tegrave: egrave$1,\n\tegs: egs,\n\tegsdot: egsdot,\n\tel: el,\n\tElement: Element$1,\n\telinters: elinters,\n\tell: ell,\n\tels: els,\n\telsdot: elsdot,\n\tEmacr: Emacr,\n\temacr: emacr,\n\tempty: empty,\n\temptyset: emptyset,\n\tEmptySmallSquare: EmptySmallSquare,\n\temptyv: emptyv,\n\tEmptyVerySmallSquare: EmptyVerySmallSquare,\n\temsp13: emsp13,\n\temsp14: emsp14,\n\temsp: emsp,\n\tENG: ENG,\n\teng: eng,\n\tensp: ensp,\n\tEogon: Eogon,\n\teogon: eogon,\n\tEopf: Eopf,\n\teopf: eopf,\n\tepar: epar,\n\teparsl: eparsl,\n\teplus: eplus,\n\tepsi: epsi,\n\tEpsilon: Epsilon,\n\tepsilon: epsilon,\n\tepsiv: epsiv,\n\teqcirc: eqcirc,\n\teqcolon: eqcolon,\n\teqsim: eqsim,\n\teqslantgtr: eqslantgtr,\n\teqslantless: eqslantless,\n\tEqual: Equal,\n\tequals: equals,\n\tEqualTilde: EqualTilde,\n\tequest: equest,\n\tEquilibrium: Equilibrium,\n\tequiv: equiv,\n\tequivDD: equivDD,\n\teqvparsl: eqvparsl,\n\terarr: erarr,\n\terDot: erDot,\n\tescr: escr,\n\tEscr: Escr,\n\tesdot: esdot,\n\tEsim: Esim,\n\tesim: esim,\n\tEta: Eta,\n\teta: eta,\n\tETH: ETH$1,\n\teth: eth$1,\n\tEuml: Euml$1,\n\teuml: euml$1,\n\teuro: euro,\n\texcl: excl,\n\texist: exist,\n\tExists: Exists,\n\texpectation: expectation,\n\texponentiale: exponentiale,\n\tExponentialE: ExponentialE,\n\tfallingdotseq: fallingdotseq,\n\tFcy: Fcy,\n\tfcy: fcy,\n\tfemale: female,\n\tffilig: ffilig,\n\tfflig: fflig,\n\tffllig: ffllig,\n\tFfr: Ffr,\n\tffr: ffr,\n\tfilig: filig,\n\tFilledSmallSquare: FilledSmallSquare,\n\tFilledVerySmallSquare: FilledVerySmallSquare,\n\tfjlig: fjlig,\n\tflat: flat,\n\tfllig: fllig,\n\tfltns: fltns,\n\tfnof: fnof,\n\tFopf: Fopf,\n\tfopf: fopf,\n\tforall: forall,\n\tForAll: ForAll,\n\tfork: fork,\n\tforkv: forkv,\n\tFouriertrf: Fouriertrf,\n\tfpartint: fpartint,\n\tfrac12: frac12$1,\n\tfrac13: frac13,\n\tfrac14: frac14$1,\n\tfrac15: frac15,\n\tfrac16: frac16,\n\tfrac18: frac18,\n\tfrac23: frac23,\n\tfrac25: frac25,\n\tfrac34: frac34$1,\n\tfrac35: frac35,\n\tfrac38: frac38,\n\tfrac45: frac45,\n\tfrac56: frac56,\n\tfrac58: frac58,\n\tfrac78: frac78,\n\tfrasl: frasl,\n\tfrown: frown,\n\tfscr: fscr,\n\tFscr: Fscr,\n\tgacute: gacute,\n\tGamma: Gamma,\n\tgamma: gamma,\n\tGammad: Gammad,\n\tgammad: gammad,\n\tgap: gap,\n\tGbreve: Gbreve,\n\tgbreve: gbreve,\n\tGcedil: Gcedil,\n\tGcirc: Gcirc,\n\tgcirc: gcirc,\n\tGcy: Gcy,\n\tgcy: gcy,\n\tGdot: Gdot,\n\tgdot: gdot,\n\tge: ge,\n\tgE: gE,\n\tgEl: gEl,\n\tgel: gel,\n\tgeq: geq,\n\tgeqq: geqq,\n\tgeqslant: geqslant,\n\tgescc: gescc,\n\tges: ges,\n\tgesdot: gesdot,\n\tgesdoto: gesdoto,\n\tgesdotol: gesdotol,\n\tgesl: gesl,\n\tgesles: gesles,\n\tGfr: Gfr,\n\tgfr: gfr,\n\tgg: gg,\n\tGg: Gg,\n\tggg: ggg,\n\tgimel: gimel,\n\tGJcy: GJcy,\n\tgjcy: gjcy,\n\tgla: gla,\n\tgl: gl,\n\tglE: glE,\n\tglj: glj,\n\tgnap: gnap,\n\tgnapprox: gnapprox,\n\tgne: gne,\n\tgnE: gnE,\n\tgneq: gneq,\n\tgneqq: gneqq,\n\tgnsim: gnsim,\n\tGopf: Gopf,\n\tgopf: gopf,\n\tgrave: grave,\n\tGreaterEqual: GreaterEqual,\n\tGreaterEqualLess: GreaterEqualLess,\n\tGreaterFullEqual: GreaterFullEqual,\n\tGreaterGreater: GreaterGreater,\n\tGreaterLess: GreaterLess,\n\tGreaterSlantEqual: GreaterSlantEqual,\n\tGreaterTilde: GreaterTilde,\n\tGscr: Gscr,\n\tgscr: gscr,\n\tgsim: gsim,\n\tgsime: gsime,\n\tgsiml: gsiml,\n\tgtcc: gtcc,\n\tgtcir: gtcir,\n\tgt: gt$2,\n\tGT: GT$1,\n\tGt: Gt,\n\tgtdot: gtdot,\n\tgtlPar: gtlPar,\n\tgtquest: gtquest,\n\tgtrapprox: gtrapprox,\n\tgtrarr: gtrarr,\n\tgtrdot: gtrdot,\n\tgtreqless: gtreqless,\n\tgtreqqless: gtreqqless,\n\tgtrless: gtrless,\n\tgtrsim: gtrsim,\n\tgvertneqq: gvertneqq,\n\tgvnE: gvnE,\n\tHacek: Hacek,\n\thairsp: hairsp,\n\thalf: half,\n\thamilt: hamilt,\n\tHARDcy: HARDcy,\n\thardcy: hardcy,\n\tharrcir: harrcir,\n\tharr: harr,\n\thArr: hArr,\n\tharrw: harrw,\n\tHat: Hat,\n\thbar: hbar,\n\tHcirc: Hcirc,\n\thcirc: hcirc,\n\thearts: hearts,\n\theartsuit: heartsuit,\n\thellip: hellip,\n\thercon: hercon,\n\thfr: hfr,\n\tHfr: Hfr,\n\tHilbertSpace: HilbertSpace,\n\thksearow: hksearow,\n\thkswarow: hkswarow,\n\thoarr: hoarr,\n\thomtht: homtht,\n\thookleftarrow: hookleftarrow,\n\thookrightarrow: hookrightarrow,\n\thopf: hopf,\n\tHopf: Hopf,\n\thorbar: horbar,\n\tHorizontalLine: HorizontalLine,\n\thscr: hscr,\n\tHscr: Hscr,\n\thslash: hslash,\n\tHstrok: Hstrok,\n\thstrok: hstrok,\n\tHumpDownHump: HumpDownHump,\n\tHumpEqual: HumpEqual,\n\thybull: hybull,\n\thyphen: hyphen,\n\tIacute: Iacute$1,\n\tiacute: iacute$1,\n\tic: ic,\n\tIcirc: Icirc$1,\n\ticirc: icirc$1,\n\tIcy: Icy,\n\ticy: icy,\n\tIdot: Idot,\n\tIEcy: IEcy,\n\tiecy: iecy,\n\tiexcl: iexcl$1,\n\tiff: iff,\n\tifr: ifr,\n\tIfr: Ifr,\n\tIgrave: Igrave$1,\n\tigrave: igrave$1,\n\tii: ii,\n\tiiiint: iiiint,\n\tiiint: iiint,\n\tiinfin: iinfin,\n\tiiota: iiota,\n\tIJlig: IJlig,\n\tijlig: ijlig,\n\tImacr: Imacr,\n\timacr: imacr,\n\timage: image,\n\tImaginaryI: ImaginaryI,\n\timagline: imagline,\n\timagpart: imagpart,\n\timath: imath,\n\tIm: Im,\n\timof: imof,\n\timped: imped,\n\tImplies: Implies,\n\tincare: incare,\n\t\"in\": \"∈\",\n\tinfin: infin,\n\tinfintie: infintie,\n\tinodot: inodot,\n\tintcal: intcal,\n\tint: int,\n\tInt: Int,\n\tintegers: integers,\n\tIntegral: Integral,\n\tintercal: intercal,\n\tIntersection: Intersection,\n\tintlarhk: intlarhk,\n\tintprod: intprod,\n\tInvisibleComma: InvisibleComma,\n\tInvisibleTimes: InvisibleTimes,\n\tIOcy: IOcy,\n\tiocy: iocy,\n\tIogon: Iogon,\n\tiogon: iogon,\n\tIopf: Iopf,\n\tiopf: iopf,\n\tIota: Iota,\n\tiota: iota,\n\tiprod: iprod,\n\tiquest: iquest$1,\n\tiscr: iscr,\n\tIscr: Iscr,\n\tisin: isin,\n\tisindot: isindot,\n\tisinE: isinE,\n\tisins: isins,\n\tisinsv: isinsv,\n\tisinv: isinv,\n\tit: it,\n\tItilde: Itilde,\n\titilde: itilde,\n\tIukcy: Iukcy,\n\tiukcy: iukcy,\n\tIuml: Iuml$1,\n\tiuml: iuml$1,\n\tJcirc: Jcirc,\n\tjcirc: jcirc,\n\tJcy: Jcy,\n\tjcy: jcy,\n\tJfr: Jfr,\n\tjfr: jfr,\n\tjmath: jmath,\n\tJopf: Jopf,\n\tjopf: jopf,\n\tJscr: Jscr,\n\tjscr: jscr,\n\tJsercy: Jsercy,\n\tjsercy: jsercy,\n\tJukcy: Jukcy,\n\tjukcy: jukcy,\n\tKappa: Kappa,\n\tkappa: kappa,\n\tkappav: kappav,\n\tKcedil: Kcedil,\n\tkcedil: kcedil,\n\tKcy: Kcy,\n\tkcy: kcy,\n\tKfr: Kfr,\n\tkfr: kfr,\n\tkgreen: kgreen,\n\tKHcy: KHcy,\n\tkhcy: khcy,\n\tKJcy: KJcy,\n\tkjcy: kjcy,\n\tKopf: Kopf,\n\tkopf: kopf,\n\tKscr: Kscr,\n\tkscr: kscr,\n\tlAarr: lAarr,\n\tLacute: Lacute,\n\tlacute: lacute,\n\tlaemptyv: laemptyv,\n\tlagran: lagran,\n\tLambda: Lambda,\n\tlambda: lambda,\n\tlang: lang,\n\tLang: Lang,\n\tlangd: langd,\n\tlangle: langle,\n\tlap: lap,\n\tLaplacetrf: Laplacetrf,\n\tlaquo: laquo$1,\n\tlarrb: larrb,\n\tlarrbfs: larrbfs,\n\tlarr: larr,\n\tLarr: Larr,\n\tlArr: lArr,\n\tlarrfs: larrfs,\n\tlarrhk: larrhk,\n\tlarrlp: larrlp,\n\tlarrpl: larrpl,\n\tlarrsim: larrsim,\n\tlarrtl: larrtl,\n\tlatail: latail,\n\tlAtail: lAtail,\n\tlat: lat,\n\tlate: late,\n\tlates: lates,\n\tlbarr: lbarr,\n\tlBarr: lBarr,\n\tlbbrk: lbbrk,\n\tlbrace: lbrace,\n\tlbrack: lbrack,\n\tlbrke: lbrke,\n\tlbrksld: lbrksld,\n\tlbrkslu: lbrkslu,\n\tLcaron: Lcaron,\n\tlcaron: lcaron,\n\tLcedil: Lcedil,\n\tlcedil: lcedil,\n\tlceil: lceil,\n\tlcub: lcub,\n\tLcy: Lcy,\n\tlcy: lcy,\n\tldca: ldca,\n\tldquo: ldquo,\n\tldquor: ldquor,\n\tldrdhar: ldrdhar,\n\tldrushar: ldrushar,\n\tldsh: ldsh,\n\tle: le,\n\tlE: lE,\n\tLeftAngleBracket: LeftAngleBracket,\n\tLeftArrowBar: LeftArrowBar,\n\tleftarrow: leftarrow,\n\tLeftArrow: LeftArrow,\n\tLeftarrow: Leftarrow,\n\tLeftArrowRightArrow: LeftArrowRightArrow,\n\tleftarrowtail: leftarrowtail,\n\tLeftCeiling: LeftCeiling,\n\tLeftDoubleBracket: LeftDoubleBracket,\n\tLeftDownTeeVector: LeftDownTeeVector,\n\tLeftDownVectorBar: LeftDownVectorBar,\n\tLeftDownVector: LeftDownVector,\n\tLeftFloor: LeftFloor,\n\tleftharpoondown: leftharpoondown,\n\tleftharpoonup: leftharpoonup,\n\tleftleftarrows: leftleftarrows,\n\tleftrightarrow: leftrightarrow,\n\tLeftRightArrow: LeftRightArrow,\n\tLeftrightarrow: Leftrightarrow,\n\tleftrightarrows: leftrightarrows,\n\tleftrightharpoons: leftrightharpoons,\n\tleftrightsquigarrow: leftrightsquigarrow,\n\tLeftRightVector: LeftRightVector,\n\tLeftTeeArrow: LeftTeeArrow,\n\tLeftTee: LeftTee,\n\tLeftTeeVector: LeftTeeVector,\n\tleftthreetimes: leftthreetimes,\n\tLeftTriangleBar: LeftTriangleBar,\n\tLeftTriangle: LeftTriangle,\n\tLeftTriangleEqual: LeftTriangleEqual,\n\tLeftUpDownVector: LeftUpDownVector,\n\tLeftUpTeeVector: LeftUpTeeVector,\n\tLeftUpVectorBar: LeftUpVectorBar,\n\tLeftUpVector: LeftUpVector,\n\tLeftVectorBar: LeftVectorBar,\n\tLeftVector: LeftVector,\n\tlEg: lEg,\n\tleg: leg,\n\tleq: leq,\n\tleqq: leqq,\n\tleqslant: leqslant,\n\tlescc: lescc,\n\tles: les,\n\tlesdot: lesdot,\n\tlesdoto: lesdoto,\n\tlesdotor: lesdotor,\n\tlesg: lesg,\n\tlesges: lesges,\n\tlessapprox: lessapprox,\n\tlessdot: lessdot,\n\tlesseqgtr: lesseqgtr,\n\tlesseqqgtr: lesseqqgtr,\n\tLessEqualGreater: LessEqualGreater,\n\tLessFullEqual: LessFullEqual,\n\tLessGreater: LessGreater,\n\tlessgtr: lessgtr,\n\tLessLess: LessLess,\n\tlesssim: lesssim,\n\tLessSlantEqual: LessSlantEqual,\n\tLessTilde: LessTilde,\n\tlfisht: lfisht,\n\tlfloor: lfloor,\n\tLfr: Lfr,\n\tlfr: lfr,\n\tlg: lg,\n\tlgE: lgE,\n\tlHar: lHar,\n\tlhard: lhard,\n\tlharu: lharu,\n\tlharul: lharul,\n\tlhblk: lhblk,\n\tLJcy: LJcy,\n\tljcy: ljcy,\n\tllarr: llarr,\n\tll: ll,\n\tLl: Ll,\n\tllcorner: llcorner,\n\tLleftarrow: Lleftarrow,\n\tllhard: llhard,\n\tlltri: lltri,\n\tLmidot: Lmidot,\n\tlmidot: lmidot,\n\tlmoustache: lmoustache,\n\tlmoust: lmoust,\n\tlnap: lnap,\n\tlnapprox: lnapprox,\n\tlne: lne,\n\tlnE: lnE,\n\tlneq: lneq,\n\tlneqq: lneqq,\n\tlnsim: lnsim,\n\tloang: loang,\n\tloarr: loarr,\n\tlobrk: lobrk,\n\tlongleftarrow: longleftarrow,\n\tLongLeftArrow: LongLeftArrow,\n\tLongleftarrow: Longleftarrow,\n\tlongleftrightarrow: longleftrightarrow,\n\tLongLeftRightArrow: LongLeftRightArrow,\n\tLongleftrightarrow: Longleftrightarrow,\n\tlongmapsto: longmapsto,\n\tlongrightarrow: longrightarrow,\n\tLongRightArrow: LongRightArrow,\n\tLongrightarrow: Longrightarrow,\n\tlooparrowleft: looparrowleft,\n\tlooparrowright: looparrowright,\n\tlopar: lopar,\n\tLopf: Lopf,\n\tlopf: lopf,\n\tloplus: loplus,\n\tlotimes: lotimes,\n\tlowast: lowast,\n\tlowbar: lowbar,\n\tLowerLeftArrow: LowerLeftArrow,\n\tLowerRightArrow: LowerRightArrow,\n\tloz: loz,\n\tlozenge: lozenge,\n\tlozf: lozf,\n\tlpar: lpar,\n\tlparlt: lparlt,\n\tlrarr: lrarr,\n\tlrcorner: lrcorner,\n\tlrhar: lrhar,\n\tlrhard: lrhard,\n\tlrm: lrm,\n\tlrtri: lrtri,\n\tlsaquo: lsaquo,\n\tlscr: lscr,\n\tLscr: Lscr,\n\tlsh: lsh,\n\tLsh: Lsh,\n\tlsim: lsim,\n\tlsime: lsime,\n\tlsimg: lsimg,\n\tlsqb: lsqb,\n\tlsquo: lsquo,\n\tlsquor: lsquor,\n\tLstrok: Lstrok,\n\tlstrok: lstrok,\n\tltcc: ltcc,\n\tltcir: ltcir,\n\tlt: lt$2,\n\tLT: LT$1,\n\tLt: Lt,\n\tltdot: ltdot,\n\tlthree: lthree,\n\tltimes: ltimes,\n\tltlarr: ltlarr,\n\tltquest: ltquest,\n\tltri: ltri,\n\tltrie: ltrie,\n\tltrif: ltrif,\n\tltrPar: ltrPar,\n\tlurdshar: lurdshar,\n\tluruhar: luruhar,\n\tlvertneqq: lvertneqq,\n\tlvnE: lvnE,\n\tmacr: macr$1,\n\tmale: male,\n\tmalt: malt,\n\tmaltese: maltese,\n\t\"Map\": \"⤅\",\n\tmap: map,\n\tmapsto: mapsto,\n\tmapstodown: mapstodown,\n\tmapstoleft: mapstoleft,\n\tmapstoup: mapstoup,\n\tmarker: marker,\n\tmcomma: mcomma,\n\tMcy: Mcy,\n\tmcy: mcy,\n\tmdash: mdash,\n\tmDDot: mDDot,\n\tmeasuredangle: measuredangle,\n\tMediumSpace: MediumSpace,\n\tMellintrf: Mellintrf,\n\tMfr: Mfr,\n\tmfr: mfr,\n\tmho: mho,\n\tmicro: micro$1,\n\tmidast: midast,\n\tmidcir: midcir,\n\tmid: mid,\n\tmiddot: middot$1,\n\tminusb: minusb,\n\tminus: minus,\n\tminusd: minusd,\n\tminusdu: minusdu,\n\tMinusPlus: MinusPlus,\n\tmlcp: mlcp,\n\tmldr: mldr,\n\tmnplus: mnplus,\n\tmodels: models,\n\tMopf: Mopf,\n\tmopf: mopf,\n\tmp: mp,\n\tmscr: mscr,\n\tMscr: Mscr,\n\tmstpos: mstpos,\n\tMu: Mu,\n\tmu: mu,\n\tmultimap: multimap,\n\tmumap: mumap,\n\tnabla: nabla,\n\tNacute: Nacute,\n\tnacute: nacute,\n\tnang: nang,\n\tnap: nap,\n\tnapE: napE,\n\tnapid: napid,\n\tnapos: napos,\n\tnapprox: napprox,\n\tnatural: natural,\n\tnaturals: naturals,\n\tnatur: natur,\n\tnbsp: nbsp$1,\n\tnbump: nbump,\n\tnbumpe: nbumpe,\n\tncap: ncap,\n\tNcaron: Ncaron,\n\tncaron: ncaron,\n\tNcedil: Ncedil,\n\tncedil: ncedil,\n\tncong: ncong,\n\tncongdot: ncongdot,\n\tncup: ncup,\n\tNcy: Ncy,\n\tncy: ncy,\n\tndash: ndash,\n\tnearhk: nearhk,\n\tnearr: nearr,\n\tneArr: neArr,\n\tnearrow: nearrow,\n\tne: ne,\n\tnedot: nedot,\n\tNegativeMediumSpace: NegativeMediumSpace,\n\tNegativeThickSpace: NegativeThickSpace,\n\tNegativeThinSpace: NegativeThinSpace,\n\tNegativeVeryThinSpace: NegativeVeryThinSpace,\n\tnequiv: nequiv,\n\tnesear: nesear,\n\tnesim: nesim,\n\tNestedGreaterGreater: NestedGreaterGreater,\n\tNestedLessLess: NestedLessLess,\n\tNewLine: NewLine,\n\tnexist: nexist,\n\tnexists: nexists,\n\tNfr: Nfr,\n\tnfr: nfr,\n\tngE: ngE,\n\tnge: nge,\n\tngeq: ngeq,\n\tngeqq: ngeqq,\n\tngeqslant: ngeqslant,\n\tnges: nges,\n\tnGg: nGg,\n\tngsim: ngsim,\n\tnGt: nGt,\n\tngt: ngt,\n\tngtr: ngtr,\n\tnGtv: nGtv,\n\tnharr: nharr,\n\tnhArr: nhArr,\n\tnhpar: nhpar,\n\tni: ni,\n\tnis: nis,\n\tnisd: nisd,\n\tniv: niv,\n\tNJcy: NJcy,\n\tnjcy: njcy,\n\tnlarr: nlarr,\n\tnlArr: nlArr,\n\tnldr: nldr,\n\tnlE: nlE,\n\tnle: nle,\n\tnleftarrow: nleftarrow,\n\tnLeftarrow: nLeftarrow,\n\tnleftrightarrow: nleftrightarrow,\n\tnLeftrightarrow: nLeftrightarrow,\n\tnleq: nleq,\n\tnleqq: nleqq,\n\tnleqslant: nleqslant,\n\tnles: nles,\n\tnless: nless,\n\tnLl: nLl,\n\tnlsim: nlsim,\n\tnLt: nLt,\n\tnlt: nlt,\n\tnltri: nltri,\n\tnltrie: nltrie,\n\tnLtv: nLtv,\n\tnmid: nmid,\n\tNoBreak: NoBreak,\n\tNonBreakingSpace: NonBreakingSpace,\n\tnopf: nopf,\n\tNopf: Nopf,\n\tNot: Not,\n\tnot: not$1,\n\tNotCongruent: NotCongruent,\n\tNotCupCap: NotCupCap,\n\tNotDoubleVerticalBar: NotDoubleVerticalBar,\n\tNotElement: NotElement,\n\tNotEqual: NotEqual,\n\tNotEqualTilde: NotEqualTilde,\n\tNotExists: NotExists,\n\tNotGreater: NotGreater,\n\tNotGreaterEqual: NotGreaterEqual,\n\tNotGreaterFullEqual: NotGreaterFullEqual,\n\tNotGreaterGreater: NotGreaterGreater,\n\tNotGreaterLess: NotGreaterLess,\n\tNotGreaterSlantEqual: NotGreaterSlantEqual,\n\tNotGreaterTilde: NotGreaterTilde,\n\tNotHumpDownHump: NotHumpDownHump,\n\tNotHumpEqual: NotHumpEqual,\n\tnotin: notin,\n\tnotindot: notindot,\n\tnotinE: notinE,\n\tnotinva: notinva,\n\tnotinvb: notinvb,\n\tnotinvc: notinvc,\n\tNotLeftTriangleBar: NotLeftTriangleBar,\n\tNotLeftTriangle: NotLeftTriangle,\n\tNotLeftTriangleEqual: NotLeftTriangleEqual,\n\tNotLess: NotLess,\n\tNotLessEqual: NotLessEqual,\n\tNotLessGreater: NotLessGreater,\n\tNotLessLess: NotLessLess,\n\tNotLessSlantEqual: NotLessSlantEqual,\n\tNotLessTilde: NotLessTilde,\n\tNotNestedGreaterGreater: NotNestedGreaterGreater,\n\tNotNestedLessLess: NotNestedLessLess,\n\tnotni: notni,\n\tnotniva: notniva,\n\tnotnivb: notnivb,\n\tnotnivc: notnivc,\n\tNotPrecedes: NotPrecedes,\n\tNotPrecedesEqual: NotPrecedesEqual,\n\tNotPrecedesSlantEqual: NotPrecedesSlantEqual,\n\tNotReverseElement: NotReverseElement,\n\tNotRightTriangleBar: NotRightTriangleBar,\n\tNotRightTriangle: NotRightTriangle,\n\tNotRightTriangleEqual: NotRightTriangleEqual,\n\tNotSquareSubset: NotSquareSubset,\n\tNotSquareSubsetEqual: NotSquareSubsetEqual,\n\tNotSquareSuperset: NotSquareSuperset,\n\tNotSquareSupersetEqual: NotSquareSupersetEqual,\n\tNotSubset: NotSubset,\n\tNotSubsetEqual: NotSubsetEqual,\n\tNotSucceeds: NotSucceeds,\n\tNotSucceedsEqual: NotSucceedsEqual,\n\tNotSucceedsSlantEqual: NotSucceedsSlantEqual,\n\tNotSucceedsTilde: NotSucceedsTilde,\n\tNotSuperset: NotSuperset,\n\tNotSupersetEqual: NotSupersetEqual,\n\tNotTilde: NotTilde,\n\tNotTildeEqual: NotTildeEqual,\n\tNotTildeFullEqual: NotTildeFullEqual,\n\tNotTildeTilde: NotTildeTilde,\n\tNotVerticalBar: NotVerticalBar,\n\tnparallel: nparallel,\n\tnpar: npar,\n\tnparsl: nparsl,\n\tnpart: npart,\n\tnpolint: npolint,\n\tnpr: npr,\n\tnprcue: nprcue,\n\tnprec: nprec,\n\tnpreceq: npreceq,\n\tnpre: npre,\n\tnrarrc: nrarrc,\n\tnrarr: nrarr,\n\tnrArr: nrArr,\n\tnrarrw: nrarrw,\n\tnrightarrow: nrightarrow,\n\tnRightarrow: nRightarrow,\n\tnrtri: nrtri,\n\tnrtrie: nrtrie,\n\tnsc: nsc,\n\tnsccue: nsccue,\n\tnsce: nsce,\n\tNscr: Nscr,\n\tnscr: nscr,\n\tnshortmid: nshortmid,\n\tnshortparallel: nshortparallel,\n\tnsim: nsim,\n\tnsime: nsime,\n\tnsimeq: nsimeq,\n\tnsmid: nsmid,\n\tnspar: nspar,\n\tnsqsube: nsqsube,\n\tnsqsupe: nsqsupe,\n\tnsub: nsub,\n\tnsubE: nsubE,\n\tnsube: nsube,\n\tnsubset: nsubset,\n\tnsubseteq: nsubseteq,\n\tnsubseteqq: nsubseteqq,\n\tnsucc: nsucc,\n\tnsucceq: nsucceq,\n\tnsup: nsup,\n\tnsupE: nsupE,\n\tnsupe: nsupe,\n\tnsupset: nsupset,\n\tnsupseteq: nsupseteq,\n\tnsupseteqq: nsupseteqq,\n\tntgl: ntgl,\n\tNtilde: Ntilde$1,\n\tntilde: ntilde$1,\n\tntlg: ntlg,\n\tntriangleleft: ntriangleleft,\n\tntrianglelefteq: ntrianglelefteq,\n\tntriangleright: ntriangleright,\n\tntrianglerighteq: ntrianglerighteq,\n\tNu: Nu,\n\tnu: nu,\n\tnum: num,\n\tnumero: numero,\n\tnumsp: numsp,\n\tnvap: nvap,\n\tnvdash: nvdash,\n\tnvDash: nvDash,\n\tnVdash: nVdash,\n\tnVDash: nVDash,\n\tnvge: nvge,\n\tnvgt: nvgt,\n\tnvHarr: nvHarr,\n\tnvinfin: nvinfin,\n\tnvlArr: nvlArr,\n\tnvle: nvle,\n\tnvlt: nvlt,\n\tnvltrie: nvltrie,\n\tnvrArr: nvrArr,\n\tnvrtrie: nvrtrie,\n\tnvsim: nvsim,\n\tnwarhk: nwarhk,\n\tnwarr: nwarr,\n\tnwArr: nwArr,\n\tnwarrow: nwarrow,\n\tnwnear: nwnear,\n\tOacute: Oacute$1,\n\toacute: oacute$1,\n\toast: oast,\n\tOcirc: Ocirc$1,\n\tocirc: ocirc$1,\n\tocir: ocir,\n\tOcy: Ocy,\n\tocy: ocy,\n\todash: odash,\n\tOdblac: Odblac,\n\todblac: odblac,\n\todiv: odiv,\n\todot: odot,\n\todsold: odsold,\n\tOElig: OElig,\n\toelig: oelig,\n\tofcir: ofcir,\n\tOfr: Ofr,\n\tofr: ofr,\n\togon: ogon,\n\tOgrave: Ograve$1,\n\tograve: ograve$1,\n\togt: ogt,\n\tohbar: ohbar,\n\tohm: ohm,\n\toint: oint,\n\tolarr: olarr,\n\tolcir: olcir,\n\tolcross: olcross,\n\toline: oline,\n\tolt: olt,\n\tOmacr: Omacr,\n\tomacr: omacr,\n\tOmega: Omega,\n\tomega: omega,\n\tOmicron: Omicron,\n\tomicron: omicron,\n\tomid: omid,\n\tominus: ominus,\n\tOopf: Oopf,\n\toopf: oopf,\n\topar: opar,\n\tOpenCurlyDoubleQuote: OpenCurlyDoubleQuote,\n\tOpenCurlyQuote: OpenCurlyQuote,\n\toperp: operp,\n\toplus: oplus,\n\torarr: orarr,\n\tOr: Or,\n\tor: or,\n\tord: ord,\n\torder: order,\n\torderof: orderof,\n\tordf: ordf$1,\n\tordm: ordm$1,\n\torigof: origof,\n\toror: oror,\n\torslope: orslope,\n\torv: orv,\n\toS: oS,\n\tOscr: Oscr,\n\toscr: oscr,\n\tOslash: Oslash$1,\n\toslash: oslash$1,\n\tosol: osol,\n\tOtilde: Otilde$1,\n\totilde: otilde$1,\n\totimesas: otimesas,\n\tOtimes: Otimes,\n\totimes: otimes,\n\tOuml: Ouml$1,\n\touml: ouml$1,\n\tovbar: ovbar,\n\tOverBar: OverBar,\n\tOverBrace: OverBrace,\n\tOverBracket: OverBracket,\n\tOverParenthesis: OverParenthesis,\n\tpara: para$1,\n\tparallel: parallel,\n\tpar: par,\n\tparsim: parsim,\n\tparsl: parsl,\n\tpart: part,\n\tPartialD: PartialD,\n\tPcy: Pcy,\n\tpcy: pcy,\n\tpercnt: percnt,\n\tperiod: period,\n\tpermil: permil,\n\tperp: perp,\n\tpertenk: pertenk,\n\tPfr: Pfr,\n\tpfr: pfr,\n\tPhi: Phi,\n\tphi: phi,\n\tphiv: phiv,\n\tphmmat: phmmat,\n\tphone: phone,\n\tPi: Pi,\n\tpi: pi,\n\tpitchfork: pitchfork,\n\tpiv: piv,\n\tplanck: planck,\n\tplanckh: planckh,\n\tplankv: plankv,\n\tplusacir: plusacir,\n\tplusb: plusb,\n\tpluscir: pluscir,\n\tplus: plus,\n\tplusdo: plusdo,\n\tplusdu: plusdu,\n\tpluse: pluse,\n\tPlusMinus: PlusMinus,\n\tplusmn: plusmn$1,\n\tplussim: plussim,\n\tplustwo: plustwo,\n\tpm: pm,\n\tPoincareplane: Poincareplane,\n\tpointint: pointint,\n\tpopf: popf,\n\tPopf: Popf,\n\tpound: pound$1,\n\tprap: prap,\n\tPr: Pr,\n\tpr: pr,\n\tprcue: prcue,\n\tprecapprox: precapprox,\n\tprec: prec,\n\tpreccurlyeq: preccurlyeq,\n\tPrecedes: Precedes,\n\tPrecedesEqual: PrecedesEqual,\n\tPrecedesSlantEqual: PrecedesSlantEqual,\n\tPrecedesTilde: PrecedesTilde,\n\tpreceq: preceq,\n\tprecnapprox: precnapprox,\n\tprecneqq: precneqq,\n\tprecnsim: precnsim,\n\tpre: pre,\n\tprE: prE,\n\tprecsim: precsim,\n\tprime: prime,\n\tPrime: Prime,\n\tprimes: primes,\n\tprnap: prnap,\n\tprnE: prnE,\n\tprnsim: prnsim,\n\tprod: prod,\n\tProduct: Product,\n\tprofalar: profalar,\n\tprofline: profline,\n\tprofsurf: profsurf,\n\tprop: prop,\n\tProportional: Proportional,\n\tProportion: Proportion,\n\tpropto: propto,\n\tprsim: prsim,\n\tprurel: prurel,\n\tPscr: Pscr,\n\tpscr: pscr,\n\tPsi: Psi,\n\tpsi: psi,\n\tpuncsp: puncsp,\n\tQfr: Qfr,\n\tqfr: qfr,\n\tqint: qint,\n\tqopf: qopf,\n\tQopf: Qopf,\n\tqprime: qprime,\n\tQscr: Qscr,\n\tqscr: qscr,\n\tquaternions: quaternions,\n\tquatint: quatint,\n\tquest: quest,\n\tquesteq: questeq,\n\tquot: quot$2,\n\tQUOT: QUOT$1,\n\trAarr: rAarr,\n\trace: race,\n\tRacute: Racute,\n\tracute: racute,\n\tradic: radic,\n\traemptyv: raemptyv,\n\trang: rang,\n\tRang: Rang,\n\trangd: rangd,\n\trange: range,\n\trangle: rangle,\n\traquo: raquo$1,\n\trarrap: rarrap,\n\trarrb: rarrb,\n\trarrbfs: rarrbfs,\n\trarrc: rarrc,\n\trarr: rarr,\n\tRarr: Rarr,\n\trArr: rArr,\n\trarrfs: rarrfs,\n\trarrhk: rarrhk,\n\trarrlp: rarrlp,\n\trarrpl: rarrpl,\n\trarrsim: rarrsim,\n\tRarrtl: Rarrtl,\n\trarrtl: rarrtl,\n\trarrw: rarrw,\n\tratail: ratail,\n\trAtail: rAtail,\n\tratio: ratio,\n\trationals: rationals,\n\trbarr: rbarr,\n\trBarr: rBarr,\n\tRBarr: RBarr,\n\trbbrk: rbbrk,\n\trbrace: rbrace,\n\trbrack: rbrack,\n\trbrke: rbrke,\n\trbrksld: rbrksld,\n\trbrkslu: rbrkslu,\n\tRcaron: Rcaron,\n\trcaron: rcaron,\n\tRcedil: Rcedil,\n\trcedil: rcedil,\n\trceil: rceil,\n\trcub: rcub,\n\tRcy: Rcy,\n\trcy: rcy,\n\trdca: rdca,\n\trdldhar: rdldhar,\n\trdquo: rdquo,\n\trdquor: rdquor,\n\trdsh: rdsh,\n\treal: real,\n\trealine: realine,\n\trealpart: realpart,\n\treals: reals,\n\tRe: Re,\n\trect: rect,\n\treg: reg$1,\n\tREG: REG$1,\n\tReverseElement: ReverseElement,\n\tReverseEquilibrium: ReverseEquilibrium,\n\tReverseUpEquilibrium: ReverseUpEquilibrium,\n\trfisht: rfisht,\n\trfloor: rfloor,\n\trfr: rfr,\n\tRfr: Rfr,\n\trHar: rHar,\n\trhard: rhard,\n\trharu: rharu,\n\trharul: rharul,\n\tRho: Rho,\n\trho: rho,\n\trhov: rhov,\n\tRightAngleBracket: RightAngleBracket,\n\tRightArrowBar: RightArrowBar,\n\trightarrow: rightarrow,\n\tRightArrow: RightArrow,\n\tRightarrow: Rightarrow,\n\tRightArrowLeftArrow: RightArrowLeftArrow,\n\trightarrowtail: rightarrowtail,\n\tRightCeiling: RightCeiling,\n\tRightDoubleBracket: RightDoubleBracket,\n\tRightDownTeeVector: RightDownTeeVector,\n\tRightDownVectorBar: RightDownVectorBar,\n\tRightDownVector: RightDownVector,\n\tRightFloor: RightFloor,\n\trightharpoondown: rightharpoondown,\n\trightharpoonup: rightharpoonup,\n\trightleftarrows: rightleftarrows,\n\trightleftharpoons: rightleftharpoons,\n\trightrightarrows: rightrightarrows,\n\trightsquigarrow: rightsquigarrow,\n\tRightTeeArrow: RightTeeArrow,\n\tRightTee: RightTee,\n\tRightTeeVector: RightTeeVector,\n\trightthreetimes: rightthreetimes,\n\tRightTriangleBar: RightTriangleBar,\n\tRightTriangle: RightTriangle,\n\tRightTriangleEqual: RightTriangleEqual,\n\tRightUpDownVector: RightUpDownVector,\n\tRightUpTeeVector: RightUpTeeVector,\n\tRightUpVectorBar: RightUpVectorBar,\n\tRightUpVector: RightUpVector,\n\tRightVectorBar: RightVectorBar,\n\tRightVector: RightVector,\n\tring: ring,\n\trisingdotseq: risingdotseq,\n\trlarr: rlarr,\n\trlhar: rlhar,\n\trlm: rlm,\n\trmoustache: rmoustache,\n\trmoust: rmoust,\n\trnmid: rnmid,\n\troang: roang,\n\troarr: roarr,\n\trobrk: robrk,\n\tropar: ropar,\n\tropf: ropf,\n\tRopf: Ropf,\n\troplus: roplus,\n\trotimes: rotimes,\n\tRoundImplies: RoundImplies,\n\trpar: rpar,\n\trpargt: rpargt,\n\trppolint: rppolint,\n\trrarr: rrarr,\n\tRrightarrow: Rrightarrow,\n\trsaquo: rsaquo,\n\trscr: rscr,\n\tRscr: Rscr,\n\trsh: rsh,\n\tRsh: Rsh,\n\trsqb: rsqb,\n\trsquo: rsquo,\n\trsquor: rsquor,\n\trthree: rthree,\n\trtimes: rtimes,\n\trtri: rtri,\n\trtrie: rtrie,\n\trtrif: rtrif,\n\trtriltri: rtriltri,\n\tRuleDelayed: RuleDelayed,\n\truluhar: ruluhar,\n\trx: rx,\n\tSacute: Sacute,\n\tsacute: sacute,\n\tsbquo: sbquo,\n\tscap: scap,\n\tScaron: Scaron,\n\tscaron: scaron,\n\tSc: Sc,\n\tsc: sc,\n\tsccue: sccue,\n\tsce: sce,\n\tscE: scE,\n\tScedil: Scedil,\n\tscedil: scedil,\n\tScirc: Scirc,\n\tscirc: scirc,\n\tscnap: scnap,\n\tscnE: scnE,\n\tscnsim: scnsim,\n\tscpolint: scpolint,\n\tscsim: scsim,\n\tScy: Scy,\n\tscy: scy,\n\tsdotb: sdotb,\n\tsdot: sdot,\n\tsdote: sdote,\n\tsearhk: searhk,\n\tsearr: searr,\n\tseArr: seArr,\n\tsearrow: searrow,\n\tsect: sect$1,\n\tsemi: semi,\n\tseswar: seswar,\n\tsetminus: setminus,\n\tsetmn: setmn,\n\tsext: sext,\n\tSfr: Sfr,\n\tsfr: sfr,\n\tsfrown: sfrown,\n\tsharp: sharp,\n\tSHCHcy: SHCHcy,\n\tshchcy: shchcy,\n\tSHcy: SHcy,\n\tshcy: shcy,\n\tShortDownArrow: ShortDownArrow,\n\tShortLeftArrow: ShortLeftArrow,\n\tshortmid: shortmid,\n\tshortparallel: shortparallel,\n\tShortRightArrow: ShortRightArrow,\n\tShortUpArrow: ShortUpArrow,\n\tshy: shy$1,\n\tSigma: Sigma,\n\tsigma: sigma,\n\tsigmaf: sigmaf,\n\tsigmav: sigmav,\n\tsim: sim,\n\tsimdot: simdot,\n\tsime: sime,\n\tsimeq: simeq,\n\tsimg: simg,\n\tsimgE: simgE,\n\tsiml: siml,\n\tsimlE: simlE,\n\tsimne: simne,\n\tsimplus: simplus,\n\tsimrarr: simrarr,\n\tslarr: slarr,\n\tSmallCircle: SmallCircle,\n\tsmallsetminus: smallsetminus,\n\tsmashp: smashp,\n\tsmeparsl: smeparsl,\n\tsmid: smid,\n\tsmile: smile,\n\tsmt: smt,\n\tsmte: smte,\n\tsmtes: smtes,\n\tSOFTcy: SOFTcy,\n\tsoftcy: softcy,\n\tsolbar: solbar,\n\tsolb: solb,\n\tsol: sol,\n\tSopf: Sopf,\n\tsopf: sopf,\n\tspades: spades,\n\tspadesuit: spadesuit,\n\tspar: spar,\n\tsqcap: sqcap,\n\tsqcaps: sqcaps,\n\tsqcup: sqcup,\n\tsqcups: sqcups,\n\tSqrt: Sqrt,\n\tsqsub: sqsub,\n\tsqsube: sqsube,\n\tsqsubset: sqsubset,\n\tsqsubseteq: sqsubseteq,\n\tsqsup: sqsup,\n\tsqsupe: sqsupe,\n\tsqsupset: sqsupset,\n\tsqsupseteq: sqsupseteq,\n\tsquare: square,\n\tSquare: Square,\n\tSquareIntersection: SquareIntersection,\n\tSquareSubset: SquareSubset,\n\tSquareSubsetEqual: SquareSubsetEqual,\n\tSquareSuperset: SquareSuperset,\n\tSquareSupersetEqual: SquareSupersetEqual,\n\tSquareUnion: SquareUnion,\n\tsquarf: squarf,\n\tsqu: squ,\n\tsquf: squf,\n\tsrarr: srarr,\n\tSscr: Sscr,\n\tsscr: sscr,\n\tssetmn: ssetmn,\n\tssmile: ssmile,\n\tsstarf: sstarf,\n\tStar: Star,\n\tstar: star,\n\tstarf: starf,\n\tstraightepsilon: straightepsilon,\n\tstraightphi: straightphi,\n\tstrns: strns,\n\tsub: sub,\n\tSub: Sub,\n\tsubdot: subdot,\n\tsubE: subE,\n\tsube: sube,\n\tsubedot: subedot,\n\tsubmult: submult,\n\tsubnE: subnE,\n\tsubne: subne,\n\tsubplus: subplus,\n\tsubrarr: subrarr,\n\tsubset: subset,\n\tSubset: Subset,\n\tsubseteq: subseteq,\n\tsubseteqq: subseteqq,\n\tSubsetEqual: SubsetEqual,\n\tsubsetneq: subsetneq,\n\tsubsetneqq: subsetneqq,\n\tsubsim: subsim,\n\tsubsub: subsub,\n\tsubsup: subsup,\n\tsuccapprox: succapprox,\n\tsucc: succ,\n\tsucccurlyeq: succcurlyeq,\n\tSucceeds: Succeeds,\n\tSucceedsEqual: SucceedsEqual,\n\tSucceedsSlantEqual: SucceedsSlantEqual,\n\tSucceedsTilde: SucceedsTilde,\n\tsucceq: succeq,\n\tsuccnapprox: succnapprox,\n\tsuccneqq: succneqq,\n\tsuccnsim: succnsim,\n\tsuccsim: succsim,\n\tSuchThat: SuchThat,\n\tsum: sum,\n\tSum: Sum,\n\tsung: sung,\n\tsup1: sup1$1,\n\tsup2: sup2$1,\n\tsup3: sup3$1,\n\tsup: sup,\n\tSup: Sup,\n\tsupdot: supdot,\n\tsupdsub: supdsub,\n\tsupE: supE,\n\tsupe: supe,\n\tsupedot: supedot,\n\tSuperset: Superset,\n\tSupersetEqual: SupersetEqual,\n\tsuphsol: suphsol,\n\tsuphsub: suphsub,\n\tsuplarr: suplarr,\n\tsupmult: supmult,\n\tsupnE: supnE,\n\tsupne: supne,\n\tsupplus: supplus,\n\tsupset: supset,\n\tSupset: Supset,\n\tsupseteq: supseteq,\n\tsupseteqq: supseteqq,\n\tsupsetneq: supsetneq,\n\tsupsetneqq: supsetneqq,\n\tsupsim: supsim,\n\tsupsub: supsub,\n\tsupsup: supsup,\n\tswarhk: swarhk,\n\tswarr: swarr,\n\tswArr: swArr,\n\tswarrow: swarrow,\n\tswnwar: swnwar,\n\tszlig: szlig$1,\n\tTab: Tab,\n\ttarget: target,\n\tTau: Tau,\n\ttau: tau,\n\ttbrk: tbrk,\n\tTcaron: Tcaron,\n\ttcaron: tcaron,\n\tTcedil: Tcedil,\n\ttcedil: tcedil,\n\tTcy: Tcy,\n\ttcy: tcy,\n\ttdot: tdot,\n\ttelrec: telrec,\n\tTfr: Tfr,\n\ttfr: tfr,\n\tthere4: there4,\n\ttherefore: therefore,\n\tTherefore: Therefore,\n\tTheta: Theta,\n\ttheta: theta,\n\tthetasym: thetasym,\n\tthetav: thetav,\n\tthickapprox: thickapprox,\n\tthicksim: thicksim,\n\tThickSpace: ThickSpace,\n\tThinSpace: ThinSpace,\n\tthinsp: thinsp,\n\tthkap: thkap,\n\tthksim: thksim,\n\tTHORN: THORN$1,\n\tthorn: thorn$1,\n\ttilde: tilde,\n\tTilde: Tilde,\n\tTildeEqual: TildeEqual,\n\tTildeFullEqual: TildeFullEqual,\n\tTildeTilde: TildeTilde,\n\ttimesbar: timesbar,\n\ttimesb: timesb,\n\ttimes: times$1,\n\ttimesd: timesd,\n\ttint: tint,\n\ttoea: toea,\n\ttopbot: topbot,\n\ttopcir: topcir,\n\ttop: top,\n\tTopf: Topf,\n\ttopf: topf,\n\ttopfork: topfork,\n\ttosa: tosa,\n\ttprime: tprime,\n\ttrade: trade,\n\tTRADE: TRADE,\n\ttriangle: triangle,\n\ttriangledown: triangledown,\n\ttriangleleft: triangleleft,\n\ttrianglelefteq: trianglelefteq,\n\ttriangleq: triangleq,\n\ttriangleright: triangleright,\n\ttrianglerighteq: trianglerighteq,\n\ttridot: tridot,\n\ttrie: trie,\n\ttriminus: triminus,\n\tTripleDot: TripleDot,\n\ttriplus: triplus,\n\ttrisb: trisb,\n\ttritime: tritime,\n\ttrpezium: trpezium,\n\tTscr: Tscr,\n\ttscr: tscr,\n\tTScy: TScy,\n\ttscy: tscy,\n\tTSHcy: TSHcy,\n\ttshcy: tshcy,\n\tTstrok: Tstrok,\n\ttstrok: tstrok,\n\ttwixt: twixt,\n\ttwoheadleftarrow: twoheadleftarrow,\n\ttwoheadrightarrow: twoheadrightarrow,\n\tUacute: Uacute$1,\n\tuacute: uacute$1,\n\tuarr: uarr,\n\tUarr: Uarr,\n\tuArr: uArr,\n\tUarrocir: Uarrocir,\n\tUbrcy: Ubrcy,\n\tubrcy: ubrcy,\n\tUbreve: Ubreve,\n\tubreve: ubreve,\n\tUcirc: Ucirc$1,\n\tucirc: ucirc$1,\n\tUcy: Ucy,\n\tucy: ucy,\n\tudarr: udarr,\n\tUdblac: Udblac,\n\tudblac: udblac,\n\tudhar: udhar,\n\tufisht: ufisht,\n\tUfr: Ufr,\n\tufr: ufr,\n\tUgrave: Ugrave$1,\n\tugrave: ugrave$1,\n\tuHar: uHar,\n\tuharl: uharl,\n\tuharr: uharr,\n\tuhblk: uhblk,\n\tulcorn: ulcorn,\n\tulcorner: ulcorner,\n\tulcrop: ulcrop,\n\tultri: ultri,\n\tUmacr: Umacr,\n\tumacr: umacr,\n\tuml: uml$1,\n\tUnderBar: UnderBar,\n\tUnderBrace: UnderBrace,\n\tUnderBracket: UnderBracket,\n\tUnderParenthesis: UnderParenthesis,\n\tUnion: Union,\n\tUnionPlus: UnionPlus,\n\tUogon: Uogon,\n\tuogon: uogon,\n\tUopf: Uopf,\n\tuopf: uopf,\n\tUpArrowBar: UpArrowBar,\n\tuparrow: uparrow,\n\tUpArrow: UpArrow,\n\tUparrow: Uparrow,\n\tUpArrowDownArrow: UpArrowDownArrow,\n\tupdownarrow: updownarrow,\n\tUpDownArrow: UpDownArrow,\n\tUpdownarrow: Updownarrow,\n\tUpEquilibrium: UpEquilibrium,\n\tupharpoonleft: upharpoonleft,\n\tupharpoonright: upharpoonright,\n\tuplus: uplus,\n\tUpperLeftArrow: UpperLeftArrow,\n\tUpperRightArrow: UpperRightArrow,\n\tupsi: upsi,\n\tUpsi: Upsi,\n\tupsih: upsih,\n\tUpsilon: Upsilon,\n\tupsilon: upsilon,\n\tUpTeeArrow: UpTeeArrow,\n\tUpTee: UpTee,\n\tupuparrows: upuparrows,\n\turcorn: urcorn,\n\turcorner: urcorner,\n\turcrop: urcrop,\n\tUring: Uring,\n\turing: uring,\n\turtri: urtri,\n\tUscr: Uscr,\n\tuscr: uscr,\n\tutdot: utdot,\n\tUtilde: Utilde,\n\tutilde: utilde,\n\tutri: utri,\n\tutrif: utrif,\n\tuuarr: uuarr,\n\tUuml: Uuml$1,\n\tuuml: uuml$1,\n\tuwangle: uwangle,\n\tvangrt: vangrt,\n\tvarepsilon: varepsilon,\n\tvarkappa: varkappa,\n\tvarnothing: varnothing,\n\tvarphi: varphi,\n\tvarpi: varpi,\n\tvarpropto: varpropto,\n\tvarr: varr,\n\tvArr: vArr,\n\tvarrho: varrho,\n\tvarsigma: varsigma,\n\tvarsubsetneq: varsubsetneq,\n\tvarsubsetneqq: varsubsetneqq,\n\tvarsupsetneq: varsupsetneq,\n\tvarsupsetneqq: varsupsetneqq,\n\tvartheta: vartheta,\n\tvartriangleleft: vartriangleleft,\n\tvartriangleright: vartriangleright,\n\tvBar: vBar,\n\tVbar: Vbar,\n\tvBarv: vBarv,\n\tVcy: Vcy,\n\tvcy: vcy,\n\tvdash: vdash,\n\tvDash: vDash,\n\tVdash: Vdash,\n\tVDash: VDash,\n\tVdashl: Vdashl,\n\tveebar: veebar,\n\tvee: vee,\n\tVee: Vee,\n\tveeeq: veeeq,\n\tvellip: vellip,\n\tverbar: verbar,\n\tVerbar: Verbar,\n\tvert: vert,\n\tVert: Vert,\n\tVerticalBar: VerticalBar,\n\tVerticalLine: VerticalLine,\n\tVerticalSeparator: VerticalSeparator,\n\tVerticalTilde: VerticalTilde,\n\tVeryThinSpace: VeryThinSpace,\n\tVfr: Vfr,\n\tvfr: vfr,\n\tvltri: vltri,\n\tvnsub: vnsub,\n\tvnsup: vnsup,\n\tVopf: Vopf,\n\tvopf: vopf,\n\tvprop: vprop,\n\tvrtri: vrtri,\n\tVscr: Vscr,\n\tvscr: vscr,\n\tvsubnE: vsubnE,\n\tvsubne: vsubne,\n\tvsupnE: vsupnE,\n\tvsupne: vsupne,\n\tVvdash: Vvdash,\n\tvzigzag: vzigzag,\n\tWcirc: Wcirc,\n\twcirc: wcirc,\n\twedbar: wedbar,\n\twedge: wedge,\n\tWedge: Wedge,\n\twedgeq: wedgeq,\n\tweierp: weierp,\n\tWfr: Wfr,\n\twfr: wfr,\n\tWopf: Wopf,\n\twopf: wopf,\n\twp: wp,\n\twr: wr,\n\twreath: wreath,\n\tWscr: Wscr,\n\twscr: wscr,\n\txcap: xcap,\n\txcirc: xcirc,\n\txcup: xcup,\n\txdtri: xdtri,\n\tXfr: Xfr,\n\txfr: xfr,\n\txharr: xharr,\n\txhArr: xhArr,\n\tXi: Xi,\n\txi: xi,\n\txlarr: xlarr,\n\txlArr: xlArr,\n\txmap: xmap,\n\txnis: xnis,\n\txodot: xodot,\n\tXopf: Xopf,\n\txopf: xopf,\n\txoplus: xoplus,\n\txotime: xotime,\n\txrarr: xrarr,\n\txrArr: xrArr,\n\tXscr: Xscr,\n\txscr: xscr,\n\txsqcup: xsqcup,\n\txuplus: xuplus,\n\txutri: xutri,\n\txvee: xvee,\n\txwedge: xwedge,\n\tYacute: Yacute$1,\n\tyacute: yacute$1,\n\tYAcy: YAcy,\n\tyacy: yacy,\n\tYcirc: Ycirc,\n\tycirc: ycirc,\n\tYcy: Ycy,\n\tycy: ycy,\n\tyen: yen$1,\n\tYfr: Yfr,\n\tyfr: yfr,\n\tYIcy: YIcy,\n\tyicy: yicy,\n\tYopf: Yopf,\n\tyopf: yopf,\n\tYscr: Yscr,\n\tyscr: yscr,\n\tYUcy: YUcy,\n\tyucy: yucy,\n\tyuml: yuml$1,\n\tYuml: Yuml,\n\tZacute: Zacute,\n\tzacute: zacute,\n\tZcaron: Zcaron,\n\tzcaron: zcaron,\n\tZcy: Zcy,\n\tzcy: zcy,\n\tZdot: Zdot,\n\tzdot: zdot,\n\tzeetrf: zeetrf,\n\tZeroWidthSpace: ZeroWidthSpace,\n\tZeta: Zeta,\n\tzeta: zeta,\n\tzfr: zfr,\n\tZfr: Zfr,\n\tZHcy: ZHcy,\n\tzhcy: zhcy,\n\tzigrarr: zigrarr,\n\tzopf: zopf,\n\tZopf: Zopf,\n\tZscr: Zscr,\n\tzscr: zscr,\n\tzwj: zwj,\n\tzwnj: zwnj\n};\n\nvar Aacute = \"Á\";\nvar aacute = \"á\";\nvar Acirc = \"Â\";\nvar acirc = \"â\";\nvar acute = \"´\";\nvar AElig = \"Æ\";\nvar aelig = \"æ\";\nvar Agrave = \"À\";\nvar agrave = \"à\";\nvar amp$1 = \"&\";\nvar AMP = \"&\";\nvar Aring = \"Å\";\nvar aring = \"å\";\nvar Atilde = \"Ã\";\nvar atilde = \"ã\";\nvar Auml = \"Ä\";\nvar auml = \"ä\";\nvar brvbar = \"¦\";\nvar Ccedil = \"Ç\";\nvar ccedil = \"ç\";\nvar cedil = \"¸\";\nvar cent = \"¢\";\nvar copy = \"©\";\nvar COPY = \"©\";\nvar curren = \"¤\";\nvar deg = \"°\";\nvar divide = \"÷\";\nvar Eacute = \"É\";\nvar eacute = \"é\";\nvar Ecirc = \"Ê\";\nvar ecirc = \"ê\";\nvar Egrave = \"È\";\nvar egrave = \"è\";\nvar ETH = \"Ð\";\nvar eth = \"ð\";\nvar Euml = \"Ë\";\nvar euml = \"ë\";\nvar frac12 = \"½\";\nvar frac14 = \"¼\";\nvar frac34 = \"¾\";\nvar gt$1 = \">\";\nvar GT = \">\";\nvar Iacute = \"Í\";\nvar iacute = \"í\";\nvar Icirc = \"Î\";\nvar icirc = \"î\";\nvar iexcl = \"¡\";\nvar Igrave = \"Ì\";\nvar igrave = \"ì\";\nvar iquest = \"¿\";\nvar Iuml = \"Ï\";\nvar iuml = \"ï\";\nvar laquo = \"«\";\nvar lt$1 = \"<\";\nvar LT = \"<\";\nvar macr = \"¯\";\nvar micro = \"µ\";\nvar middot = \"·\";\nvar nbsp = \" \";\nvar not = \"¬\";\nvar Ntilde = \"Ñ\";\nvar ntilde = \"ñ\";\nvar Oacute = \"Ó\";\nvar oacute = \"ó\";\nvar Ocirc = \"Ô\";\nvar ocirc = \"ô\";\nvar Ograve = \"Ò\";\nvar ograve = \"ò\";\nvar ordf = \"ª\";\nvar ordm = \"º\";\nvar Oslash = \"Ø\";\nvar oslash = \"ø\";\nvar Otilde = \"Õ\";\nvar otilde = \"õ\";\nvar Ouml = \"Ö\";\nvar ouml = \"ö\";\nvar para = \"¶\";\nvar plusmn = \"±\";\nvar pound = \"£\";\nvar quot$1 = \"\\\"\";\nvar QUOT = \"\\\"\";\nvar raquo = \"»\";\nvar reg = \"®\";\nvar REG = \"®\";\nvar sect = \"§\";\nvar shy = \"­\";\nvar sup1 = \"¹\";\nvar sup2 = \"²\";\nvar sup3 = \"³\";\nvar szlig = \"ß\";\nvar THORN = \"Þ\";\nvar thorn = \"þ\";\nvar times = \"×\";\nvar Uacute = \"Ú\";\nvar uacute = \"ú\";\nvar Ucirc = \"Û\";\nvar ucirc = \"û\";\nvar Ugrave = \"Ù\";\nvar ugrave = \"ù\";\nvar uml = \"¨\";\nvar Uuml = \"Ü\";\nvar uuml = \"ü\";\nvar Yacute = \"Ý\";\nvar yacute = \"ý\";\nvar yen = \"¥\";\nvar yuml = \"ÿ\";\nvar require$$1 = {\n\tAacute: Aacute,\n\taacute: aacute,\n\tAcirc: Acirc,\n\tacirc: acirc,\n\tacute: acute,\n\tAElig: AElig,\n\taelig: aelig,\n\tAgrave: Agrave,\n\tagrave: agrave,\n\tamp: amp$1,\n\tAMP: AMP,\n\tAring: Aring,\n\taring: aring,\n\tAtilde: Atilde,\n\tatilde: atilde,\n\tAuml: Auml,\n\tauml: auml,\n\tbrvbar: brvbar,\n\tCcedil: Ccedil,\n\tccedil: ccedil,\n\tcedil: cedil,\n\tcent: cent,\n\tcopy: copy,\n\tCOPY: COPY,\n\tcurren: curren,\n\tdeg: deg,\n\tdivide: divide,\n\tEacute: Eacute,\n\teacute: eacute,\n\tEcirc: Ecirc,\n\tecirc: ecirc,\n\tEgrave: Egrave,\n\tegrave: egrave,\n\tETH: ETH,\n\teth: eth,\n\tEuml: Euml,\n\teuml: euml,\n\tfrac12: frac12,\n\tfrac14: frac14,\n\tfrac34: frac34,\n\tgt: gt$1,\n\tGT: GT,\n\tIacute: Iacute,\n\tiacute: iacute,\n\tIcirc: Icirc,\n\ticirc: icirc,\n\tiexcl: iexcl,\n\tIgrave: Igrave,\n\tigrave: igrave,\n\tiquest: iquest,\n\tIuml: Iuml,\n\tiuml: iuml,\n\tlaquo: laquo,\n\tlt: lt$1,\n\tLT: LT,\n\tmacr: macr,\n\tmicro: micro,\n\tmiddot: middot,\n\tnbsp: nbsp,\n\tnot: not,\n\tNtilde: Ntilde,\n\tntilde: ntilde,\n\tOacute: Oacute,\n\toacute: oacute,\n\tOcirc: Ocirc,\n\tocirc: ocirc,\n\tOgrave: Ograve,\n\tograve: ograve,\n\tordf: ordf,\n\tordm: ordm,\n\tOslash: Oslash,\n\toslash: oslash,\n\tOtilde: Otilde,\n\totilde: otilde,\n\tOuml: Ouml,\n\touml: ouml,\n\tpara: para,\n\tplusmn: plusmn,\n\tpound: pound,\n\tquot: quot$1,\n\tQUOT: QUOT,\n\traquo: raquo,\n\treg: reg,\n\tREG: REG,\n\tsect: sect,\n\tshy: shy,\n\tsup1: sup1,\n\tsup2: sup2,\n\tsup3: sup3,\n\tszlig: szlig,\n\tTHORN: THORN,\n\tthorn: thorn,\n\ttimes: times,\n\tUacute: Uacute,\n\tuacute: uacute,\n\tUcirc: Ucirc,\n\tucirc: ucirc,\n\tUgrave: Ugrave,\n\tugrave: ugrave,\n\tuml: uml,\n\tUuml: Uuml,\n\tuuml: uuml,\n\tYacute: Yacute,\n\tyacute: yacute,\n\tyen: yen,\n\tyuml: yuml\n};\n\nvar amp = \"&\";\nvar apos = \"'\";\nvar gt = \">\";\nvar lt = \"<\";\nvar quot = \"\\\"\";\nvar require$$0$1 = {\n\tamp: amp,\n\tapos: apos,\n\tgt: gt,\n\tlt: lt,\n\tquot: quot\n};\n\nvar decode_codepoint = {};\n\nvar require$$0 = {\n\t\"0\": 65533,\n\t\"128\": 8364,\n\t\"130\": 8218,\n\t\"131\": 402,\n\t\"132\": 8222,\n\t\"133\": 8230,\n\t\"134\": 8224,\n\t\"135\": 8225,\n\t\"136\": 710,\n\t\"137\": 8240,\n\t\"138\": 352,\n\t\"139\": 8249,\n\t\"140\": 338,\n\t\"142\": 381,\n\t\"145\": 8216,\n\t\"146\": 8217,\n\t\"147\": 8220,\n\t\"148\": 8221,\n\t\"149\": 8226,\n\t\"150\": 8211,\n\t\"151\": 8212,\n\t\"152\": 732,\n\t\"153\": 8482,\n\t\"154\": 353,\n\t\"155\": 8250,\n\t\"156\": 339,\n\t\"158\": 382,\n\t\"159\": 376\n};\n\nvar __importDefault$2 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(decode_codepoint, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault$2(require$$0);\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint$2 = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint$2(codePoint);\n}\ndecode_codepoint.default = decodeCodePoint;\n\nvar __importDefault$1 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(decode, \"__esModule\", { value: true });\ndecode.decodeHTML = decode.decodeHTMLStrict = decode.decodeXML = void 0;\nvar entities_json_1$1 = __importDefault$1(require$$1$1);\nvar legacy_json_1 = __importDefault$1(require$$1);\nvar xml_json_1$1 = __importDefault$1(require$$0$1);\nvar decode_codepoint_1 = __importDefault$1(decode_codepoint);\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\ndecode.decodeXML = getStrictDecoder(xml_json_1$1.default);\ndecode.decodeHTMLStrict = getStrictDecoder(entities_json_1$1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\ndecode.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1$1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1$1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n\nvar encode = {};\n\nvar __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(encode, \"__esModule\", { value: true });\nencode.escapeUTF8 = encode.escape = encode.encodeNonAsciiHTML = encode.encodeHTML = encode.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require$$0$1);\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nencode.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require$$1$1);\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nencode.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nencode.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nencode.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nencode.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n\n(function (exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = decode;\nvar encode_1 = encode;\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode$1(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode$1;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode$1(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode$1;\nvar encode_2 = encode;\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = decode;\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n}(lib));\n\nvar ENTITY = '&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});';\nvar C_BACKSLASH$1 = 92;\nvar reBackslashOrAmp = /[\\\\&]/;\nvar ESCAPABLE = '[!\"#$%&\\'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]';\nvar reEntityOrEscapedChar = new RegExp(\"\\\\\\\\\" + ESCAPABLE + \"|\" + ENTITY, 'gi');\nvar XMLSPECIAL = '[&<>\"]';\nvar reXmlSpecial = new RegExp(XMLSPECIAL, 'g');\nvar unescapeChar = function (s) {\n    if (s.charCodeAt(0) === C_BACKSLASH$1) {\n        return s.charAt(1);\n    }\n    return lib.decodeHTML(s);\n};\n// Replace entities and backslash escapes with literal characters.\nfunction unescapeString(s) {\n    if (reBackslashOrAmp.test(s)) {\n        return s.replace(reEntityOrEscapedChar, unescapeChar);\n    }\n    return s;\n}\nfunction normalizeURI(uri) {\n    try {\n        return encode_1(uri);\n    }\n    catch (err) {\n        return uri;\n    }\n}\nfunction replaceUnsafeChar(s) {\n    switch (s) {\n        case '&':\n            return '&amp;';\n        case '<':\n            return '&lt;';\n        case '>':\n            return '&gt;';\n        case '\"':\n            return '&quot;';\n        default:\n            return s;\n    }\n}\nfunction escapeXml(s) {\n    if (reXmlSpecial.test(s)) {\n        return s.replace(reXmlSpecial, replaceUnsafeChar);\n    }\n    return s;\n}\nfunction repeat(str, count) {\n    var arr = [];\n    for (var i = 0; i < count; i++) {\n        arr.push(str);\n    }\n    return arr.join('');\n}\nfunction isEmpty(str) {\n    if (!str) {\n        return true;\n    }\n    return !/[^ \\t]+/.test(str);\n}\n\nvar NodeWalker = /** @class */ (function () {\n    function NodeWalker(root) {\n        this.current = root;\n        this.root = root;\n        this.entering = true;\n    }\n    NodeWalker.prototype.next = function () {\n        var cur = this.current;\n        var entering = this.entering;\n        if (cur === null) {\n            return null;\n        }\n        var container = isContainer$1(cur);\n        if (entering && container) {\n            if (cur.firstChild) {\n                this.current = cur.firstChild;\n                this.entering = true;\n            }\n            else {\n                // stay on node but exit\n                this.entering = false;\n            }\n        }\n        else if (cur === this.root) {\n            this.current = null;\n        }\n        else if (cur.next === null) {\n            this.current = cur.parent;\n            this.entering = false;\n        }\n        else {\n            this.current = cur.next;\n            this.entering = true;\n        }\n        return { entering: entering, node: cur };\n    };\n    NodeWalker.prototype.resumeAt = function (node, entering) {\n        this.current = node;\n        this.entering = entering === true;\n    };\n    return NodeWalker;\n}());\n\nfunction isContainer$1(node) {\n    switch (node.type) {\n        case 'document':\n        case 'blockQuote':\n        case 'list':\n        case 'item':\n        case 'paragraph':\n        case 'heading':\n        case 'emph':\n        case 'strong':\n        case 'strike':\n        case 'link':\n        case 'image':\n        case 'table':\n        case 'tableHead':\n        case 'tableBody':\n        case 'tableRow':\n        case 'tableCell':\n        case 'tableDelimRow':\n        case 'customInline':\n            return true;\n        default:\n            return false;\n    }\n}\nvar lastNodeId = 1;\nvar nodeMap = {};\nfunction getNodeById(id) {\n    return nodeMap[id];\n}\nfunction removeNodeById(id) {\n    delete nodeMap[id];\n}\nfunction removeAllNode() {\n    nodeMap = {};\n}\nvar Node$1 = /** @class */ (function () {\n    function Node(nodeType, sourcepos) {\n        this.parent = null;\n        this.prev = null;\n        this.next = null;\n        // only for container node\n        this.firstChild = null;\n        this.lastChild = null;\n        // only for leaf node\n        this.literal = null;\n        if (nodeType === 'document') {\n            this.id = -1;\n        }\n        else {\n            this.id = lastNodeId++;\n        }\n        this.type = nodeType;\n        this.sourcepos = sourcepos;\n        nodeMap[this.id] = this;\n    }\n    Node.prototype.isContainer = function () {\n        return isContainer$1(this);\n    };\n    Node.prototype.unlink = function () {\n        if (this.prev) {\n            this.prev.next = this.next;\n        }\n        else if (this.parent) {\n            this.parent.firstChild = this.next;\n        }\n        if (this.next) {\n            this.next.prev = this.prev;\n        }\n        else if (this.parent) {\n            this.parent.lastChild = this.prev;\n        }\n        this.parent = null;\n        this.next = null;\n        this.prev = null;\n    };\n    Node.prototype.replaceWith = function (node) {\n        this.insertBefore(node);\n        this.unlink();\n    };\n    Node.prototype.insertAfter = function (sibling) {\n        sibling.unlink();\n        sibling.next = this.next;\n        if (sibling.next) {\n            sibling.next.prev = sibling;\n        }\n        sibling.prev = this;\n        this.next = sibling;\n        if (this.parent) {\n            sibling.parent = this.parent;\n            if (!sibling.next) {\n                sibling.parent.lastChild = sibling;\n            }\n        }\n    };\n    Node.prototype.insertBefore = function (sibling) {\n        sibling.unlink();\n        sibling.prev = this.prev;\n        if (sibling.prev) {\n            sibling.prev.next = sibling;\n        }\n        sibling.next = this;\n        this.prev = sibling;\n        sibling.parent = this.parent;\n        if (!sibling.prev) {\n            sibling.parent.firstChild = sibling;\n        }\n    };\n    Node.prototype.appendChild = function (child) {\n        child.unlink();\n        child.parent = this;\n        if (this.lastChild) {\n            this.lastChild.next = child;\n            child.prev = this.lastChild;\n            this.lastChild = child;\n        }\n        else {\n            this.firstChild = child;\n            this.lastChild = child;\n        }\n    };\n    Node.prototype.prependChild = function (child) {\n        child.unlink();\n        child.parent = this;\n        if (this.firstChild) {\n            this.firstChild.prev = child;\n            child.next = this.firstChild;\n            this.firstChild = child;\n        }\n        else {\n            this.firstChild = child;\n            this.lastChild = child;\n        }\n    };\n    Node.prototype.walker = function () {\n        return new NodeWalker(this);\n    };\n    return Node;\n}());\nvar BlockNode = /** @class */ (function (_super) {\n    __extends(BlockNode, _super);\n    function BlockNode(nodeType, sourcepos) {\n        var _this = _super.call(this, nodeType, sourcepos) || this;\n        // temporal data (for parsing)\n        _this.open = true;\n        _this.lineOffsets = null;\n        _this.stringContent = null;\n        _this.lastLineBlank = false;\n        _this.lastLineChecked = false;\n        _this.type = nodeType;\n        return _this;\n    }\n    return BlockNode;\n}(Node$1));\nvar ListNode = /** @class */ (function (_super) {\n    __extends(ListNode, _super);\n    function ListNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.listData = null;\n        return _this;\n    }\n    return ListNode;\n}(BlockNode));\nvar HeadingNode = /** @class */ (function (_super) {\n    __extends(HeadingNode, _super);\n    function HeadingNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.level = 0;\n        _this.headingType = 'atx';\n        return _this;\n    }\n    return HeadingNode;\n}(BlockNode));\nvar CodeBlockNode = /** @class */ (function (_super) {\n    __extends(CodeBlockNode, _super);\n    function CodeBlockNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isFenced = false;\n        _this.fenceChar = null;\n        _this.fenceLength = 0;\n        _this.fenceOffset = -1;\n        _this.info = null;\n        _this.infoPadding = 0;\n        return _this;\n    }\n    return CodeBlockNode;\n}(BlockNode));\nvar TableNode = /** @class */ (function (_super) {\n    __extends(TableNode, _super);\n    function TableNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columns = [];\n        return _this;\n    }\n    return TableNode;\n}(BlockNode));\nvar TableCellNode = /** @class */ (function (_super) {\n    __extends(TableCellNode, _super);\n    function TableCellNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.startIdx = 0;\n        _this.endIdx = 0;\n        _this.paddingLeft = 0;\n        _this.paddingRight = 0;\n        _this.ignored = false;\n        return _this;\n    }\n    return TableCellNode;\n}(BlockNode));\nvar RefDefNode = /** @class */ (function (_super) {\n    __extends(RefDefNode, _super);\n    function RefDefNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.title = '';\n        _this.dest = '';\n        _this.label = '';\n        return _this;\n    }\n    return RefDefNode;\n}(BlockNode));\nvar CustomBlockNode = /** @class */ (function (_super) {\n    __extends(CustomBlockNode, _super);\n    function CustomBlockNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.syntaxLength = 0;\n        _this.offset = -1;\n        _this.info = '';\n        return _this;\n    }\n    return CustomBlockNode;\n}(BlockNode));\nvar HtmlBlockNode = /** @class */ (function (_super) {\n    __extends(HtmlBlockNode, _super);\n    function HtmlBlockNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.htmlBlockType = -1;\n        return _this;\n    }\n    return HtmlBlockNode;\n}(BlockNode));\nvar LinkNode = /** @class */ (function (_super) {\n    __extends(LinkNode, _super);\n    function LinkNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.destination = null;\n        _this.title = null;\n        _this.extendedAutolink = false;\n        return _this;\n    }\n    return LinkNode;\n}(Node$1));\nvar CodeNode = /** @class */ (function (_super) {\n    __extends(CodeNode, _super);\n    function CodeNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.tickCount = 0;\n        return _this;\n    }\n    return CodeNode;\n}(Node$1));\nvar CustomInlineNode = /** @class */ (function (_super) {\n    __extends(CustomInlineNode, _super);\n    function CustomInlineNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.info = '';\n        return _this;\n    }\n    return CustomInlineNode;\n}(Node$1));\nfunction createNode$1(type, sourcepos) {\n    switch (type) {\n        case 'heading':\n            return new HeadingNode(type, sourcepos);\n        case 'list':\n        case 'item':\n            return new ListNode(type, sourcepos);\n        case 'link':\n        case 'image':\n            return new LinkNode(type, sourcepos);\n        case 'codeBlock':\n            return new CodeBlockNode(type, sourcepos);\n        case 'htmlBlock':\n            return new HtmlBlockNode(type, sourcepos);\n        case 'table':\n            return new TableNode(type, sourcepos);\n        case 'tableCell':\n            return new TableCellNode(type, sourcepos);\n        case 'document':\n        case 'paragraph':\n        case 'blockQuote':\n        case 'thematicBreak':\n        case 'tableRow':\n        case 'tableBody':\n        case 'tableHead':\n        case 'frontMatter':\n            return new BlockNode(type, sourcepos);\n        case 'code':\n            return new CodeNode(type, sourcepos);\n        case 'refDef':\n            return new RefDefNode(type, sourcepos);\n        case 'customBlock':\n            return new CustomBlockNode(type, sourcepos);\n        case 'customInline':\n            return new CustomInlineNode(type, sourcepos);\n        default:\n            return new Node$1(type, sourcepos);\n    }\n}\nfunction isCodeBlock(node) {\n    return node.type === 'codeBlock';\n}\nfunction isHtmlBlock(node) {\n    return node.type === 'htmlBlock';\n}\nfunction isHeading(node) {\n    return node.type === 'heading';\n}\nfunction isList(node) {\n    return node.type === 'list';\n}\nfunction isTable(node) {\n    return node.type === 'table';\n}\nfunction isRefDef(node) {\n    return node.type === 'refDef';\n}\nfunction isCustomBlock(node) {\n    return node.type === 'customBlock';\n}\nfunction isCustomInline(node) {\n    return node.type === 'customInline';\n}\nfunction text$1(s, sourcepos) {\n    var node = createNode$1('text', sourcepos);\n    node.literal = s;\n    return node;\n}\n\nvar TAGNAME = '[A-Za-z][A-Za-z0-9-]*';\nvar ATTRIBUTENAME = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar UNQUOTEDVALUE = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE = \"(?:\" + UNQUOTEDVALUE + \"|\" + SINGLEQUOTEDVALUE + \"|\" + DOUBLEQUOTEDVALUE + \")\";\nvar ATTRIBUTEVALUESPEC = \"\" + '(?:\\\\s*=\\\\s*' + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"\" + '(?:\\\\s+' + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar PROCESSINGINSTRUCTION = '[<][?].*?[?][>]';\nvar DECLARATION = '<![A-Z]+\\\\s+[^>]*>';\nvar CDATA = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTMLTAG = \"(?:\" + OPENTAG + \"|\" + CLOSETAG + \"|\" + HTMLCOMMENT + \"|\" + PROCESSINGINSTRUCTION + \"|\" + DECLARATION + \"|\" + CDATA + \")\";\nvar reHtmlTag = new RegExp(\"^\" + HTMLTAG, 'i');\n\n// derived from https://github.com/mathiasbynens/String.fromCodePoint\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\nvar fromCodePoint;\nif (String.fromCodePoint) {\n    fromCodePoint = function (_) {\n        try {\n            return String.fromCodePoint(_);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                return String.fromCharCode(0xfffd);\n            }\n            throw e;\n        }\n    };\n}\nelse {\n    var stringFromCharCode_1 = String.fromCharCode;\n    var floor_1 = Math.floor;\n    fromCodePoint = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = args.length;\n        if (!length) {\n            return '';\n        }\n        var result = '';\n        while (++index < length) {\n            var codePoint = Number(args[index]);\n            if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                codePoint < 0 || // not a valid Unicode code point\n                codePoint > 0x10ffff || // not a valid Unicode code point\n                floor_1(codePoint) !== codePoint // not an integer\n            ) {\n                return String.fromCharCode(0xfffd);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            }\n            else {\n                // Astral code point; split in surrogate halves\n                // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                highSurrogate = (codePoint >> 10) + 0xd800;\n                lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += stringFromCharCode_1.apply(void 0, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n}\nvar fromCodePoint$1 = fromCodePoint;\n\nvar DOMAIN = '(?:[w-]+.)*[A-Za-z0-9-]+.[A-Za-z0-9-]+';\nvar PATH = '[^<\\\\s]*[^<?!.,:*_?~\\\\s]';\nvar EMAIL = '[\\\\w.+-]+@(?:[\\\\w-]+\\\\.)+[\\\\w-]+';\nfunction trimUnmatchedTrailingParens(source) {\n    var trailingParen = /\\)+$/.exec(source);\n    if (trailingParen) {\n        var count = 0;\n        for (var _i = 0, source_1 = source; _i < source_1.length; _i++) {\n            var ch = source_1[_i];\n            if (ch === '(') {\n                if (count < 0) {\n                    count = 1;\n                }\n                else {\n                    count += 1;\n                }\n            }\n            else if (ch === ')') {\n                count -= 1;\n            }\n        }\n        if (count < 0) {\n            var trimCount = Math.min(-count, trailingParen[0].length);\n            return source.substring(0, source.length - trimCount);\n        }\n    }\n    return source;\n}\nfunction trimTrailingEntity(source) {\n    return source.replace(/&[A-Za-z0-9]+;$/, '');\n}\nfunction parseEmailLink(source) {\n    var reEmailLink = new RegExp(EMAIL, 'g');\n    var result = [];\n    var m;\n    while ((m = reEmailLink.exec(source))) {\n        var text_1 = m[0];\n        if (!/[_-]+$/.test(text_1)) {\n            result.push({\n                text: text_1,\n                range: [m.index, m.index + text_1.length - 1],\n                url: \"mailto:\" + text_1,\n            });\n        }\n    }\n    return result;\n}\nfunction parseUrlLink(source) {\n    var reWwwAutolink = new RegExp(\"(www|https?://).\" + DOMAIN + PATH, 'g');\n    var result = [];\n    var m;\n    while ((m = reWwwAutolink.exec(source))) {\n        var text_2 = trimTrailingEntity(trimUnmatchedTrailingParens(m[0]));\n        var scheme = m[1] === 'www' ? 'http://' : '';\n        result.push({\n            text: text_2,\n            range: [m.index, m.index + text_2.length - 1],\n            url: \"\" + scheme + text_2,\n        });\n    }\n    return result;\n}\nfunction baseAutolinkParser(source) {\n    return __spreadArray(__spreadArray([], parseUrlLink(source)), parseEmailLink(source)).sort(function (a, b) { return a.range[0] - b.range[0]; });\n}\nfunction convertExtAutoLinks(walker, autolinkParser) {\n    if (typeof autolinkParser === 'boolean') {\n        autolinkParser = baseAutolinkParser;\n    }\n    var event;\n    var _loop_1 = function () {\n        var entering = event.entering, node = event.node;\n        if (entering && node.type === 'text' && node.parent.type !== 'link') {\n            var literal = node.literal;\n            var linkInfos = autolinkParser(literal);\n            if (!linkInfos || !linkInfos.length) {\n                return \"continue\";\n            }\n            var lastIdx = 0;\n            var _a = node.sourcepos[0], lineNum_1 = _a[0], chPos_1 = _a[1];\n            var sourcepos = function (startIdx, endIdx) { return [\n                [lineNum_1, chPos_1 + startIdx],\n                [lineNum_1, chPos_1 + endIdx],\n            ]; };\n            var newNodes = [];\n            for (var _i = 0, linkInfos_1 = linkInfos; _i < linkInfos_1.length; _i++) {\n                var _b = linkInfos_1[_i], range = _b.range, url = _b.url, linkText = _b.text;\n                if (range[0] > lastIdx) {\n                    newNodes.push(text$1(literal.substring(lastIdx, range[0]), sourcepos(lastIdx, range[0] - 1)));\n                }\n                var linkNode = createNode$1('link', sourcepos.apply(void 0, range));\n                linkNode.appendChild(text$1(linkText, sourcepos.apply(void 0, range)));\n                linkNode.destination = url;\n                linkNode.extendedAutolink = true;\n                newNodes.push(linkNode);\n                lastIdx = range[1] + 1;\n            }\n            if (lastIdx < literal.length) {\n                newNodes.push(text$1(literal.substring(lastIdx), sourcepos(lastIdx, literal.length - 1)));\n            }\n            for (var _c = 0, newNodes_1 = newNodes; _c < newNodes_1.length; _c++) {\n                var newNode = newNodes_1[_c];\n                node.insertBefore(newNode);\n            }\n            node.unlink();\n        }\n    };\n    while ((event = walker.next())) {\n        _loop_1();\n    }\n}\n\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\n// normalize a reference in reference link (remove []s, trim,\n// collapse internal space, unicode case fold.\n// See commonmark/commonmark.js#168.\nfunction normalizeReference(str) {\n    return str\n        .slice(1, str.length - 1)\n        .trim()\n        .replace(/[ \\t\\r\\n]+/, ' ')\n        .toLowerCase()\n        .toUpperCase();\n}\nfunction iterateObject(obj, iteratee) {\n    Object.keys(obj).forEach(function (key) {\n        iteratee(key, obj[key]);\n    });\n}\nfunction omit(obj) {\n    var propNames = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        propNames[_i - 1] = arguments[_i];\n    }\n    var resultMap = __assign({}, obj);\n    propNames.forEach(function (key) {\n        delete resultMap[key];\n    });\n    return resultMap;\n}\nfunction isEmptyObj(obj) {\n    return !Object.keys(obj).length;\n}\nfunction clearObj(obj) {\n    Object.keys(obj).forEach(function (key) {\n        delete obj[key];\n    });\n}\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET$1 = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_TILDE = 126;\nvar C_LESSTHAN$1 = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\nvar C_DOLLAR = 36;\n// Some regexps used in inline parser:\nvar ESCAPED_CHAR = \"\\\\\\\\\" + ESCAPABLE;\nvar rePunctuation = new RegExp(/[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/);\nvar reLinkTitle = new RegExp(\"^(?:\\\"(\" + ESCAPED_CHAR + \"|[^\\\"\\\\x00])*\\\"\" +\n    \"|\" +\n    (\"'(\" + ESCAPED_CHAR + \"|[^'\\\\x00])*'\") +\n    \"|\" +\n    (\"\\\\((\" + ESCAPED_CHAR + \"|[^()\\\\x00])*\\\\))\"));\nvar reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\nvar reEscapable = new RegExp(\"^\" + ESCAPABLE);\nvar reEntityHere = new RegExp(\"^\" + ENTITY, 'i');\nvar reTicks = /`+/;\nvar reTicksHere = /^`+/;\nvar reEllipses = /\\.\\.\\./g;\nvar reDash = /--+/g;\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\nvar reSpnl = /^ *(?:\\n *)?/;\nvar reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\nvar reUnicodeWhitespaceChar = /^\\s/;\nvar reFinalSpace = / *$/;\nvar reInitialSpace = /^ */;\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/;\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"~$]+/m;\nvar InlineParser = /** @class */ (function () {\n    function InlineParser(options) {\n        // An InlineParser keeps track of a subject (a string to be parsed)\n        // and a position in that subject.\n        this.subject = '';\n        this.delimiters = null; // used by handleDelim method\n        this.brackets = null;\n        this.pos = 0;\n        this.lineStartNum = 0;\n        this.lineIdx = 0;\n        this.lineOffsets = [0];\n        this.linePosOffset = 0;\n        this.refMap = {};\n        this.refLinkCandidateMap = {};\n        this.refDefCandidateMap = {};\n        this.options = options;\n    }\n    InlineParser.prototype.sourcepos = function (start, end) {\n        var linePosOffset = this.linePosOffset + this.lineOffsets[this.lineIdx];\n        var lineNum = this.lineStartNum + this.lineIdx;\n        var startpos = [lineNum, start + linePosOffset];\n        if (typeof end === 'number') {\n            return [startpos, [lineNum, end + linePosOffset]];\n        }\n        return startpos;\n    };\n    InlineParser.prototype.nextLine = function () {\n        this.lineIdx += 1;\n        this.linePosOffset = -this.pos;\n    };\n    // If re matches at current position in the subject, advance\n    // position in subject and return the match; otherwise return null.\n    InlineParser.prototype.match = function (re) {\n        var m = re.exec(this.subject.slice(this.pos));\n        if (m === null) {\n            return null;\n        }\n        this.pos += m.index + m[0].length;\n        return m[0];\n    };\n    // Returns the code for the character at the current subject position, or -1\n    // there are no more characters.\n    InlineParser.prototype.peek = function () {\n        if (this.pos < this.subject.length) {\n            return this.subject.charCodeAt(this.pos);\n        }\n        return -1;\n    };\n    // Parse zero or more space characters, including at most one newline\n    InlineParser.prototype.spnl = function () {\n        this.match(reSpnl);\n        return true;\n    };\n    // All of the parsers below try to match something at the current position\n    // in the subject.  If they succeed in matching anything, they\n    // return the inline matched, advancing the subject.\n    // Attempt to parse backticks, adding either a backtick code span or a\n    // literal sequence of backticks.\n    InlineParser.prototype.parseBackticks = function (block) {\n        var startpos = this.pos + 1;\n        var ticks = this.match(reTicksHere);\n        if (ticks === null) {\n            return false;\n        }\n        var afterOpenTicks = this.pos;\n        var matched;\n        while ((matched = this.match(reTicks)) !== null) {\n            if (matched === ticks) {\n                var contents = this.subject.slice(afterOpenTicks, this.pos - ticks.length);\n                var sourcepos = this.sourcepos(startpos, this.pos);\n                var lines = contents.split('\\n');\n                if (lines.length > 1) {\n                    var lastLine = last(lines);\n                    this.lineIdx += lines.length - 1;\n                    this.linePosOffset = -(this.pos - lastLine.length - ticks.length);\n                    sourcepos[1] = this.sourcepos(this.pos);\n                    contents = lines.join(' ');\n                }\n                var node = createNode$1('code', sourcepos);\n                if (contents.length > 0 &&\n                    contents.match(/[^ ]/) !== null &&\n                    contents[0] == ' ' &&\n                    contents[contents.length - 1] == ' ') {\n                    node.literal = contents.slice(1, contents.length - 1);\n                }\n                else {\n                    node.literal = contents;\n                }\n                node.tickCount = ticks.length;\n                block.appendChild(node);\n                return true;\n            }\n        }\n        // If we got here, we didn't match a closing backtick sequence.\n        this.pos = afterOpenTicks;\n        block.appendChild(text$1(ticks, this.sourcepos(startpos, this.pos - 1)));\n        return true;\n    };\n    // Parse a backslash-escaped special character, adding either the escaped\n    // character, a hard line break (if the backslash is followed by a newline),\n    // or a literal backslash to the block's children.  Assumes current character\n    // is a backslash.\n    InlineParser.prototype.parseBackslash = function (block) {\n        var subj = this.subject;\n        var node;\n        this.pos += 1;\n        var startpos = this.pos;\n        if (this.peek() === C_NEWLINE) {\n            this.pos += 1;\n            node = createNode$1('linebreak', this.sourcepos(this.pos - 1, this.pos));\n            block.appendChild(node);\n            this.nextLine();\n        }\n        else if (reEscapable.test(subj.charAt(this.pos))) {\n            block.appendChild(text$1(subj.charAt(this.pos), this.sourcepos(startpos, this.pos)));\n            this.pos += 1;\n        }\n        else {\n            block.appendChild(text$1('\\\\', this.sourcepos(startpos, startpos)));\n        }\n        return true;\n    };\n    // Attempt to parse an autolink (URL or email in pointy brackets).\n    InlineParser.prototype.parseAutolink = function (block) {\n        var m;\n        var dest;\n        var node;\n        var startpos = this.pos + 1;\n        if ((m = this.match(reEmailAutolink))) {\n            dest = m.slice(1, m.length - 1);\n            node = createNode$1('link', this.sourcepos(startpos, this.pos));\n            node.destination = normalizeURI(\"mailto:\" + dest);\n            node.title = '';\n            node.appendChild(text$1(dest, this.sourcepos(startpos + 1, this.pos - 1)));\n            block.appendChild(node);\n            return true;\n        }\n        if ((m = this.match(reAutolink))) {\n            dest = m.slice(1, m.length - 1);\n            node = createNode$1('link', this.sourcepos(startpos, this.pos));\n            node.destination = normalizeURI(dest);\n            node.title = '';\n            node.appendChild(text$1(dest, this.sourcepos(startpos + 1, this.pos - 1)));\n            block.appendChild(node);\n            return true;\n        }\n        return false;\n    };\n    // Attempt to parse a raw HTML tag.\n    InlineParser.prototype.parseHtmlTag = function (block) {\n        var startpos = this.pos + 1;\n        var m = this.match(reHtmlTag);\n        if (m === null) {\n            return false;\n        }\n        var node = createNode$1('htmlInline', this.sourcepos(startpos, this.pos));\n        node.literal = m;\n        block.appendChild(node);\n        return true;\n    };\n    // Scan a sequence of characters with code cc, and return information about\n    // the number of delimiters and whether they are positioned such that\n    // they can open and/or close emphasis or strong emphasis.  A utility\n    // function for strong/emph parsing.\n    InlineParser.prototype.scanDelims = function (cc) {\n        var numdelims = 0;\n        var startpos = this.pos;\n        if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n            numdelims++;\n            this.pos++;\n        }\n        else {\n            while (this.peek() === cc) {\n                numdelims++;\n                this.pos++;\n            }\n        }\n        if (numdelims === 0 || (numdelims < 2 && (cc === C_TILDE || cc === C_DOLLAR))) {\n            this.pos = startpos;\n            return null;\n        }\n        var charBefore = startpos === 0 ? '\\n' : this.subject.charAt(startpos - 1);\n        var ccAfter = this.peek();\n        var charAfter;\n        if (ccAfter === -1) {\n            charAfter = '\\n';\n        }\n        else {\n            charAfter = fromCodePoint$1(ccAfter);\n        }\n        var afterIsWhitespace = reUnicodeWhitespaceChar.test(charAfter);\n        var afterIsPunctuation = rePunctuation.test(charAfter);\n        var beforeIsWhitespace = reUnicodeWhitespaceChar.test(charBefore);\n        var beforeIsPunctuation = rePunctuation.test(charBefore);\n        var leftFlanking = !afterIsWhitespace && (!afterIsPunctuation || beforeIsWhitespace || beforeIsPunctuation);\n        var rightFlanking = !beforeIsWhitespace && (!beforeIsPunctuation || afterIsWhitespace || afterIsPunctuation);\n        var canOpen;\n        var canClose;\n        if (cc === C_UNDERSCORE) {\n            canOpen = leftFlanking && (!rightFlanking || beforeIsPunctuation);\n            canClose = rightFlanking && (!leftFlanking || afterIsPunctuation);\n        }\n        else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n            canOpen = leftFlanking && !rightFlanking;\n            canClose = rightFlanking;\n        }\n        else if (cc === C_DOLLAR) {\n            canOpen = !afterIsWhitespace;\n            canClose = !beforeIsWhitespace;\n        }\n        else {\n            canOpen = leftFlanking;\n            canClose = rightFlanking;\n        }\n        this.pos = startpos;\n        return { numdelims: numdelims, canOpen: canOpen, canClose: canClose };\n    };\n    // Handle a delimiter marker for emphasis or a quote.\n    InlineParser.prototype.handleDelim = function (cc, block) {\n        var res = this.scanDelims(cc);\n        if (!res) {\n            return false;\n        }\n        var numdelims = res.numdelims;\n        var startpos = this.pos + 1;\n        var contents;\n        this.pos += numdelims;\n        if (cc === C_SINGLEQUOTE) {\n            contents = '\\u2019';\n        }\n        else if (cc === C_DOUBLEQUOTE) {\n            contents = '\\u201C';\n        }\n        else {\n            contents = this.subject.slice(startpos - 1, this.pos);\n        }\n        var node = text$1(contents, this.sourcepos(startpos, this.pos));\n        block.appendChild(node);\n        // Add entry to stack for this opener\n        if ((res.canOpen || res.canClose) &&\n            (this.options.smart || (cc !== C_SINGLEQUOTE && cc !== C_DOUBLEQUOTE))) {\n            this.delimiters = {\n                cc: cc,\n                numdelims: numdelims,\n                origdelims: numdelims,\n                node: node,\n                previous: this.delimiters,\n                next: null,\n                canOpen: res.canOpen,\n                canClose: res.canClose,\n            };\n            if (this.delimiters.previous) {\n                this.delimiters.previous.next = this.delimiters;\n            }\n        }\n        return true;\n    };\n    InlineParser.prototype.removeDelimiter = function (delim) {\n        if (delim.previous !== null) {\n            delim.previous.next = delim.next;\n        }\n        if (delim.next === null) {\n            // top of stack\n            this.delimiters = delim.previous;\n        }\n        else {\n            delim.next.previous = delim.previous;\n        }\n    };\n    InlineParser.prototype.removeDelimitersBetween = function (bottom, top) {\n        if (bottom.next !== top) {\n            bottom.next = top;\n            top.previous = bottom;\n        }\n    };\n    /**\n     * Process all delimiters - emphasis, strong emphasis, strikethrough(gfm)\n     * If the smart punctuation options is true,\n     * convert single/double quotes to corresponding unicode characters.\n     **/\n    InlineParser.prototype.processEmphasis = function (stackBottom) {\n        var _a;\n        var opener;\n        var closer;\n        var oldCloser;\n        var openerInl, closerInl;\n        var openerFound;\n        var oddMatch = false;\n        var openersBottom = (_a = {},\n            _a[C_UNDERSCORE] = [stackBottom, stackBottom, stackBottom],\n            _a[C_ASTERISK] = [stackBottom, stackBottom, stackBottom],\n            _a[C_SINGLEQUOTE] = [stackBottom],\n            _a[C_DOUBLEQUOTE] = [stackBottom],\n            _a[C_TILDE] = [stackBottom],\n            _a[C_DOLLAR] = [stackBottom],\n            _a);\n        // find first closer above stackBottom:\n        closer = this.delimiters;\n        while (closer !== null && closer.previous !== stackBottom) {\n            closer = closer.previous;\n        }\n        // move forward, looking for closers, and handling each\n        while (closer !== null) {\n            var closercc = closer.cc;\n            var closerEmph = closercc === C_UNDERSCORE || closercc === C_ASTERISK;\n            if (!closer.canClose) {\n                closer = closer.next;\n            }\n            else {\n                // found emphasis closer. now look back for first matching opener:\n                opener = closer.previous;\n                openerFound = false;\n                while (opener !== null &&\n                    opener !== stackBottom &&\n                    opener !== openersBottom[closercc][closerEmph ? closer.origdelims % 3 : 0]) {\n                    oddMatch =\n                        closerEmph &&\n                            (closer.canOpen || opener.canClose) &&\n                            closer.origdelims % 3 !== 0 &&\n                            (opener.origdelims + closer.origdelims) % 3 === 0;\n                    if (opener.cc === closer.cc && opener.canOpen && !oddMatch) {\n                        openerFound = true;\n                        break;\n                    }\n                    opener = opener.previous;\n                }\n                oldCloser = closer;\n                if (closerEmph || closercc === C_TILDE || closercc === C_DOLLAR) {\n                    if (!openerFound) {\n                        closer = closer.next;\n                    }\n                    else if (opener) {\n                        // (null opener check for type narrowing)\n                        // calculate actual number of delimiters used from closer\n                        var useDelims = closer.numdelims >= 2 && opener.numdelims >= 2 ? 2 : 1;\n                        var emptyDelims = closerEmph ? 0 : 1;\n                        openerInl = opener.node;\n                        closerInl = closer.node;\n                        // build contents for new emph element\n                        var nodeType = closerEmph\n                            ? useDelims === 1\n                                ? 'emph'\n                                : 'strong'\n                            : 'strike';\n                        if (closercc === C_DOLLAR) {\n                            nodeType = 'customInline';\n                        }\n                        var newNode = createNode$1(nodeType);\n                        var openerEndPos = openerInl.sourcepos[1];\n                        var closerStartPos = closerInl.sourcepos[0];\n                        newNode.sourcepos = [\n                            [openerEndPos[0], openerEndPos[1] - useDelims + 1],\n                            [closerStartPos[0], closerStartPos[1] + useDelims - 1],\n                        ];\n                        openerInl.sourcepos[1][1] -= useDelims;\n                        closerInl.sourcepos[0][1] += useDelims;\n                        openerInl.literal = openerInl.literal.slice(useDelims);\n                        closerInl.literal = closerInl.literal.slice(useDelims);\n                        opener.numdelims -= useDelims;\n                        closer.numdelims -= useDelims;\n                        // remove used delimiters from stack elts and inlines\n                        var tmp = openerInl.next;\n                        var next = void 0;\n                        while (tmp && tmp !== closerInl) {\n                            next = tmp.next;\n                            tmp.unlink();\n                            newNode.appendChild(tmp);\n                            tmp = next;\n                        }\n                        // build custom inline node\n                        if (closercc === C_DOLLAR) {\n                            var textNode = newNode.firstChild;\n                            var literal = textNode.literal || '';\n                            var info = literal.split(/\\s/)[0];\n                            newNode.info = info;\n                            if (literal.length <= info.length) {\n                                textNode.unlink();\n                            }\n                            else {\n                                textNode.sourcepos[0][1] += info.length;\n                                textNode.literal = literal.replace(info + \" \", '');\n                            }\n                        }\n                        openerInl.insertAfter(newNode);\n                        // remove elts between opener and closer in delimiters stack\n                        this.removeDelimitersBetween(opener, closer);\n                        // if opener has 0 delims, remove it and the inline\n                        // if opener has 1 delims and character is tilde, remove delimiter only\n                        if (opener.numdelims <= emptyDelims) {\n                            if (opener.numdelims === 0) {\n                                openerInl.unlink();\n                            }\n                            this.removeDelimiter(opener);\n                        }\n                        // if closer has 0 delims, remove it and the inline\n                        // if closer has 1 delims and character is tilde, remove delimiter only\n                        if (closer.numdelims <= emptyDelims) {\n                            if (closer.numdelims === 0) {\n                                closerInl.unlink();\n                            }\n                            var tempstack = closer.next;\n                            this.removeDelimiter(closer);\n                            closer = tempstack;\n                        }\n                    }\n                }\n                else if (closercc === C_SINGLEQUOTE) {\n                    closer.node.literal = '\\u2019';\n                    if (openerFound) {\n                        opener.node.literal = '\\u2018';\n                    }\n                    closer = closer.next;\n                }\n                else if (closercc === C_DOUBLEQUOTE) {\n                    closer.node.literal = '\\u201D';\n                    if (openerFound) {\n                        opener.node.literal = '\\u201C';\n                    }\n                    closer = closer.next;\n                }\n                if (!openerFound) {\n                    // Set lower bound for future searches for openers:\n                    openersBottom[closercc][closerEmph ? oldCloser.origdelims % 3 : 0] = oldCloser.previous;\n                    if (!oldCloser.canOpen) {\n                        // We can remove a closer that can't be an opener,\n                        // once we've seen there's no matching opener:\n                        this.removeDelimiter(oldCloser);\n                    }\n                }\n            }\n        }\n        // remove all delimiters\n        while (this.delimiters !== null && this.delimiters !== stackBottom) {\n            this.removeDelimiter(this.delimiters);\n        }\n    };\n    // Attempt to parse link title (sans quotes), returning the string\n    // or null if no match.\n    InlineParser.prototype.parseLinkTitle = function () {\n        var title = this.match(reLinkTitle);\n        if (title === null) {\n            return null;\n        }\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    };\n    // Attempt to parse link destination, returning the string or null if no match.\n    InlineParser.prototype.parseLinkDestination = function () {\n        var res = this.match(reLinkDestinationBraces);\n        if (res === null) {\n            if (this.peek() === C_LESSTHAN$1) {\n                return null;\n            }\n            // @TODO handrolled parser; res should be null or the string\n            var savepos = this.pos;\n            var openparens = 0;\n            var c = void 0;\n            while ((c = this.peek()) !== -1) {\n                if (c === C_BACKSLASH && reEscapable.test(this.subject.charAt(this.pos + 1))) {\n                    this.pos += 1;\n                    if (this.peek() !== -1) {\n                        this.pos += 1;\n                    }\n                }\n                else if (c === C_OPEN_PAREN) {\n                    this.pos += 1;\n                    openparens += 1;\n                }\n                else if (c === C_CLOSE_PAREN) {\n                    if (openparens < 1) {\n                        break;\n                    }\n                    else {\n                        this.pos += 1;\n                        openparens -= 1;\n                    }\n                }\n                else if (reWhitespaceChar.exec(fromCodePoint$1(c)) !== null) {\n                    break;\n                }\n                else {\n                    this.pos += 1;\n                }\n            }\n            if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n                return null;\n            }\n            if (openparens !== 0) {\n                return null;\n            }\n            res = this.subject.substr(savepos, this.pos - savepos);\n            return normalizeURI(unescapeString(res));\n        } // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    };\n    // Attempt to parse a link label, returning number of characters parsed.\n    InlineParser.prototype.parseLinkLabel = function () {\n        var m = this.match(reLinkLabel);\n        if (m === null || m.length > 1001) {\n            return 0;\n        }\n        return m.length;\n    };\n    // Add open bracket to delimiter stack and add a text node to block's children.\n    InlineParser.prototype.parseOpenBracket = function (block) {\n        var startpos = this.pos;\n        this.pos += 1;\n        var node = text$1('[', this.sourcepos(this.pos, this.pos));\n        block.appendChild(node);\n        // Add entry to stack for this opener\n        this.addBracket(node, startpos, false);\n        return true;\n    };\n    // IF next character is [, and ! delimiter to delimiter stack and\n    // add a text node to block's children.  Otherwise just add a text node.\n    InlineParser.prototype.parseBang = function (block) {\n        var startpos = this.pos;\n        this.pos += 1;\n        if (this.peek() === C_OPEN_BRACKET$1) {\n            this.pos += 1;\n            var node = text$1('![', this.sourcepos(this.pos - 1, this.pos));\n            block.appendChild(node);\n            // Add entry to stack for this opener\n            this.addBracket(node, startpos + 1, true);\n        }\n        else {\n            var node = text$1('!', this.sourcepos(this.pos, this.pos));\n            block.appendChild(node);\n        }\n        return true;\n    };\n    // Try to match close bracket against an opening in the delimiter\n    // stack.  Add either a link or image, or a plain [ character,\n    // to block's children.  If there is a matching delimiter,\n    // remove it from the delimiter stack.\n    InlineParser.prototype.parseCloseBracket = function (block) {\n        var dest = null;\n        var title = null;\n        var matched = false;\n        this.pos += 1;\n        var startpos = this.pos;\n        // get last [ or ![\n        var opener = this.brackets;\n        if (opener === null) {\n            // no matched opener, just return a literal\n            block.appendChild(text$1(']', this.sourcepos(startpos, startpos)));\n            return true;\n        }\n        if (!opener.active) {\n            // no matched opener, just return a literal\n            block.appendChild(text$1(']', this.sourcepos(startpos, startpos)));\n            // take opener off brackets stack\n            this.removeBracket();\n            return true;\n        }\n        // If we got here, open is a potential opener\n        var isImage = opener.image;\n        // Check to see if we have a link/image\n        var savepos = this.pos;\n        // Inline link?\n        if (this.peek() === C_OPEN_PAREN) {\n            this.pos++;\n            if (this.spnl() &&\n                (dest = this.parseLinkDestination()) !== null &&\n                this.spnl() &&\n                // make sure there's a space before the title:\n                ((reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n                    (title = this.parseLinkTitle())) ||\n                    true) &&\n                this.spnl() &&\n                this.peek() === C_CLOSE_PAREN) {\n                this.pos += 1;\n                matched = true;\n            }\n            else {\n                this.pos = savepos;\n            }\n        }\n        var refLabel = '';\n        if (!matched) {\n            // Next, see if there's a link label\n            var beforelabel = this.pos;\n            var n = this.parseLinkLabel();\n            if (n > 2) {\n                refLabel = this.subject.slice(beforelabel, beforelabel + n);\n            }\n            else if (!opener.bracketAfter) {\n                // Empty or missing second label means to use the first label as the reference.\n                // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n                refLabel = this.subject.slice(opener.index, startpos);\n            }\n            if (n === 0) {\n                // If shortcut reference link, rewind before spaces we skipped.\n                this.pos = savepos;\n            }\n            if (refLabel) {\n                refLabel = normalizeReference(refLabel);\n                // lookup rawlabel in refMap\n                var link = this.refMap[refLabel];\n                if (link) {\n                    dest = link.destination;\n                    title = link.title;\n                    matched = true;\n                }\n            }\n        }\n        if (matched) {\n            var node = createNode$1(isImage ? 'image' : 'link');\n            node.destination = dest;\n            node.title = title || '';\n            node.sourcepos = [opener.startpos, this.sourcepos(this.pos)];\n            var tmp = opener.node.next;\n            var next = void 0;\n            while (tmp) {\n                next = tmp.next;\n                tmp.unlink();\n                node.appendChild(tmp);\n                tmp = next;\n            }\n            block.appendChild(node);\n            this.processEmphasis(opener.previousDelimiter);\n            this.removeBracket();\n            opener.node.unlink();\n            // We remove this bracket and processEmphasis will remove later delimiters.\n            // Now, for a link, we also deactivate earlier link openers.\n            // (no links in links)\n            if (!isImage) {\n                opener = this.brackets;\n                while (opener !== null) {\n                    if (!opener.image) {\n                        opener.active = false; // deactivate this opener\n                    }\n                    opener = opener.previous;\n                }\n            }\n            if (this.options.referenceDefinition) {\n                this.refLinkCandidateMap[block.id] = { node: block, refLabel: refLabel };\n            }\n            return true;\n        } // no match\n        this.removeBracket(); // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text$1(']', this.sourcepos(startpos, startpos)));\n        if (this.options.referenceDefinition) {\n            this.refLinkCandidateMap[block.id] = { node: block, refLabel: refLabel };\n        }\n        return true;\n    };\n    InlineParser.prototype.addBracket = function (node, index, image) {\n        if (this.brackets !== null) {\n            this.brackets.bracketAfter = true;\n        }\n        this.brackets = {\n            node: node,\n            startpos: this.sourcepos(index + (image ? 0 : 1)),\n            previous: this.brackets,\n            previousDelimiter: this.delimiters,\n            index: index,\n            image: image,\n            active: true,\n        };\n    };\n    InlineParser.prototype.removeBracket = function () {\n        if (this.brackets) {\n            this.brackets = this.brackets.previous;\n        }\n    };\n    // Attempt to parse an entity.\n    InlineParser.prototype.parseEntity = function (block) {\n        var m;\n        var startpos = this.pos + 1;\n        if ((m = this.match(reEntityHere))) {\n            block.appendChild(text$1(lib.decodeHTML(m), this.sourcepos(startpos, this.pos)));\n            return true;\n        }\n        return false;\n    };\n    // Parse a run of ordinary characters, or a single character with\n    // a special meaning in markdown, as a plain string.\n    InlineParser.prototype.parseString = function (block) {\n        var m;\n        var startpos = this.pos + 1;\n        if ((m = this.match(reMain))) {\n            if (this.options.smart) {\n                var lit = m.replace(reEllipses, '\\u2026').replace(reDash, function (chars) {\n                    var enCount = 0;\n                    var emCount = 0;\n                    if (chars.length % 3 === 0) {\n                        // If divisible by 3, use all em dashes\n                        emCount = chars.length / 3;\n                    }\n                    else if (chars.length % 2 === 0) {\n                        // If divisible by 2, use all en dashes\n                        enCount = chars.length / 2;\n                    }\n                    else if (chars.length % 3 === 2) {\n                        // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                        enCount = 1;\n                        emCount = (chars.length - 2) / 3;\n                    }\n                    else {\n                        // Use en dashes for last 4 hyphens; em dashes for rest\n                        enCount = 2;\n                        emCount = (chars.length - 4) / 3;\n                    }\n                    return repeat('\\u2014', emCount) + repeat('\\u2013', enCount);\n                });\n                block.appendChild(text$1(lit, this.sourcepos(startpos, this.pos)));\n            }\n            else {\n                var node = text$1(m, this.sourcepos(startpos, this.pos));\n                block.appendChild(node);\n            }\n            return true;\n        }\n        return false;\n    };\n    // Parse a newline.  If it was preceded by two spaces, return a hard\n    // line break; otherwise a soft line break.\n    InlineParser.prototype.parseNewline = function (block) {\n        this.pos += 1; // assume we're at a \\n\n        // check previous node for trailing spaces\n        var lastc = block.lastChild;\n        if (lastc && lastc.type === 'text' && lastc.literal[lastc.literal.length - 1] === ' ') {\n            var hardbreak = lastc.literal[lastc.literal.length - 2] === ' ';\n            var litLen = lastc.literal.length;\n            lastc.literal = lastc.literal.replace(reFinalSpace, '');\n            var finalSpaceLen = litLen - lastc.literal.length;\n            lastc.sourcepos[1][1] -= finalSpaceLen;\n            block.appendChild(createNode$1(hardbreak ? 'linebreak' : 'softbreak', this.sourcepos(this.pos - finalSpaceLen, this.pos)));\n        }\n        else {\n            block.appendChild(createNode$1('softbreak', this.sourcepos(this.pos, this.pos)));\n        }\n        this.nextLine();\n        this.match(reInitialSpace); // gobble leading spaces in next line\n        return true;\n    };\n    // Attempt to parse a link reference, modifying refmap.\n    InlineParser.prototype.parseReference = function (block, refMap) {\n        if (!this.options.referenceDefinition) {\n            return 0;\n        }\n        this.subject = block.stringContent;\n        this.pos = 0;\n        var title = null;\n        var startpos = this.pos;\n        // label:\n        var matchChars = this.parseLinkLabel();\n        if (matchChars === 0) {\n            return 0;\n        }\n        var rawlabel = this.subject.substr(0, matchChars);\n        // colon:\n        if (this.peek() === C_COLON) {\n            this.pos++;\n        }\n        else {\n            this.pos = startpos;\n            return 0;\n        }\n        //  link url\n        this.spnl();\n        var dest = this.parseLinkDestination();\n        if (dest === null) {\n            this.pos = startpos;\n            return 0;\n        }\n        var beforetitle = this.pos;\n        this.spnl();\n        if (this.pos !== beforetitle) {\n            title = this.parseLinkTitle();\n        }\n        if (title === null) {\n            title = '';\n            // rewind before spaces\n            this.pos = beforetitle;\n        }\n        // make sure we're at line end:\n        var atLineEnd = true;\n        if (this.match(reSpaceAtEndOfLine) === null) {\n            if (title === '') {\n                atLineEnd = false;\n            }\n            else {\n                // the potential title we found is not at the line end,\n                // but it could still be a legal link reference if we\n                // discard the title\n                title = '';\n                // rewind before spaces\n                this.pos = beforetitle;\n                // and instead check if the link URL is at the line end\n                atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n            }\n        }\n        if (!atLineEnd) {\n            this.pos = startpos;\n            return 0;\n        }\n        var normalLabel = normalizeReference(rawlabel);\n        if (normalLabel === '') {\n            // label must contain non-whitespace characters\n            this.pos = startpos;\n            return 0;\n        }\n        var sourcepos = this.getReferenceDefSourcepos(block);\n        block.sourcepos[0][0] = sourcepos[1][0] + 1;\n        var node = createNode$1('refDef', sourcepos);\n        node.title = title;\n        node.dest = dest;\n        node.label = normalLabel;\n        block.insertBefore(node);\n        if (!refMap[normalLabel]) {\n            refMap[normalLabel] = createRefDefState(node);\n        }\n        else {\n            this.refDefCandidateMap[node.id] = node;\n        }\n        return this.pos - startpos;\n    };\n    InlineParser.prototype.mergeTextNodes = function (walker) {\n        var event;\n        var textNodes = [];\n        while ((event = walker.next())) {\n            var entering = event.entering, node = event.node;\n            if (entering && node.type === 'text') {\n                textNodes.push(node);\n            }\n            else if (textNodes.length === 1) {\n                textNodes = [];\n            }\n            else if (textNodes.length > 1) {\n                var firstNode = textNodes[0];\n                var lastNode = textNodes[textNodes.length - 1];\n                if (firstNode.sourcepos && lastNode.sourcepos) {\n                    firstNode.sourcepos[1] = lastNode.sourcepos[1];\n                }\n                firstNode.next = lastNode.next;\n                if (firstNode.next) {\n                    firstNode.next.prev = firstNode;\n                }\n                for (var i = 1; i < textNodes.length; i += 1) {\n                    firstNode.literal += textNodes[i].literal;\n                    textNodes[i].unlink();\n                }\n                textNodes = [];\n            }\n        }\n    };\n    InlineParser.prototype.getReferenceDefSourcepos = function (block) {\n        var lines = block.stringContent.split(/\\n|\\r\\n/);\n        var passedUrlLine = false;\n        var quotationCount = 0;\n        var lastLineOffset = { line: 0, ch: 0 };\n        for (var i = 0; i < lines.length; i += 1) {\n            var line = lines[i];\n            if (reWhitespaceChar.test(line)) {\n                break;\n            }\n            if (/\\:/.test(line) && quotationCount === 0) {\n                if (passedUrlLine) {\n                    break;\n                }\n                var lineOffset = line.indexOf(':') === line.length - 1 ? i + 1 : i;\n                lastLineOffset = { line: lineOffset, ch: lines[lineOffset].length };\n                passedUrlLine = true;\n            }\n            // should consider extendable title\n            var matched = line.match(/'|\"/g);\n            if (matched) {\n                quotationCount += matched.length;\n            }\n            if (quotationCount === 2) {\n                lastLineOffset = { line: i, ch: line.length };\n                break;\n            }\n        }\n        return [\n            [block.sourcepos[0][0], block.sourcepos[0][1]],\n            [block.sourcepos[0][0] + lastLineOffset.line, lastLineOffset.ch],\n        ];\n    };\n    // Parse the next inline element in subject, advancing subject position.\n    // On success, add the result to block's children and return true.\n    // On failure, return false.\n    InlineParser.prototype.parseInline = function (block) {\n        var _a;\n        var res = false;\n        var c = this.peek();\n        if (c === -1) {\n            return false;\n        }\n        switch (c) {\n            case C_NEWLINE:\n                res = this.parseNewline(block);\n                break;\n            case C_BACKSLASH:\n                res = this.parseBackslash(block);\n                break;\n            case C_BACKTICK:\n                res = this.parseBackticks(block);\n                break;\n            case C_ASTERISK:\n            case C_UNDERSCORE:\n            case C_TILDE:\n            case C_DOLLAR:\n                res = this.handleDelim(c, block);\n                break;\n            case C_SINGLEQUOTE:\n            case C_DOUBLEQUOTE:\n                res = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.smart) && this.handleDelim(c, block);\n                break;\n            case C_OPEN_BRACKET$1:\n                res = this.parseOpenBracket(block);\n                break;\n            case C_BANG:\n                res = this.parseBang(block);\n                break;\n            case C_CLOSE_BRACKET:\n                res = this.parseCloseBracket(block);\n                break;\n            case C_LESSTHAN$1:\n                res = this.parseAutolink(block) || this.parseHtmlTag(block);\n                break;\n            case C_AMPERSAND:\n                if (!block.disabledEntityParse) {\n                    res = this.parseEntity(block);\n                }\n                break;\n            default:\n                res = this.parseString(block);\n                break;\n        }\n        if (!res) {\n            this.pos += 1;\n            block.appendChild(text$1(fromCodePoint$1(c), this.sourcepos(this.pos, this.pos + 1)));\n        }\n        return true;\n    };\n    // Parse string content in block into inline children,\n    // using refmap to resolve references.\n    InlineParser.prototype.parse = function (block) {\n        this.subject = block.stringContent.trim();\n        this.pos = 0;\n        this.delimiters = null;\n        this.brackets = null;\n        this.lineOffsets = block.lineOffsets || [0];\n        this.lineIdx = 0;\n        this.linePosOffset = 0;\n        this.lineStartNum = block.sourcepos[0][0];\n        if (isHeading(block)) {\n            this.lineOffsets[0] += block.level + 1;\n        }\n        while (this.parseInline(block)) { }\n        block.stringContent = null; // allow raw string to be garbage collected\n        this.processEmphasis(null);\n        this.mergeTextNodes(block.walker());\n        var _a = this.options, extendedAutolinks = _a.extendedAutolinks, customParser = _a.customParser;\n        if (extendedAutolinks) {\n            convertExtAutoLinks(block.walker(), extendedAutolinks);\n        }\n        if (customParser && block.firstChild) {\n            var event_1;\n            var walker = block.firstChild.walker();\n            while ((event_1 = walker.next())) {\n                var node = event_1.node, entering = event_1.entering;\n                if (customParser[node.type]) {\n                    customParser[node.type](node, { entering: entering, options: this.options });\n                }\n            }\n        }\n    };\n    return InlineParser;\n}());\n\nvar reTaskListItemMarker = /^\\[([ \\txX])\\][ \\t]+/;\n// finalize for block handler\nfunction taskListItemFinalize(_, block) {\n    if (block.firstChild && block.firstChild.type === 'paragraph') {\n        var p = block.firstChild;\n        var m = p.stringContent.match(reTaskListItemMarker);\n        if (m) {\n            var mLen = m[0].length;\n            p.stringContent = p.stringContent.substring(mLen - 1);\n            p.sourcepos[0][1] += mLen;\n            p.lineOffsets[0] += mLen;\n            block.listData.task = true;\n            block.listData.checked = /[xX]/.test(m[1]);\n        }\n    }\n}\n\nvar table = {\n    continue: function () {\n        return 0 /* Go */;\n    },\n    finalize: function () { },\n    canContain: function (t) {\n        return t === 'tableHead' || t === 'tableBody';\n    },\n    acceptsLines: false,\n};\nvar tableBody$1 = {\n    continue: function () {\n        return 0 /* Go */;\n    },\n    finalize: function () { },\n    canContain: function (t) {\n        return t === 'tableRow';\n    },\n    acceptsLines: false,\n};\nvar tableHead$1 = {\n    continue: function () {\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function (t) {\n        return t === 'tableRow' || t === 'tableDelimRow';\n    },\n    acceptsLines: false,\n};\nvar tableDelimRow = {\n    continue: function () {\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function (t) {\n        return t === 'tableDelimCell';\n    },\n    acceptsLines: false,\n};\nvar tableDelimCell = {\n    continue: function () {\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: false,\n};\nvar tableRow = {\n    continue: function () {\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function (t) {\n        return t === 'tableCell';\n    },\n    acceptsLines: false,\n};\nvar tableCell = {\n    continue: function () {\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: false,\n};\n\nvar CODE_INDENT = 4;\nvar C_TAB = 9;\nvar C_GREATERTHAN = 62;\nvar C_LESSTHAN = 60;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\nfunction endsWithBlankLine(block) {\n    var curBlock = block;\n    while (curBlock) {\n        if (curBlock.lastLineBlank) {\n            return true;\n        }\n        var t = curBlock.type;\n        if (!curBlock.lastLineChecked && (t === 'list' || t === 'item')) {\n            curBlock.lastLineChecked = true;\n            curBlock = curBlock.lastChild;\n        }\n        else {\n            curBlock.lastLineChecked = true;\n            break;\n        }\n    }\n    return false;\n}\nfunction peek(ln, pos) {\n    if (pos < ln.length) {\n        return ln.charCodeAt(pos);\n    }\n    return -1;\n}\n// Returns true if string contains only space characters.\nfunction isBlank(s) {\n    return !reNonSpace.test(s);\n}\nfunction isSpaceOrTab(c) {\n    return c === C_SPACE || c === C_TAB;\n}\n\nvar reClosingCustomBlock = /^\\$\\$$/;\nvar customBlock$1 = {\n    continue: function (parser, container) {\n        var line = parser.currentLine;\n        var match = line.match(reClosingCustomBlock);\n        if (match) {\n            // closing custom block\n            parser.lastLineLength = match[0].length;\n            parser.finalize(container, parser.lineNumber);\n            return 2 /* Finished */;\n        }\n        // skip optional spaces of custom block offset\n        var i = container.offset;\n        while (i > 0 && isSpaceOrTab(peek(line, parser.offset))) {\n            parser.advanceOffset(1, true);\n            i--;\n        }\n        return 0 /* Go */;\n    },\n    finalize: function (_, block) {\n        if (block.stringContent === null) {\n            return;\n        }\n        // first line becomes info string\n        var content = block.stringContent;\n        var newlinePos = content.indexOf('\\n');\n        var firstLine = content.slice(0, newlinePos);\n        var rest = content.slice(newlinePos + 1);\n        var infoString = firstLine.match(/^(\\s*)(.*)/);\n        block.info = unescapeString(infoString[2].trim());\n        block.literal = rest;\n        block.stringContent = null;\n    },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: true,\n};\n\nvar noop = {\n    continue: function () {\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: true,\n};\nvar document$1 = {\n    continue: function () {\n        return 0 /* Go */;\n    },\n    finalize: function () { },\n    canContain: function (t) {\n        return t !== 'item';\n    },\n    acceptsLines: false,\n};\nvar list = {\n    continue: function () {\n        return 0 /* Go */;\n    },\n    finalize: function (_, block) {\n        var item = block.firstChild;\n        while (item) {\n            // check for non-final list item ending with blank line:\n            if (endsWithBlankLine(item) && item.next) {\n                block.listData.tight = false;\n                break;\n            }\n            // recurse into children of list item, to see if there are\n            // spaces between any of them:\n            var subitem = item.firstChild;\n            while (subitem) {\n                if (endsWithBlankLine(subitem) && (item.next || subitem.next)) {\n                    block.listData.tight = false;\n                    break;\n                }\n                subitem = subitem.next;\n            }\n            item = item.next;\n        }\n    },\n    canContain: function (t) {\n        return t === 'item';\n    },\n    acceptsLines: false,\n};\nvar blockQuote$1 = {\n    continue: function (parser) {\n        var ln = parser.currentLine;\n        if (!parser.indented && peek(ln, parser.nextNonspace) === C_GREATERTHAN) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(1, false);\n            if (isSpaceOrTab(peek(ln, parser.offset))) {\n                parser.advanceOffset(1, true);\n            }\n        }\n        else {\n            return 1 /* Stop */;\n        }\n        return 0 /* Go */;\n    },\n    finalize: function () { },\n    canContain: function (t) {\n        return t !== 'item';\n    },\n    acceptsLines: false,\n};\nvar item = {\n    continue: function (parser, container) {\n        if (parser.blank) {\n            if (container.firstChild === null) {\n                // Blank line after empty list item\n                return 1 /* Stop */;\n            }\n            parser.advanceNextNonspace();\n        }\n        else if (parser.indent >= container.listData.markerOffset + container.listData.padding) {\n            parser.advanceOffset(container.listData.markerOffset + container.listData.padding, true);\n        }\n        else {\n            return 1 /* Stop */;\n        }\n        return 0 /* Go */;\n    },\n    finalize: taskListItemFinalize,\n    canContain: function (t) {\n        return t !== 'item';\n    },\n    acceptsLines: false,\n};\nvar heading = {\n    continue: function () {\n        // a heading can never container > 1 line, so fail to match:\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: false,\n};\nvar thematicBreak$1 = {\n    continue: function () {\n        // a thematic break can never container > 1 line, so fail to match:\n        return 1 /* Stop */;\n    },\n    finalize: function () { },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: false,\n};\nvar codeBlock = {\n    continue: function (parser, container) {\n        var ln = parser.currentLine;\n        var indent = parser.indent;\n        if (container.isFenced) {\n            // fenced\n            var match = indent <= 3 &&\n                ln.charAt(parser.nextNonspace) === container.fenceChar &&\n                ln.slice(parser.nextNonspace).match(reClosingCodeFence);\n            if (match && match[0].length >= container.fenceLength) {\n                // closing fence - we're at end of line, so we can return\n                parser.lastLineLength = parser.offset + indent + match[0].length;\n                parser.finalize(container, parser.lineNumber);\n                return 2 /* Finished */;\n            }\n            // skip optional spaces of fence offset\n            var i = container.fenceOffset;\n            while (i > 0 && isSpaceOrTab(peek(ln, parser.offset))) {\n                parser.advanceOffset(1, true);\n                i--;\n            }\n        }\n        else {\n            // indented\n            if (indent >= CODE_INDENT) {\n                parser.advanceOffset(CODE_INDENT, true);\n            }\n            else if (parser.blank) {\n                parser.advanceNextNonspace();\n            }\n            else {\n                return 1 /* Stop */;\n            }\n        }\n        return 0 /* Go */;\n    },\n    finalize: function (_, block) {\n        var _a;\n        if (block.stringContent === null) {\n            return;\n        }\n        if (block.isFenced) {\n            // fenced\n            // first line becomes info string\n            var content = block.stringContent;\n            var newlinePos = content.indexOf('\\n');\n            var firstLine = content.slice(0, newlinePos);\n            var rest = content.slice(newlinePos + 1);\n            var infoString = firstLine.match(/^(\\s*)(.*)/);\n            block.infoPadding = infoString[1].length;\n            block.info = unescapeString(infoString[2].trim());\n            block.literal = rest;\n        }\n        else {\n            // indented\n            block.literal = (_a = block.stringContent) === null || _a === void 0 ? void 0 : _a.replace(/(\\n *)+$/, '\\n');\n        }\n        block.stringContent = null; // allow GC\n    },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: true,\n};\nvar htmlBlock$1 = {\n    continue: function (parser, container) {\n        return parser.blank && (container.htmlBlockType === 6 || container.htmlBlockType === 7)\n            ? 1 /* Stop */\n            : 0 /* Go */;\n    },\n    finalize: function (_, block) {\n        var _a;\n        block.literal = ((_a = block.stringContent) === null || _a === void 0 ? void 0 : _a.replace(/(\\n *)+$/, '')) || null;\n        block.stringContent = null; // allow GC\n    },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: true,\n};\nvar paragraph = {\n    continue: function (parser) {\n        return parser.blank ? 1 /* Stop */ : 0 /* Go */;\n    },\n    finalize: function (parser, block) {\n        if (block.stringContent === null) {\n            return;\n        }\n        var pos;\n        var hasReferenceDefs = false;\n        // try parsing the beginning as link reference definitions:\n        while (peek(block.stringContent, 0) === C_OPEN_BRACKET &&\n            (pos = parser.inlineParser.parseReference(block, parser.refMap))) {\n            block.stringContent = block.stringContent.slice(pos);\n            hasReferenceDefs = true;\n        }\n        if (hasReferenceDefs && isBlank(block.stringContent)) {\n            block.unlink();\n        }\n    },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: true,\n};\nvar refDef = noop;\nvar frontMatter$2 = noop;\nvar blockHandlers = {\n    document: document$1,\n    list: list,\n    blockQuote: blockQuote$1,\n    item: item,\n    heading: heading,\n    thematicBreak: thematicBreak$1,\n    codeBlock: codeBlock,\n    htmlBlock: htmlBlock$1,\n    paragraph: paragraph,\n    table: table,\n    tableBody: tableBody$1,\n    tableHead: tableHead$1,\n    tableRow: tableRow,\n    tableCell: tableCell,\n    tableDelimRow: tableDelimRow,\n    tableDelimCell: tableDelimCell,\n    refDef: refDef,\n    customBlock: customBlock$1,\n    frontMatter: frontMatter$2,\n};\n\nfunction parseRowContent(content) {\n    var startIdx = 0;\n    var offset = 0;\n    var cells = [];\n    for (var i = 0; i < content.length; i += 1) {\n        if (content[i] === '|' && content[i - 1] !== '\\\\') {\n            var cell = content.substring(startIdx, i);\n            if (startIdx === 0 && isEmpty(cell)) {\n                offset = i + 1;\n            }\n            else {\n                cells.push(cell);\n            }\n            startIdx = i + 1;\n        }\n    }\n    if (startIdx < content.length) {\n        var cell = content.substring(startIdx, content.length);\n        if (!isEmpty(cell)) {\n            cells.push(cell);\n        }\n    }\n    return [offset, cells];\n}\nfunction generateTableCells(cellType, contents, lineNum, chPos) {\n    var cells = [];\n    for (var _i = 0, contents_1 = contents; _i < contents_1.length; _i++) {\n        var content = contents_1[_i];\n        var preSpaces = content.match(/^[ \\t]+/);\n        var paddingLeft = preSpaces ? preSpaces[0].length : 0;\n        var paddingRight = void 0, trimmed = void 0;\n        if (paddingLeft === content.length) {\n            paddingLeft = 0;\n            paddingRight = 0;\n            trimmed = '';\n        }\n        else {\n            var postSpaces = content.match(/[ \\t]+$/);\n            paddingRight = postSpaces ? postSpaces[0].length : 0;\n            trimmed = content.slice(paddingLeft, content.length - paddingRight);\n        }\n        var chPosStart = chPos + paddingLeft;\n        var tableCell = createNode$1(cellType, [\n            [lineNum, chPos],\n            [lineNum, chPos + content.length - 1],\n        ]);\n        tableCell.stringContent = trimmed.replace(/\\\\\\|/g, '|'); // replace esacped pipe(\\|)\n        tableCell.startIdx = cells.length;\n        tableCell.endIdx = cells.length;\n        tableCell.lineOffsets = [chPosStart - 1];\n        tableCell.paddingLeft = paddingLeft;\n        tableCell.paddingRight = paddingRight;\n        cells.push(tableCell);\n        chPos += content.length + 1;\n    }\n    return cells;\n}\nfunction getColumnFromDelimCell(cellNode) {\n    var align = null;\n    var content = cellNode.stringContent;\n    var firstCh = content[0];\n    var lastCh = content[content.length - 1];\n    if (lastCh === ':') {\n        align = firstCh === ':' ? 'center' : 'right';\n    }\n    else if (firstCh === ':') {\n        align = 'left';\n    }\n    return { align: align };\n}\nvar tableHead = function (parser, container) {\n    var stringContent = container.stringContent;\n    if (container.type === 'paragraph' && !parser.indented && !parser.blank) {\n        var lastNewLineIdx = stringContent.length - 1;\n        var lastLineStartIdx = stringContent.lastIndexOf('\\n', lastNewLineIdx - 1) + 1;\n        var headerContent = stringContent.slice(lastLineStartIdx, lastNewLineIdx);\n        var delimContent = parser.currentLine.slice(parser.nextNonspace);\n        var _a = parseRowContent(headerContent), headerOffset = _a[0], headerCells = _a[1];\n        var _b = parseRowContent(delimContent), delimOffset = _b[0], delimCells = _b[1];\n        var reValidDelimCell_1 = /^[ \\t]*:?-+:?[ \\t]*$/;\n        if (\n        // not checking if the number of header cells and delimiter cells are the same\n        // to consider the case of merged-column (via plugin)\n        !headerCells.length ||\n            !delimCells.length ||\n            delimCells.some(function (cell) { return !reValidDelimCell_1.test(cell); }) ||\n            // to prevent to regard setTextHeading as tabel delim cell with 'disallowDeepHeading' option\n            (delimCells.length === 1 && delimContent.indexOf('|') !== 0)) {\n            return 0 /* None */;\n        }\n        var lineOffsets = container.lineOffsets;\n        var firstLineNum = parser.lineNumber - 1;\n        var firstLineStart = last(lineOffsets) + 1;\n        var table = createNode$1('table', [\n            [firstLineNum, firstLineStart],\n            [parser.lineNumber, parser.offset],\n        ]);\n        // eslint-disable-next-line arrow-body-style\n        table.columns = delimCells.map(function () { return ({ align: null }); });\n        container.insertAfter(table);\n        if (lineOffsets.length === 1) {\n            container.unlink();\n        }\n        else {\n            container.stringContent = stringContent.slice(0, lastLineStartIdx);\n            var paraLastLineStartIdx = stringContent.lastIndexOf('\\n', lastLineStartIdx - 2) + 1;\n            var paraLastLineLen = lastLineStartIdx - paraLastLineStartIdx - 1;\n            parser.lastLineLength = lineOffsets[lineOffsets.length - 2] + paraLastLineLen;\n            parser.finalize(container, firstLineNum - 1);\n        }\n        parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n        var tableHead_1 = createNode$1('tableHead', [\n            [firstLineNum, firstLineStart],\n            [parser.lineNumber, parser.offset],\n        ]);\n        table.appendChild(tableHead_1);\n        var tableHeadRow_1 = createNode$1('tableRow', [\n            [firstLineNum, firstLineStart],\n            [firstLineNum, firstLineStart + headerContent.length - 1],\n        ]);\n        var tableDelimRow_1 = createNode$1('tableDelimRow', [\n            [parser.lineNumber, parser.nextNonspace + 1],\n            [parser.lineNumber, parser.offset],\n        ]);\n        tableHead_1.appendChild(tableHeadRow_1);\n        tableHead_1.appendChild(tableDelimRow_1);\n        generateTableCells('tableCell', headerCells, firstLineNum, firstLineStart + headerOffset).forEach(function (cellNode) {\n            tableHeadRow_1.appendChild(cellNode);\n        });\n        var delimCellNodes = generateTableCells('tableDelimCell', delimCells, parser.lineNumber, parser.nextNonspace + 1 + delimOffset);\n        delimCellNodes.forEach(function (cellNode) {\n            tableDelimRow_1.appendChild(cellNode);\n        });\n        table.columns = delimCellNodes.map(getColumnFromDelimCell);\n        parser.tip = table;\n        return 2 /* Leaf */;\n    }\n    return 0 /* None */;\n};\nvar tableBody = function (parser, container) {\n    if ((container.type !== 'table' && container.type !== 'tableBody') ||\n        (!parser.blank && parser.currentLine.indexOf('|') === -1)) {\n        return 0 /* None */;\n    }\n    parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n    if (parser.blank) {\n        var table_1 = container;\n        if (container.type === 'tableBody') {\n            table_1 = container.parent;\n            parser.finalize(container, parser.lineNumber - 1);\n        }\n        parser.finalize(table_1, parser.lineNumber - 1);\n        return 0 /* None */;\n    }\n    var tableBody = container;\n    if (container.type === 'table') {\n        tableBody = parser.addChild('tableBody', parser.nextNonspace);\n        tableBody.stringContent = null;\n    }\n    var tableRow = createNode$1('tableRow', [\n        [parser.lineNumber, parser.nextNonspace + 1],\n        [parser.lineNumber, parser.currentLine.length],\n    ]);\n    tableBody.appendChild(tableRow);\n    var table = tableBody.parent;\n    var content = parser.currentLine.slice(parser.nextNonspace);\n    var _a = parseRowContent(content), offset = _a[0], cellContents = _a[1];\n    generateTableCells('tableCell', cellContents, parser.lineNumber, parser.nextNonspace + 1 + offset).forEach(function (cellNode, idx) {\n        if (idx >= table.columns.length) {\n            cellNode.ignored = true;\n        }\n        tableRow.appendChild(cellNode);\n    });\n    return 2 /* Leaf */;\n};\n\nvar reCustomBlock = /^(\\$\\$)(\\s*[a-zA-Z])+/;\nvar reCanBeCustomInline = /^(\\$\\$)(\\s*[a-zA-Z])+.*(\\$\\$)/;\nvar customBlock = function (parser) {\n    var match;\n    if (!parser.indented &&\n        !reCanBeCustomInline.test(parser.currentLine) &&\n        (match = parser.currentLine.match(reCustomBlock))) {\n        var syntaxLength = match[1].length;\n        parser.closeUnmatchedBlocks();\n        var container = parser.addChild('customBlock', parser.nextNonspace);\n        container.syntaxLength = syntaxLength;\n        container.offset = parser.indent;\n        parser.advanceNextNonspace();\n        parser.advanceOffset(syntaxLength, false);\n        return 2 /* Leaf */;\n    }\n    return 0 /* None */;\n};\n\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\nvar reHtmlBlockOpen = [\n    /./,\n    /^<(?:script|pre|style)(?:\\s|>|$)/i,\n    /^<!--/,\n    /^<[?]/,\n    /^<![A-Z]/,\n    /^<!\\[CDATA\\[/,\n    /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i,\n    new RegExp(\"^(?:\" + OPENTAG + \"|\" + CLOSETAG + \")\\\\s*$\", 'i'),\n];\nvar reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\nvar reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\nvar reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\nvar reBulletListMarker = /^[*+-]/;\nvar reOrderedListMarker = /^(\\d{1,9})([.)])/;\n// Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\nfunction parseListMarker(parser, container) {\n    var rest = parser.currentLine.slice(parser.nextNonspace);\n    var match;\n    var nextc;\n    var data = {\n        type: 'bullet',\n        tight: true,\n        bulletChar: '',\n        start: 0,\n        delimiter: '',\n        padding: 0,\n        markerOffset: parser.indent,\n        // GFM: Task List Item\n        task: false,\n        checked: false,\n    };\n    if (parser.indent >= 4) {\n        return null;\n    }\n    if ((match = rest.match(reBulletListMarker))) {\n        data.type = 'bullet';\n        data.bulletChar = match[0][0];\n    }\n    else if ((match = rest.match(reOrderedListMarker)) &&\n        (container.type !== 'paragraph' || match[1] === '1')) {\n        data.type = 'ordered';\n        data.start = parseInt(match[1], 10);\n        data.delimiter = match[2];\n    }\n    else {\n        return null;\n    }\n    // make sure we have spaces after\n    nextc = peek(parser.currentLine, parser.nextNonspace + match[0].length);\n    if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n        return null;\n    }\n    // if it interrupts paragraph, make sure first line isn't blank\n    if (container.type === 'paragraph' &&\n        !parser.currentLine.slice(parser.nextNonspace + match[0].length).match(reNonSpace)) {\n        return null;\n    }\n    // we've got a match! advance offset and calculate padding\n    parser.advanceNextNonspace(); // to start of marker\n    parser.advanceOffset(match[0].length, true); // to end of marker\n    var spacesStartCol = parser.column;\n    var spacesStartOffset = parser.offset;\n    do {\n        parser.advanceOffset(1, true);\n        nextc = peek(parser.currentLine, parser.offset);\n    } while (parser.column - spacesStartCol < 5 && isSpaceOrTab(nextc));\n    var blankItem = peek(parser.currentLine, parser.offset) === -1;\n    var spacesAfterMarker = parser.column - spacesStartCol;\n    if (spacesAfterMarker >= 5 || spacesAfterMarker < 1 || blankItem) {\n        data.padding = match[0].length + 1;\n        parser.column = spacesStartCol;\n        parser.offset = spacesStartOffset;\n        if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n            parser.advanceOffset(1, true);\n        }\n    }\n    else {\n        data.padding = match[0].length + spacesAfterMarker;\n    }\n    return data;\n}\n// Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\nfunction listsMatch(listData, itemData) {\n    return (listData.type === itemData.type &&\n        listData.delimiter === itemData.delimiter &&\n        listData.bulletChar === itemData.bulletChar);\n}\nfunction isDisallowedDeepHeading(parser, node) {\n    return parser.options.disallowDeepHeading && (node.type === 'blockQuote' || node.type === 'item');\n}\nvar blockQuote = function (parser) {\n    if (!parser.indented && peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN) {\n        parser.advanceNextNonspace();\n        parser.advanceOffset(1, false);\n        // optional following space\n        if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n            parser.advanceOffset(1, true);\n        }\n        parser.closeUnmatchedBlocks();\n        parser.addChild('blockQuote', parser.nextNonspace);\n        return 1 /* Container */;\n    }\n    return 0 /* None */;\n};\nvar atxHeading = function (parser, container) {\n    var match;\n    if (!parser.indented &&\n        // The nested Heading is disallowed in list and blockquote with 'disallowDeepHeading' option\n        !isDisallowedDeepHeading(parser, container) &&\n        (match = parser.currentLine.slice(parser.nextNonspace).match(reATXHeadingMarker))) {\n        parser.advanceNextNonspace();\n        parser.advanceOffset(match[0].length, false);\n        parser.closeUnmatchedBlocks();\n        var heading = parser.addChild('heading', parser.nextNonspace);\n        heading.level = match[0].trim().length; // number of #s\n        heading.headingType = 'atx';\n        // remove trailing ###s:\n        heading.stringContent = parser.currentLine\n            .slice(parser.offset)\n            .replace(/^[ \\t]*#+[ \\t]*$/, '')\n            .replace(/[ \\t]+#+[ \\t]*$/, '');\n        parser.advanceOffset(parser.currentLine.length - parser.offset);\n        return 2 /* Leaf */;\n    }\n    return 0 /* None */;\n};\nvar fencedCodeBlock = function (parser) {\n    var match;\n    if (!parser.indented &&\n        (match = parser.currentLine.slice(parser.nextNonspace).match(reCodeFence))) {\n        var fenceLength = match[0].length;\n        parser.closeUnmatchedBlocks();\n        var container = parser.addChild('codeBlock', parser.nextNonspace);\n        container.isFenced = true;\n        container.fenceLength = fenceLength;\n        container.fenceChar = match[0][0];\n        container.fenceOffset = parser.indent;\n        parser.advanceNextNonspace();\n        parser.advanceOffset(fenceLength, false);\n        return 2 /* Leaf */;\n    }\n    return 0 /* None */;\n};\nvar htmlBlock = function (parser, container) {\n    if (!parser.indented && peek(parser.currentLine, parser.nextNonspace) === C_LESSTHAN) {\n        var s = parser.currentLine.slice(parser.nextNonspace);\n        var disallowedTags = parser.options.disallowedHtmlBlockTags;\n        var blockType = void 0;\n        for (blockType = 1; blockType <= 7; blockType++) {\n            var matched = s.match(reHtmlBlockOpen[blockType]);\n            if (matched) {\n                if (blockType === 7) {\n                    if (container.type === 'paragraph') {\n                        return 0 /* None */;\n                    }\n                    if (disallowedTags.length > 0) {\n                        var reDisallowedTags = new RegExp(\"</?(?:\" + disallowedTags.join('|') + \")\", 'i');\n                        if (reDisallowedTags.test(matched[0])) {\n                            return 0 /* None */;\n                        }\n                    }\n                }\n                parser.closeUnmatchedBlocks();\n                // We don't adjust parser.offset;\n                // spaces are part of the HTML block:\n                var b = parser.addChild('htmlBlock', parser.offset);\n                b.htmlBlockType = blockType;\n                return 2 /* Leaf */;\n            }\n        }\n    }\n    return 0 /* None */;\n};\nvar seTextHeading = function (parser, container) {\n    var match;\n    if (container.stringContent !== null &&\n        !parser.indented &&\n        container.type === 'paragraph' &&\n        // The nested Heading is disallowed in list and blockquote with 'disallowDeepHeading' option\n        !isDisallowedDeepHeading(parser, container.parent) &&\n        (match = parser.currentLine.slice(parser.nextNonspace).match(reSetextHeadingLine))) {\n        parser.closeUnmatchedBlocks();\n        // resolve reference link definitions\n        var pos = void 0;\n        while (peek(container.stringContent, 0) === C_OPEN_BRACKET &&\n            (pos = parser.inlineParser.parseReference(container, parser.refMap))) {\n            container.stringContent = container.stringContent.slice(pos);\n        }\n        if (container.stringContent.length > 0) {\n            var heading = createNode$1('heading', container.sourcepos);\n            heading.level = match[0][0] === '=' ? 1 : 2;\n            heading.headingType = 'setext';\n            heading.stringContent = container.stringContent;\n            container.insertAfter(heading);\n            container.unlink();\n            parser.tip = heading;\n            parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n            return 2 /* Leaf */;\n        }\n        return 0 /* None */;\n    }\n    return 0 /* None */;\n};\nvar thematicBreak = function (parser) {\n    if (!parser.indented && reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))) {\n        parser.closeUnmatchedBlocks();\n        parser.addChild('thematicBreak', parser.nextNonspace);\n        parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n        return 2 /* Leaf */;\n    }\n    return 0 /* None */;\n};\nvar listItem = function (parser, container) {\n    var data;\n    var currNode = container;\n    if ((!parser.indented || container.type === 'list') &&\n        (data = parseListMarker(parser, currNode))) {\n        parser.closeUnmatchedBlocks();\n        // add the list if needed\n        if (parser.tip.type !== 'list' || !listsMatch(currNode.listData, data)) {\n            currNode = parser.addChild('list', parser.nextNonspace);\n            currNode.listData = data;\n        }\n        // add the list item\n        currNode = parser.addChild('item', parser.nextNonspace);\n        currNode.listData = data;\n        return 1 /* Container */;\n    }\n    return 0 /* None */;\n};\n// indented code block\nvar indentedCodeBlock = function (parser) {\n    if (parser.indented && parser.tip.type !== 'paragraph' && !parser.blank) {\n        // indented code\n        parser.advanceOffset(CODE_INDENT, true);\n        parser.closeUnmatchedBlocks();\n        parser.addChild('codeBlock', parser.offset);\n        return 2 /* Leaf */;\n    }\n    return 0 /* None */;\n};\nvar blockStarts = [\n    blockQuote,\n    atxHeading,\n    fencedCodeBlock,\n    htmlBlock,\n    seTextHeading,\n    thematicBreak,\n    listItem,\n    indentedCodeBlock,\n    tableHead,\n    tableBody,\n    customBlock,\n];\n\n// `---` for YAML, `+++` for TOML, `;;;` for JSON\nvar reFrontMatter = /^(-{3}|\\+{3}|;{3})$/;\nvar frontMatter$1 = function (parser, container) {\n    var currentLine = parser.currentLine, lineNumber = parser.lineNumber, indented = parser.indented;\n    if (lineNumber === 1 &&\n        !indented &&\n        container.type === 'document' &&\n        reFrontMatter.test(currentLine)) {\n        parser.closeUnmatchedBlocks();\n        var frontMatter_1 = parser.addChild('frontMatter', parser.nextNonspace);\n        frontMatter_1.stringContent = currentLine;\n        parser.advanceNextNonspace();\n        parser.advanceOffset(currentLine.length, false);\n        return 2 /* Leaf */;\n    }\n    return 0 /* None */;\n};\n\nvar frontMatter = {\n    continue: function (parser, container) {\n        var line = parser.currentLine;\n        var match = line.match(reFrontMatter);\n        if (container.type === 'frontMatter' && match) {\n            container.stringContent += line;\n            parser.lastLineLength = match[0].length;\n            parser.finalize(container, parser.lineNumber);\n            return 2 /* Finished */;\n        }\n        return 0 /* Go */;\n    },\n    finalize: function (_, block) {\n        if (block.stringContent === null) {\n            return;\n        }\n        block.literal = block.stringContent;\n        block.stringContent = null;\n    },\n    canContain: function () {\n        return false;\n    },\n    acceptsLines: true,\n};\n\nvar reHtmlBlockClose = [\n    /./,\n    /<\\/(?:script|pre|style)>/i,\n    /-->/,\n    /\\?>/,\n    />/,\n    /\\]\\]>/,\n];\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-;$]/;\nvar reLineEnding$1 = /\\r\\n|\\n|\\r/;\nfunction document$2() {\n    return createNode$1('document', [\n        [1, 1],\n        [0, 0],\n    ]);\n}\nvar defaultOptions$1 = {\n    smart: false,\n    tagFilter: false,\n    extendedAutolinks: false,\n    disallowedHtmlBlockTags: [],\n    referenceDefinition: false,\n    disallowDeepHeading: false,\n    customParser: null,\n    frontMatter: false,\n};\nvar Parser = /** @class */ (function () {\n    function Parser(options) {\n        this.options = __assign(__assign({}, defaultOptions$1), options);\n        this.doc = document$2();\n        this.tip = this.doc;\n        this.oldtip = this.doc;\n        this.lineNumber = 0;\n        this.offset = 0;\n        this.column = 0;\n        this.nextNonspace = 0;\n        this.nextNonspaceColumn = 0;\n        this.indent = 0;\n        this.currentLine = '';\n        this.indented = false;\n        this.blank = false;\n        this.partiallyConsumedTab = false;\n        this.allClosed = true;\n        this.lastMatchedContainer = this.doc;\n        this.refMap = {};\n        this.refLinkCandidateMap = {};\n        this.refDefCandidateMap = {};\n        this.lastLineLength = 0;\n        this.lines = [];\n        if (this.options.frontMatter) {\n            blockHandlers.frontMatter = frontMatter;\n            blockStarts.unshift(frontMatter$1);\n        }\n        this.inlineParser = new InlineParser(this.options);\n    }\n    Parser.prototype.advanceOffset = function (count, columns) {\n        if (columns === void 0) { columns = false; }\n        var currentLine = this.currentLine;\n        var charsToTab, charsToAdvance;\n        var c;\n        while (count > 0 && (c = currentLine[this.offset])) {\n            if (c === '\\t') {\n                charsToTab = 4 - (this.column % 4);\n                if (columns) {\n                    this.partiallyConsumedTab = charsToTab > count;\n                    charsToAdvance = charsToTab > count ? count : charsToTab;\n                    this.column += charsToAdvance;\n                    this.offset += this.partiallyConsumedTab ? 0 : 1;\n                    count -= charsToAdvance;\n                }\n                else {\n                    this.partiallyConsumedTab = false;\n                    this.column += charsToTab;\n                    this.offset += 1;\n                    count -= 1;\n                }\n            }\n            else {\n                this.partiallyConsumedTab = false;\n                this.offset += 1;\n                this.column += 1; // assume ascii; block starts are ascii\n                count -= 1;\n            }\n        }\n    };\n    Parser.prototype.advanceNextNonspace = function () {\n        this.offset = this.nextNonspace;\n        this.column = this.nextNonspaceColumn;\n        this.partiallyConsumedTab = false;\n    };\n    Parser.prototype.findNextNonspace = function () {\n        var currentLine = this.currentLine;\n        var i = this.offset;\n        var cols = this.column;\n        var c;\n        while ((c = currentLine.charAt(i)) !== '') {\n            if (c === ' ') {\n                i++;\n                cols++;\n            }\n            else if (c === '\\t') {\n                i++;\n                cols += 4 - (cols % 4);\n            }\n            else {\n                break;\n            }\n        }\n        this.blank = c === '\\n' || c === '\\r' || c === '';\n        this.nextNonspace = i;\n        this.nextNonspaceColumn = cols;\n        this.indent = this.nextNonspaceColumn - this.column;\n        this.indented = this.indent >= CODE_INDENT;\n    };\n    // Add a line to the block at the tip.  We assume the tip\n    // can accept lines -- that check should be done before calling this.\n    Parser.prototype.addLine = function () {\n        if (this.partiallyConsumedTab) {\n            this.offset += 1; // skip over tab\n            // add space characters:\n            var charsToTab = 4 - (this.column % 4);\n            this.tip.stringContent += repeat(' ', charsToTab);\n        }\n        if (this.tip.lineOffsets) {\n            this.tip.lineOffsets.push(this.offset);\n        }\n        else {\n            this.tip.lineOffsets = [this.offset];\n        }\n        this.tip.stringContent += this.currentLine.slice(this.offset) + \"\\n\";\n    };\n    // Add block of type tag as a child of the tip.  If the tip can't\n    // accept children, close and finalize it and try its parent,\n    // and so on til we find a block that can accept children.\n    Parser.prototype.addChild = function (tag, offset) {\n        while (!blockHandlers[this.tip.type].canContain(tag)) {\n            this.finalize(this.tip, this.lineNumber - 1);\n        }\n        var columnNumber = offset + 1; // offset 0 = column 1\n        var newBlock = createNode$1(tag, [\n            [this.lineNumber, columnNumber],\n            [0, 0],\n        ]);\n        newBlock.stringContent = '';\n        this.tip.appendChild(newBlock);\n        this.tip = newBlock;\n        return newBlock;\n    };\n    // Finalize and close any unmatched blocks.\n    Parser.prototype.closeUnmatchedBlocks = function () {\n        if (!this.allClosed) {\n            // finalize any blocks not matched\n            while (this.oldtip !== this.lastMatchedContainer) {\n                var parent_1 = this.oldtip.parent;\n                this.finalize(this.oldtip, this.lineNumber - 1);\n                this.oldtip = parent_1;\n            }\n            this.allClosed = true;\n        }\n    };\n    // Finalize a block.  Close it and do any necessary postprocessing,\n    // e.g. creating stringContent from strings, setting the 'tight'\n    // or 'loose' status of a list, and parsing the beginnings\n    // of paragraphs for reference definitions.  Reset the tip to the\n    // parent of the closed block.\n    Parser.prototype.finalize = function (block, lineNumber) {\n        var above = block.parent;\n        block.open = false;\n        block.sourcepos[1] = [lineNumber, this.lastLineLength];\n        blockHandlers[block.type].finalize(this, block);\n        this.tip = above;\n    };\n    // Walk through a block & children recursively, parsing string content\n    // into inline content where appropriate.\n    Parser.prototype.processInlines = function (block) {\n        var event;\n        var customParser = this.options.customParser;\n        var walker = block.walker();\n        this.inlineParser.refMap = this.refMap;\n        this.inlineParser.refLinkCandidateMap = this.refLinkCandidateMap;\n        this.inlineParser.refDefCandidateMap = this.refDefCandidateMap;\n        this.inlineParser.options = this.options;\n        while ((event = walker.next())) {\n            var node = event.node, entering = event.entering;\n            var t = node.type;\n            if (customParser && customParser[t]) {\n                customParser[t](node, { entering: entering, options: this.options });\n            }\n            if (!entering &&\n                (t === 'paragraph' ||\n                    t === 'heading' ||\n                    (t === 'tableCell' && !node.ignored))) {\n                this.inlineParser.parse(node);\n            }\n        }\n    };\n    // Analyze a line of text and update the document appropriately.\n    // We parse markdown text by calling this on each line of input,\n    // then finalizing the document.\n    Parser.prototype.incorporateLine = function (ln) {\n        var container = this.doc;\n        this.oldtip = this.tip;\n        this.offset = 0;\n        this.column = 0;\n        this.blank = false;\n        this.partiallyConsumedTab = false;\n        this.lineNumber += 1;\n        // replace NUL characters for security\n        if (ln.indexOf('\\u0000') !== -1) {\n            ln = ln.replace(/\\0/g, '\\uFFFD');\n        }\n        this.currentLine = ln;\n        // For each containing block, try to parse the associated line start.\n        // Bail out on failure: container will point to the last matching block.\n        // Set allMatched to false if not all containers match.\n        var allMatched = true;\n        var lastChild;\n        while ((lastChild = container.lastChild) && lastChild.open) {\n            container = lastChild;\n            this.findNextNonspace();\n            switch (blockHandlers[container.type]['continue'](this, container)) {\n                case 0 /* Go */: // we've matched, keep going\n                    break;\n                case 1 /* Stop */: // we've failed to match a block\n                    allMatched = false;\n                    break;\n                case 2 /* Finished */: // we've hit end of line for fenced code close and can return\n                    this.lastLineLength = ln.length;\n                    return;\n                default:\n                    throw new Error('continue returned illegal value, must be 0, 1, or 2');\n            }\n            if (!allMatched) {\n                container = container.parent; // back up to last matching block\n                break;\n            }\n        }\n        this.allClosed = container === this.oldtip;\n        this.lastMatchedContainer = container;\n        var matchedLeaf = container.type !== 'paragraph' && blockHandlers[container.type].acceptsLines;\n        var blockStartsLen = blockStarts.length;\n        // Unless last matched container is a code block, try new container starts,\n        // adding children to the last matched container:\n        while (!matchedLeaf) {\n            this.findNextNonspace();\n            // this is a little performance optimization:\n            if (container.type !== 'table' &&\n                container.type !== 'tableBody' &&\n                container.type !== 'paragraph' &&\n                !this.indented &&\n                !reMaybeSpecial.test(ln.slice(this.nextNonspace))) {\n                this.advanceNextNonspace();\n                break;\n            }\n            var i = 0;\n            while (i < blockStartsLen) {\n                var res = blockStarts[i](this, container);\n                if (res === 1 /* Container */) {\n                    container = this.tip;\n                    break;\n                }\n                else if (res === 2 /* Leaf */) {\n                    container = this.tip;\n                    matchedLeaf = true;\n                    break;\n                }\n                else {\n                    i++;\n                }\n            }\n            if (i === blockStartsLen) {\n                // nothing matched\n                this.advanceNextNonspace();\n                break;\n            }\n        }\n        // What remains at the offset is a text line.  Add the text to the\n        // appropriate container.\n        // First check for a lazy paragraph continuation:\n        if (!this.allClosed && !this.blank && this.tip.type === 'paragraph') {\n            // lazy paragraph continuation\n            this.addLine();\n        }\n        else {\n            // not a lazy continuation\n            // finalize any blocks not matched\n            this.closeUnmatchedBlocks();\n            if (this.blank && container.lastChild) {\n                container.lastChild.lastLineBlank = true;\n            }\n            var t = container.type;\n            // Block quote lines are never blank as they start with >\n            // and we don't count blanks in fenced code for purposes of tight/loose\n            // lists or breaking out of lists. We also don't set _lastLineBlank\n            // on an empty list item, or if we just closed a fenced block.\n            var lastLineBlank = this.blank &&\n                !(t === 'blockQuote' ||\n                    (isCodeBlock(container) && container.isFenced) ||\n                    (t === 'item' && !container.firstChild && container.sourcepos[0][0] === this.lineNumber));\n            // propagate lastLineBlank up through parents:\n            var cont = container;\n            while (cont) {\n                cont.lastLineBlank = lastLineBlank;\n                cont = cont.parent;\n            }\n            if (blockHandlers[t].acceptsLines) {\n                this.addLine();\n                // if HtmlBlock, check for end condition\n                if (isHtmlBlock(container) &&\n                    container.htmlBlockType >= 1 &&\n                    container.htmlBlockType <= 5 &&\n                    reHtmlBlockClose[container.htmlBlockType].test(this.currentLine.slice(this.offset))) {\n                    this.lastLineLength = ln.length;\n                    this.finalize(container, this.lineNumber);\n                }\n            }\n            else if (this.offset < ln.length && !this.blank) {\n                // create paragraph container for line\n                container = this.addChild('paragraph', this.offset);\n                this.advanceNextNonspace();\n                this.addLine();\n            }\n        }\n        this.lastLineLength = ln.length;\n    };\n    // The main parsing function.  Returns a parsed document AST.\n    Parser.prototype.parse = function (input, lineTexts) {\n        this.doc = document$2();\n        this.tip = this.doc;\n        this.lineNumber = 0;\n        this.lastLineLength = 0;\n        this.offset = 0;\n        this.column = 0;\n        this.lastMatchedContainer = this.doc;\n        this.currentLine = '';\n        var lines = input.split(reLineEnding$1);\n        var len = lines.length;\n        this.lines = lineTexts ? lineTexts : lines;\n        if (this.options.referenceDefinition) {\n            this.clearRefMaps();\n        }\n        if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n            // ignore last blank line created by final newline\n            len -= 1;\n        }\n        for (var i = 0; i < len; i++) {\n            this.incorporateLine(lines[i]);\n        }\n        while (this.tip) {\n            this.finalize(this.tip, len);\n        }\n        this.processInlines(this.doc);\n        return this.doc;\n    };\n    Parser.prototype.partialParseStart = function (lineNumber, lines) {\n        this.doc = document$2();\n        this.tip = this.doc;\n        this.lineNumber = lineNumber - 1;\n        this.lastLineLength = 0;\n        this.offset = 0;\n        this.column = 0;\n        this.lastMatchedContainer = this.doc;\n        this.currentLine = '';\n        var len = lines.length;\n        for (var i = 0; i < len; i++) {\n            this.incorporateLine(lines[i]);\n        }\n        return this.doc;\n    };\n    Parser.prototype.partialParseExtends = function (lines) {\n        for (var i = 0; i < lines.length; i++) {\n            this.incorporateLine(lines[i]);\n        }\n    };\n    Parser.prototype.partialParseFinish = function () {\n        while (this.tip) {\n            this.finalize(this.tip, this.lineNumber);\n        }\n        this.processInlines(this.doc);\n    };\n    Parser.prototype.setRefMaps = function (refMap, refLinkCandidateMap, refDefCandidateMap) {\n        this.refMap = refMap;\n        this.refLinkCandidateMap = refLinkCandidateMap;\n        this.refDefCandidateMap = refDefCandidateMap;\n    };\n    Parser.prototype.clearRefMaps = function () {\n        [this.refMap, this.refLinkCandidateMap, this.refDefCandidateMap].forEach(function (map) {\n            clearObj(map);\n        });\n    };\n    return Parser;\n}());\n\nfunction comparePos(p1, p2) {\n    if (p1[0] < p2[0]) {\n        return 1 /* LT */;\n    }\n    if (p1[0] > p2[0]) {\n        return -1 /* GT */;\n    }\n    if (p1[1] < p2[1]) {\n        return 1 /* LT */;\n    }\n    if (p1[1] > p2[1]) {\n        return -1 /* GT */;\n    }\n    return 0 /* EQ */;\n}\nfunction compareRangeAndPos(_a, pos) {\n    var startPos = _a[0], endPos = _a[1];\n    if (comparePos(endPos, pos) === 1 /* LT */) {\n        return 1 /* LT */;\n    }\n    if (comparePos(startPos, pos) === -1 /* GT */) {\n        return -1 /* GT */;\n    }\n    return 0 /* EQ */;\n}\nfunction removeNextUntil(node, last) {\n    if (node.parent !== last.parent || node === last) {\n        return;\n    }\n    var next = node.next;\n    while (next && next !== last) {\n        var temp = next.next;\n        for (var _i = 0, _a = ['parent', 'prev', 'next']; _i < _a.length; _i++) {\n            var type = _a[_i];\n            if (next[type]) {\n                removeNodeById(next[type].id);\n                next[type] = null;\n            }\n        }\n        next = temp;\n    }\n    node.next = last.next;\n    if (last.next) {\n        last.next.prev = node;\n    }\n    else {\n        node.parent.lastChild = node;\n    }\n}\nfunction getChildNodes(parent) {\n    var nodes = [];\n    var curr = parent.firstChild;\n    while (curr) {\n        nodes.push(curr);\n        curr = curr.next;\n    }\n    return nodes;\n}\nfunction insertNodesBefore(target, nodes) {\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n        var node = nodes_1[_i];\n        target.insertBefore(node);\n    }\n}\nfunction prependChildNodes(parent, nodes) {\n    for (var i = nodes.length - 1; i >= 0; i -= 1) {\n        parent.prependChild(nodes[i]);\n    }\n}\nfunction updateNextLineNumbers(base, diff) {\n    if (!base || !base.parent || diff === 0) {\n        return;\n    }\n    var walker = base.parent.walker();\n    walker.resumeAt(base, true);\n    var event;\n    while ((event = walker.next())) {\n        var node = event.node, entering = event.entering;\n        if (entering) {\n            node.sourcepos[0][0] += diff;\n            node.sourcepos[1][0] += diff;\n        }\n    }\n}\nfunction compareRangeAndLine(_a, line) {\n    var startPos = _a[0], endPos = _a[1];\n    if (endPos[0] < line) {\n        return 1 /* LT */;\n    }\n    if (startPos[0] > line) {\n        return -1 /* GT */;\n    }\n    return 0 /* EQ */;\n}\nfunction findChildNodeAtLine(parent, line) {\n    var node = parent.firstChild;\n    while (node) {\n        var comp = compareRangeAndLine(node.sourcepos, line);\n        if (comp === 0 /* EQ */) {\n            return node;\n        }\n        if (comp === -1 /* GT */) {\n            // To consider that top line is blank line\n            return node.prev || node;\n        }\n        node = node.next;\n    }\n    return parent.lastChild;\n}\nfunction lastLeafNode(node) {\n    while (node.lastChild) {\n        node = node.lastChild;\n    }\n    return node;\n}\nfunction sameLineTopAncestor(node) {\n    while (node.parent &&\n        node.parent.type !== 'document' &&\n        node.parent.sourcepos[0][0] === node.sourcepos[0][0]) {\n        node = node.parent;\n    }\n    return node;\n}\nfunction findFirstNodeAtLine(parent, line) {\n    var node = parent.firstChild;\n    var prev = null;\n    while (node) {\n        var comp = compareRangeAndLine(node.sourcepos, line);\n        if (comp === 0 /* EQ */) {\n            if (node.sourcepos[0][0] === line || !node.firstChild) {\n                return node;\n            }\n            prev = node;\n            node = node.firstChild;\n        }\n        else if (comp === -1 /* GT */) {\n            break;\n        }\n        else {\n            prev = node;\n            node = node.next;\n        }\n    }\n    if (prev) {\n        return sameLineTopAncestor(lastLeafNode(prev));\n    }\n    return null;\n}\nfunction findNodeAtPosition(parent, pos) {\n    var node = parent;\n    var prev = null;\n    while (node) {\n        var comp = compareRangeAndPos(node.sourcepos, pos);\n        if (comp === 0 /* EQ */) {\n            if (node.firstChild) {\n                prev = node;\n                node = node.firstChild;\n            }\n            else {\n                return node;\n            }\n        }\n        else if (comp === -1 /* GT */) {\n            return prev;\n        }\n        else if (node.next) {\n            node = node.next;\n        }\n        else {\n            return prev;\n        }\n    }\n    return node;\n}\nfunction findNodeById(id) {\n    return getNodeById(id) || null;\n}\nfunction invokeNextUntil(callback, start, end) {\n    if (end === void 0) { end = null; }\n    if (start) {\n        var walker = start.walker();\n        while (start && start !== end) {\n            callback(start);\n            var next = walker.next();\n            if (next) {\n                start = next.node;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\nfunction isUnlinked(id) {\n    var node = findNodeById(id);\n    if (!node) {\n        return true;\n    }\n    while (node && node.type !== 'document') {\n        // eslint-disable-next-line no-loop-func\n        if (!node.parent && !node.prev && !node.next) {\n            return true;\n        }\n        node = node.parent;\n    }\n    return false;\n}\n\nvar reLineEnding = /\\r\\n|\\n|\\r/;\nfunction canBeContinuedListItem(lineText) {\n    var spaceMatch = lineText.match(/^[ \\t]+/);\n    if (spaceMatch && (spaceMatch[0].length >= 2 || /\\t/.test(spaceMatch[0]))) {\n        return true;\n    }\n    var leftTrimmed = spaceMatch ? lineText.slice(spaceMatch.length) : lineText;\n    return reBulletListMarker.test(leftTrimmed) || reOrderedListMarker.test(leftTrimmed);\n}\nfunction canBeContinuedTableBody(lineText) {\n    return !isBlank(lineText) && lineText.indexOf('|') !== -1;\n}\nfunction createRefDefState(node) {\n    var id = node.id, title = node.title, sourcepos = node.sourcepos, dest = node.dest;\n    return {\n        id: id,\n        title: title,\n        sourcepos: sourcepos,\n        unlinked: false,\n        destination: dest,\n    };\n}\nvar ToastMark = /** @class */ (function () {\n    function ToastMark(contents, options) {\n        this.refMap = {};\n        this.refLinkCandidateMap = {};\n        this.refDefCandidateMap = {};\n        this.referenceDefinition = !!(options === null || options === void 0 ? void 0 : options.referenceDefinition);\n        this.parser = new Parser(options);\n        this.parser.setRefMaps(this.refMap, this.refLinkCandidateMap, this.refDefCandidateMap);\n        this.eventHandlerMap = { change: [] };\n        contents = contents || '';\n        this.lineTexts = contents.split(reLineEnding);\n        this.root = this.parser.parse(contents, this.lineTexts);\n    }\n    ToastMark.prototype.updateLineTexts = function (startPos, endPos, newText) {\n        var _a;\n        var startLine = startPos[0], startCol = startPos[1];\n        var endLine = endPos[0], endCol = endPos[1];\n        var newLines = newText.split(reLineEnding);\n        var newLineLen = newLines.length;\n        var startLineText = this.lineTexts[startLine - 1];\n        var endLineText = this.lineTexts[endLine - 1];\n        newLines[0] = startLineText.slice(0, startCol - 1) + newLines[0];\n        newLines[newLineLen - 1] = newLines[newLineLen - 1] + endLineText.slice(endCol - 1);\n        var removedLineLen = endLine - startLine + 1;\n        (_a = this.lineTexts).splice.apply(_a, __spreadArray([startLine - 1, removedLineLen], newLines));\n        return newLineLen - removedLineLen;\n    };\n    ToastMark.prototype.updateRootNodeState = function () {\n        if (this.lineTexts.length === 1 && this.lineTexts[0] === '') {\n            this.root.lastLineBlank = true;\n            this.root.sourcepos = [\n                [1, 1],\n                [1, 0],\n            ];\n            return;\n        }\n        if (this.root.lastChild) {\n            this.root.lastLineBlank = this.root.lastChild.lastLineBlank;\n        }\n        var lineTexts = this.lineTexts;\n        var idx = lineTexts.length - 1;\n        while (lineTexts[idx] === '') {\n            idx -= 1;\n        }\n        if (lineTexts.length - 2 > idx) {\n            idx += 1;\n        }\n        this.root.sourcepos[1] = [idx + 1, lineTexts[idx].length];\n    };\n    ToastMark.prototype.replaceRangeNodes = function (startNode, endNode, newNodes) {\n        if (!startNode) {\n            if (endNode) {\n                insertNodesBefore(endNode, newNodes);\n                removeNodeById(endNode.id);\n                endNode.unlink();\n            }\n            else {\n                prependChildNodes(this.root, newNodes);\n            }\n        }\n        else {\n            insertNodesBefore(startNode, newNodes);\n            removeNextUntil(startNode, endNode);\n            [startNode.id, endNode.id].forEach(function (id) { return removeNodeById(id); });\n            startNode.unlink();\n        }\n    };\n    ToastMark.prototype.getNodeRange = function (startPos, endPos) {\n        var startNode = findChildNodeAtLine(this.root, startPos[0]);\n        var endNode = findChildNodeAtLine(this.root, endPos[0]);\n        // extend node range to include a following block which doesn't have preceding blank line\n        if (endNode && endNode.next && endPos[0] + 1 === endNode.next.sourcepos[0][0]) {\n            endNode = endNode.next;\n        }\n        return [startNode, endNode];\n    };\n    ToastMark.prototype.trigger = function (eventName, param) {\n        this.eventHandlerMap[eventName].forEach(function (handler) {\n            handler(param);\n        });\n    };\n    ToastMark.prototype.extendEndLine = function (line) {\n        while (this.lineTexts[line] === '') {\n            line += 1;\n        }\n        return line;\n    };\n    ToastMark.prototype.parseRange = function (startNode, endNode, startLine, endLine) {\n        // extends starting range if the first node can be a continued list item\n        if (startNode &&\n            startNode.prev &&\n            ((isList(startNode.prev) && canBeContinuedListItem(this.lineTexts[startLine - 1])) ||\n                (isTable(startNode.prev) && canBeContinuedTableBody(this.lineTexts[startLine - 1])))) {\n            startNode = startNode.prev;\n            startLine = startNode.sourcepos[0][0];\n        }\n        var editedLines = this.lineTexts.slice(startLine - 1, endLine);\n        var root = this.parser.partialParseStart(startLine, editedLines);\n        // extends ending range if the following node can be a fenced code block or a continued list item\n        var nextNode = endNode ? endNode.next : this.root.firstChild;\n        var lastChild = root.lastChild;\n        var isOpenedLastChildCodeBlock = lastChild && isCodeBlock(lastChild) && lastChild.open;\n        var isOpenedLastChildCustomBlock = lastChild && isCustomBlock(lastChild) && lastChild.open;\n        var isLastChildList = lastChild && isList(lastChild);\n        while (((isOpenedLastChildCodeBlock || isOpenedLastChildCustomBlock) && nextNode) ||\n            (isLastChildList && nextNode && (nextNode.type === 'list' || nextNode.sourcepos[0][1] >= 2))) {\n            var newEndLine = this.extendEndLine(nextNode.sourcepos[1][0]);\n            this.parser.partialParseExtends(this.lineTexts.slice(endLine, newEndLine));\n            if (!startNode) {\n                startNode = endNode;\n            }\n            endNode = nextNode;\n            endLine = newEndLine;\n            nextNode = nextNode.next;\n        }\n        this.parser.partialParseFinish();\n        var newNodes = getChildNodes(root);\n        return { newNodes: newNodes, extStartNode: startNode, extEndNode: endNode };\n    };\n    ToastMark.prototype.getRemovedNodeRange = function (extStartNode, extEndNode) {\n        if (!extStartNode ||\n            (extStartNode && isRefDef(extStartNode)) ||\n            (extEndNode && isRefDef(extEndNode))) {\n            return null;\n        }\n        return {\n            id: [extStartNode.id, extEndNode.id],\n            line: [extStartNode.sourcepos[0][0] - 1, extEndNode.sourcepos[1][0] - 1],\n        };\n    };\n    ToastMark.prototype.markDeletedRefMap = function (extStartNode, extEndNode) {\n        var _this = this;\n        if (!isEmptyObj(this.refMap)) {\n            var markDeleted = function (node) {\n                if (isRefDef(node)) {\n                    var refDefState = _this.refMap[node.label];\n                    if (refDefState && node.id === refDefState.id) {\n                        refDefState.unlinked = true;\n                    }\n                }\n            };\n            if (extStartNode) {\n                invokeNextUntil(markDeleted, extStartNode.parent, extEndNode);\n            }\n            if (extEndNode) {\n                invokeNextUntil(markDeleted, extEndNode);\n            }\n        }\n    };\n    ToastMark.prototype.replaceWithNewRefDefState = function (nodes) {\n        var _this = this;\n        if (!isEmptyObj(this.refMap)) {\n            var replaceWith_1 = function (node) {\n                if (isRefDef(node)) {\n                    var label = node.label;\n                    var refDefState = _this.refMap[label];\n                    if (!refDefState || refDefState.unlinked) {\n                        _this.refMap[label] = createRefDefState(node);\n                    }\n                }\n            };\n            nodes.forEach(function (node) {\n                invokeNextUntil(replaceWith_1, node);\n            });\n        }\n    };\n    ToastMark.prototype.replaceWithRefDefCandidate = function () {\n        var _this = this;\n        if (!isEmptyObj(this.refDefCandidateMap)) {\n            iterateObject(this.refDefCandidateMap, function (_, candidate) {\n                var label = candidate.label, sourcepos = candidate.sourcepos;\n                var refDefState = _this.refMap[label];\n                if (!refDefState ||\n                    refDefState.unlinked ||\n                    refDefState.sourcepos[0][0] > sourcepos[0][0]) {\n                    _this.refMap[label] = createRefDefState(candidate);\n                }\n            });\n        }\n    };\n    ToastMark.prototype.getRangeWithRefDef = function (startLine, endLine, startNode, endNode, lineDiff) {\n        if (this.referenceDefinition && !isEmptyObj(this.refMap)) {\n            var prevNode = findChildNodeAtLine(this.root, startLine - 1);\n            var nextNode = findChildNodeAtLine(this.root, endLine + 1);\n            if (prevNode && isRefDef(prevNode) && prevNode !== startNode && prevNode !== endNode) {\n                startNode = prevNode;\n                startLine = startNode.sourcepos[0][0];\n            }\n            if (nextNode && isRefDef(nextNode) && nextNode !== startNode && nextNode !== endNode) {\n                endNode = nextNode;\n                endLine = this.extendEndLine(endNode.sourcepos[1][0] + lineDiff);\n            }\n        }\n        return [startNode, endNode, startLine, endLine];\n    };\n    ToastMark.prototype.parse = function (startPos, endPos, lineDiff) {\n        if (lineDiff === void 0) { lineDiff = 0; }\n        var range = this.getNodeRange(startPos, endPos);\n        var startNode = range[0], endNode = range[1];\n        var startLine = startNode ? Math.min(startNode.sourcepos[0][0], startPos[0]) : startPos[0];\n        var endLine = this.extendEndLine((endNode ? Math.max(endNode.sourcepos[1][0], endPos[0]) : endPos[0]) + lineDiff);\n        var parseResult = this.parseRange.apply(this, this.getRangeWithRefDef(startLine, endLine, startNode, endNode, lineDiff));\n        var newNodes = parseResult.newNodes, extStartNode = parseResult.extStartNode, extEndNode = parseResult.extEndNode;\n        var removedNodeRange = this.getRemovedNodeRange(extStartNode, extEndNode);\n        var nextNode = extEndNode ? extEndNode.next : this.root.firstChild;\n        if (this.referenceDefinition) {\n            this.markDeletedRefMap(extStartNode, extEndNode);\n            this.replaceRangeNodes(extStartNode, extEndNode, newNodes);\n            this.replaceWithNewRefDefState(newNodes);\n        }\n        else {\n            this.replaceRangeNodes(extStartNode, extEndNode, newNodes);\n        }\n        return { nodes: newNodes, removedNodeRange: removedNodeRange, nextNode: nextNode };\n    };\n    ToastMark.prototype.parseRefLink = function () {\n        var _this = this;\n        var result = [];\n        if (!isEmptyObj(this.refMap)) {\n            iterateObject(this.refMap, function (label, value) {\n                if (value.unlinked) {\n                    delete _this.refMap[label];\n                }\n                iterateObject(_this.refLinkCandidateMap, function (_, candidate) {\n                    var node = candidate.node, refLabel = candidate.refLabel;\n                    if (refLabel === label) {\n                        result.push(_this.parse(node.sourcepos[0], node.sourcepos[1]));\n                    }\n                });\n            });\n        }\n        return result;\n    };\n    ToastMark.prototype.removeUnlinkedCandidate = function () {\n        if (!isEmptyObj(this.refDefCandidateMap)) {\n            [this.refLinkCandidateMap, this.refDefCandidateMap].forEach(function (candidateMap) {\n                iterateObject(candidateMap, function (id) {\n                    if (isUnlinked(id)) {\n                        delete candidateMap[id];\n                    }\n                });\n            });\n        }\n    };\n    ToastMark.prototype.editMarkdown = function (startPos, endPos, newText) {\n        var lineDiff = this.updateLineTexts(startPos, endPos, newText);\n        var parseResult = this.parse(startPos, endPos, lineDiff);\n        var editResult = omit(parseResult, 'nextNode');\n        updateNextLineNumbers(parseResult.nextNode, lineDiff);\n        this.updateRootNodeState();\n        var result = [editResult];\n        if (this.referenceDefinition) {\n            this.removeUnlinkedCandidate();\n            this.replaceWithRefDefCandidate();\n            result = result.concat(this.parseRefLink());\n        }\n        this.trigger('change', result);\n        return result;\n    };\n    ToastMark.prototype.getLineTexts = function () {\n        return this.lineTexts;\n    };\n    ToastMark.prototype.getRootNode = function () {\n        return this.root;\n    };\n    ToastMark.prototype.findNodeAtPosition = function (pos) {\n        var node = findNodeAtPosition(this.root, pos);\n        if (!node || node === this.root) {\n            return null;\n        }\n        return node;\n    };\n    ToastMark.prototype.findFirstNodeAtLine = function (line) {\n        return findFirstNodeAtLine(this.root, line);\n    };\n    ToastMark.prototype.on = function (eventName, callback) {\n        this.eventHandlerMap[eventName].push(callback);\n    };\n    ToastMark.prototype.off = function (eventName, callback) {\n        var handlers = this.eventHandlerMap[eventName];\n        var idx = handlers.indexOf(callback);\n        handlers.splice(idx, 1);\n    };\n    ToastMark.prototype.findNodeById = function (id) {\n        return findNodeById(id);\n    };\n    ToastMark.prototype.removeAllNode = function () {\n        removeAllNode();\n    };\n    return ToastMark;\n}());\n\nvar disallowedTags = [\n    'title',\n    'textarea',\n    'style',\n    'xmp',\n    'iframe',\n    'noembed',\n    'noframes',\n    'script',\n    'plaintext',\n];\nvar reDisallowedTag = new RegExp(\"<(/?(?:\" + disallowedTags.join('|') + \")[^>]*>)\", 'ig');\nfunction filterDisallowedTags(str) {\n    if (reDisallowedTag.test(str)) {\n        return str.replace(reDisallowedTag, function (_, group) { return \"&lt;\" + group; });\n    }\n    return str;\n}\n\nvar baseConvertors$1 = {\n    heading: function (node, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: \"h\" + node.level,\n            outerNewLine: true,\n        };\n    },\n    text: function (node) {\n        return {\n            type: 'text',\n            content: node.literal,\n        };\n    },\n    softbreak: function (_, _a) {\n        var options = _a.options;\n        return {\n            type: 'html',\n            content: options.softbreak,\n        };\n    },\n    linebreak: function () {\n        return {\n            type: 'html',\n            content: '<br />\\n',\n        };\n    },\n    emph: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'em',\n        };\n    },\n    strong: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'strong',\n        };\n    },\n    paragraph: function (node, _a) {\n        var _b;\n        var entering = _a.entering;\n        var grandparent = (_b = node.parent) === null || _b === void 0 ? void 0 : _b.parent;\n        if (grandparent && grandparent.type === 'list') {\n            if (grandparent.listData.tight) {\n                return null;\n            }\n        }\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'p',\n            outerNewLine: true,\n        };\n    },\n    thematicBreak: function () {\n        return {\n            type: 'openTag',\n            tagName: 'hr',\n            outerNewLine: true,\n            selfClose: true,\n        };\n    },\n    blockQuote: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'blockquote',\n            outerNewLine: true,\n            innerNewLine: true,\n        };\n    },\n    list: function (node, _a) {\n        var entering = _a.entering;\n        var _b = node.listData, type = _b.type, start = _b.start;\n        var tagName = type === 'bullet' ? 'ul' : 'ol';\n        var attributes = {};\n        if (tagName === 'ol' && start !== null && start !== 1) {\n            attributes.start = start.toString();\n        }\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: tagName,\n            attributes: attributes,\n            outerNewLine: true,\n        };\n    },\n    item: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'li',\n            outerNewLine: true,\n        };\n    },\n    htmlInline: function (node, _a) {\n        var options = _a.options;\n        var content = options.tagFilter ? filterDisallowedTags(node.literal) : node.literal;\n        return { type: 'html', content: content };\n    },\n    htmlBlock: function (node, _a) {\n        var options = _a.options;\n        var content = options.tagFilter ? filterDisallowedTags(node.literal) : node.literal;\n        if (options.nodeId) {\n            return [\n                { type: 'openTag', tagName: 'div', outerNewLine: true },\n                { type: 'html', content: content },\n                { type: 'closeTag', tagName: 'div', outerNewLine: true },\n            ];\n        }\n        return { type: 'html', content: content, outerNewLine: true };\n    },\n    code: function (node) {\n        return [\n            { type: 'openTag', tagName: 'code' },\n            { type: 'text', content: node.literal },\n            { type: 'closeTag', tagName: 'code' },\n        ];\n    },\n    codeBlock: function (node) {\n        var infoStr = node.info;\n        var infoWords = infoStr ? infoStr.split(/\\s+/) : [];\n        var codeClassNames = [];\n        if (infoWords.length > 0 && infoWords[0].length > 0) {\n            codeClassNames.push(\"language-\" + escapeXml(infoWords[0]));\n        }\n        return [\n            { type: 'openTag', tagName: 'pre', outerNewLine: true },\n            { type: 'openTag', tagName: 'code', classNames: codeClassNames },\n            { type: 'text', content: node.literal },\n            { type: 'closeTag', tagName: 'code' },\n            { type: 'closeTag', tagName: 'pre', outerNewLine: true },\n        ];\n    },\n    link: function (node, _a) {\n        var entering = _a.entering;\n        if (entering) {\n            var _b = node, title = _b.title, destination = _b.destination;\n            return {\n                type: 'openTag',\n                tagName: 'a',\n                attributes: __assign({ href: escapeXml(destination) }, (title && { title: escapeXml(title) })),\n            };\n        }\n        return { type: 'closeTag', tagName: 'a' };\n    },\n    image: function (node, _a) {\n        var getChildrenText = _a.getChildrenText, skipChildren = _a.skipChildren;\n        var _b = node, title = _b.title, destination = _b.destination;\n        skipChildren();\n        return {\n            type: 'openTag',\n            tagName: 'img',\n            selfClose: true,\n            attributes: __assign({ src: escapeXml(destination), alt: getChildrenText(node) }, (title && { title: escapeXml(title) })),\n        };\n    },\n    customBlock: function (node, context, convertors) {\n        var info = node.info.trim().toLowerCase();\n        var customConvertor = convertors[info];\n        if (customConvertor) {\n            try {\n                return customConvertor(node, context);\n            }\n            catch (e) {\n                console.warn(\"[@toast-ui/editor] - The error occurred when \" + info + \" block node was parsed in markdown renderer: \" + e);\n            }\n        }\n        return [\n            { type: 'openTag', tagName: 'div', outerNewLine: true },\n            { type: 'text', content: node.literal },\n            { type: 'closeTag', tagName: 'div', outerNewLine: true },\n        ];\n    },\n    frontMatter: function (node) {\n        return [\n            {\n                type: 'openTag',\n                tagName: 'div',\n                outerNewLine: true,\n                // Because front matter is metadata, it should not be render.\n                attributes: { style: 'white-space: pre; display: none;' },\n            },\n            { type: 'text', content: node.literal },\n            { type: 'closeTag', tagName: 'div', outerNewLine: true },\n        ];\n    },\n    customInline: function (node, context, convertors) {\n        var _a = node, info = _a.info, firstChild = _a.firstChild;\n        var nomalizedInfo = info.trim().toLowerCase();\n        var customConvertor = convertors[nomalizedInfo];\n        var entering = context.entering;\n        if (customConvertor) {\n            try {\n                return customConvertor(node, context);\n            }\n            catch (e) {\n                console.warn(\"[@toast-ui/editor] - The error occurred when \" + nomalizedInfo + \" inline node was parsed in markdown renderer: \" + e);\n            }\n        }\n        return entering\n            ? [\n                { type: 'openTag', tagName: 'span' },\n                { type: 'text', content: \"$$\" + info + (firstChild ? ' ' : '') },\n            ]\n            : [\n                { type: 'text', content: '$$' },\n                { type: 'closeTag', tagName: 'span' },\n            ];\n    },\n};\n\nvar gfmConvertors = {\n    strike: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'del',\n        };\n    },\n    item: function (node, _a) {\n        var entering = _a.entering;\n        var _b = node.listData, checked = _b.checked, task = _b.task;\n        if (entering) {\n            var itemTag = {\n                type: 'openTag',\n                tagName: 'li',\n                outerNewLine: true,\n            };\n            if (task) {\n                return [\n                    itemTag,\n                    {\n                        type: 'openTag',\n                        tagName: 'input',\n                        selfClose: true,\n                        attributes: __assign(__assign({}, (checked && { checked: '' })), { disabled: '', type: 'checkbox' }),\n                    },\n                    {\n                        type: 'text',\n                        content: ' ',\n                    },\n                ];\n            }\n            return itemTag;\n        }\n        return {\n            type: 'closeTag',\n            tagName: 'li',\n            outerNewLine: true,\n        };\n    },\n    table: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'table',\n            outerNewLine: true,\n        };\n    },\n    tableHead: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'thead',\n            outerNewLine: true,\n        };\n    },\n    tableBody: function (_, _a) {\n        var entering = _a.entering;\n        return {\n            type: entering ? 'openTag' : 'closeTag',\n            tagName: 'tbody',\n            outerNewLine: true,\n        };\n    },\n    tableRow: function (node, _a) {\n        var entering = _a.entering;\n        if (entering) {\n            return {\n                type: 'openTag',\n                tagName: 'tr',\n                outerNewLine: true,\n            };\n        }\n        var result = [];\n        if (node.lastChild) {\n            var columnLen = node.parent.parent.columns.length;\n            var lastColIdx = node.lastChild.endIdx;\n            for (var i = lastColIdx + 1; i < columnLen; i += 1) {\n                result.push({\n                    type: 'openTag',\n                    tagName: 'td',\n                    outerNewLine: true,\n                }, {\n                    type: 'closeTag',\n                    tagName: 'td',\n                    outerNewLine: true,\n                });\n            }\n        }\n        result.push({\n            type: 'closeTag',\n            tagName: 'tr',\n            outerNewLine: true,\n        });\n        return result;\n    },\n    tableCell: function (node, _a) {\n        var entering = _a.entering;\n        if (node.ignored) {\n            return {\n                type: 'text',\n                content: '',\n            };\n        }\n        var tablePart = node.parent.parent;\n        var tagName = tablePart.type === 'tableHead' ? 'th' : 'td';\n        var table = tablePart.parent;\n        var columnInfo = table.columns[node.startIdx];\n        var attributes = (columnInfo === null || columnInfo === void 0 ? void 0 : columnInfo.align) ? { align: columnInfo.align } : null;\n        if (entering) {\n            return __assign({ type: 'openTag', tagName: tagName, outerNewLine: true }, (attributes && { attributes: attributes }));\n        }\n        return {\n            type: 'closeTag',\n            tagName: tagName,\n            outerNewLine: true,\n        };\n    },\n};\n\nvar defaultOptions = {\n    softbreak: '\\n',\n    gfm: false,\n    tagFilter: false,\n    nodeId: false,\n};\nfunction getChildrenText(node) {\n    var buffer = [];\n    var walker = node.walker();\n    var event = null;\n    while ((event = walker.next())) {\n        var node_1 = event.node;\n        if (node_1.type === 'text') {\n            buffer.push(node_1.literal);\n        }\n    }\n    return buffer.join('');\n}\nvar Renderer = /** @class */ (function () {\n    function Renderer(customOptions) {\n        this.buffer = [];\n        this.options = __assign(__assign({}, defaultOptions), customOptions);\n        this.convertors = this.createConvertors();\n        delete this.options.convertors;\n    }\n    Renderer.prototype.createConvertors = function () {\n        var convertors = __assign({}, baseConvertors$1);\n        if (this.options.gfm) {\n            convertors = __assign(__assign({}, convertors), gfmConvertors);\n        }\n        if (this.options.convertors) {\n            var customConvertors_1 = this.options.convertors;\n            var nodeTypes = Object.keys(customConvertors_1);\n            var defaultConvertors_1 = __assign(__assign({}, baseConvertors$1), gfmConvertors);\n            nodeTypes.forEach(function (nodeType) {\n                var orgConvertor = convertors[nodeType];\n                var convertor = customConvertors_1[nodeType];\n                var convertorType = Object.keys(defaultConvertors_1).indexOf(nodeType) === -1\n                    ? nodeType.toLowerCase()\n                    : nodeType;\n                if (orgConvertor) {\n                    convertors[convertorType] = function (node, context, convertors) {\n                        context.origin = function () { return orgConvertor(node, context, convertors); };\n                        return convertor(node, context);\n                    };\n                }\n                else {\n                    convertors[convertorType] = convertor;\n                }\n            });\n        }\n        return convertors;\n    };\n    Renderer.prototype.getConvertors = function () {\n        return this.convertors;\n    };\n    Renderer.prototype.getOptions = function () {\n        return this.options;\n    };\n    Renderer.prototype.render = function (rootNode) {\n        var _this = this;\n        this.buffer = [];\n        var walker = rootNode.walker();\n        var event = null;\n        var _loop_1 = function () {\n            var node = event.node, entering = event.entering;\n            var convertor = this_1.convertors[node.type];\n            if (!convertor) {\n                return \"continue\";\n            }\n            var skipped = false;\n            var context = {\n                entering: entering,\n                leaf: !isContainer$1(node),\n                options: this_1.options,\n                getChildrenText: getChildrenText,\n                skipChildren: function () {\n                    skipped = true;\n                },\n            };\n            var converted = isCustomBlock(node) || isCustomInline(node)\n                ? convertor(node, context, this_1.convertors)\n                : convertor(node, context);\n            if (converted) {\n                var htmlNodes = Array.isArray(converted) ? converted : [converted];\n                htmlNodes.forEach(function (htmlNode, index) {\n                    if (htmlNode.type === 'openTag' && _this.options.nodeId && index === 0) {\n                        if (!htmlNode.attributes) {\n                            htmlNode.attributes = {};\n                        }\n                        htmlNode.attributes['data-nodeid'] = String(node.id);\n                    }\n                    _this.renderHTMLNode(htmlNode);\n                });\n                if (skipped) {\n                    walker.resumeAt(node, false);\n                    walker.next();\n                }\n            }\n        };\n        var this_1 = this;\n        while ((event = walker.next())) {\n            _loop_1();\n        }\n        this.addNewLine();\n        return this.buffer.join('');\n    };\n    Renderer.prototype.renderHTMLNode = function (node) {\n        switch (node.type) {\n            case 'openTag':\n            case 'closeTag':\n                this.renderElementNode(node);\n                break;\n            case 'text':\n                this.renderTextNode(node);\n                break;\n            case 'html':\n                this.renderRawHtmlNode(node);\n                break;\n            // no-default-case\n        }\n    };\n    Renderer.prototype.generateOpenTagString = function (node) {\n        var _this = this;\n        var tagName = node.tagName, classNames = node.classNames, attributes = node.attributes;\n        this.buffer.push(\"<\" + tagName);\n        if (classNames && classNames.length > 0) {\n            this.buffer.push(\" class=\\\"\" + classNames.join(' ') + \"\\\"\");\n        }\n        if (attributes) {\n            Object.keys(attributes).forEach(function (attrName) {\n                var attrValue = attributes[attrName];\n                _this.buffer.push(\" \" + attrName + \"=\\\"\" + attrValue + \"\\\"\");\n            });\n        }\n        if (node.selfClose) {\n            this.buffer.push(' /');\n        }\n        this.buffer.push('>');\n    };\n    Renderer.prototype.generateCloseTagString = function (_a) {\n        var tagName = _a.tagName;\n        this.buffer.push(\"</\" + tagName + \">\");\n    };\n    Renderer.prototype.addNewLine = function () {\n        if (this.buffer.length && last(last(this.buffer)) !== '\\n') {\n            this.buffer.push('\\n');\n        }\n    };\n    Renderer.prototype.addOuterNewLine = function (node) {\n        if (node.outerNewLine) {\n            this.addNewLine();\n        }\n    };\n    Renderer.prototype.addInnerNewLine = function (node) {\n        if (node.innerNewLine) {\n            this.addNewLine();\n        }\n    };\n    Renderer.prototype.renderTextNode = function (node) {\n        this.buffer.push(escapeXml(node.content));\n    };\n    Renderer.prototype.renderRawHtmlNode = function (node) {\n        this.addOuterNewLine(node);\n        this.buffer.push(node.content);\n        this.addOuterNewLine(node);\n    };\n    Renderer.prototype.renderElementNode = function (node) {\n        if (node.type === 'openTag') {\n            this.addOuterNewLine(node);\n            this.generateOpenTagString(node);\n            if (node.selfClose) {\n                this.addOuterNewLine(node);\n            }\n            else {\n                this.addInnerNewLine(node);\n            }\n        }\n        else {\n            this.addInnerNewLine(node);\n            this.generateCloseTagString(node);\n            this.addOuterNewLine(node);\n        }\n    };\n    return Renderer;\n}());\n\n/*! @license DOMPurify 2.3.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.3/LICENSE */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar hasOwnProperty = Object.hasOwnProperty,\n    setPrototypeOf = Object.setPrototypeOf,\n    isFrozen = Object.isFrozen,\n    getPrototypeOf = Object.getPrototypeOf,\n    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar freeze = Object.freeze,\n    seal = Object.seal,\n    create = Object.create; // eslint-disable-line import/no-mutable-exports\n\nvar _ref = typeof Reflect !== 'undefined' && Reflect,\n    apply = _ref.apply,\n    construct = _ref.construct;\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n  };\n}\n\nvar arrayForEach = unapply(Array.prototype.forEach);\nvar arrayPop = unapply(Array.prototype.pop);\nvar arrayPush = unapply(Array.prototype.push);\n\nvar stringToLowerCase = unapply(String.prototype.toLowerCase);\nvar stringMatch = unapply(String.prototype.match);\nvar stringReplace = unapply(String.prototype.replace);\nvar stringIndexOf = unapply(String.prototype.indexOf);\nvar stringTrim = unapply(String.prototype.trim);\n\nvar regExpTest = unapply(RegExp.prototype.test);\n\nvar typeErrorCreate = unconstruct(TypeError);\n\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = create(null);\n\n  var property = void 0;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    var desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nvar html$2 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n\nvar svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nvar svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'feimage', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n\nvar mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nvar mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n\nvar text = freeze(['#text']);\n\nvar html$1$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n\nvar svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\nvar mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\nvar xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html$$1) {\n        return html$$1;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '2.3.3';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      Element = window.Element,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      trustedTypes = window.trustedTypes;\n\n\n  var ElementPrototype = Element.prototype;\n\n  var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      createDocumentFragment = _document.createDocumentFragment,\n      getElementsByTagName = _document.getElementsByTagName;\n  var importNode = originalDocument.importNode;\n\n\n  var documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html$2), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify.\n   *\n   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n   * might cause XSS from attacks hidden in closed shadowroots in case the browser\n   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n   */\n  var RETURN_DOM_IMPORT = true;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  var RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = null;\n  var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = null;\n  var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = null;\n  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  var NAMESPACE = HTML_NAMESPACE;\n  var IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  var PARSER_MEDIA_TYPE = void 0;\n  var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  var transformCaseFunc = void 0;\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? function (x) {\n      return x;\n    } : stringToLowerCase;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$2);\n        addToSet(ALLOWED_ATTR, html$1$1);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n\n  var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  var ALL_SVG_TAGS = addToSet({}, svg);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n\n  var ALL_MATHML_TAGS = addToSet({}, mathMl);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  var _checkValidNamespace = function _checkValidNamespace(element) {\n    var parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template'\n      };\n    }\n\n    var tagName = stringToLowerCase(element.tagName);\n    var parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var leadingWhitespace = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n\n    var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    var body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function') {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(object) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          var childCount = childNodes.length;\n\n          for (var i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n      content = stringReplace(content, ERB_EXPR$$1, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n\n      value = stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n        value = stringReplace(value, ERB_EXPR$$1, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) ; else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    var lcTag = transformCaseFunc(tag);\n    var lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nvar CAN_BE_WHITE_TAG_LIST = ['iframe', 'embed'];\nvar whiteTagList = [];\nfunction registerTagWhitelistIfPossible(tagName) {\n    if (includes(CAN_BE_WHITE_TAG_LIST, tagName)) {\n        whiteTagList.push(tagName.toLowerCase());\n    }\n}\nfunction sanitizeHTML(html, options) {\n    return purify.sanitize(html, __assign$1({ ADD_TAGS: whiteTagList, ADD_ATTR: ['rel', 'target', 'hreflang', 'type'], FORBID_TAGS: [\n            'input',\n            'script',\n            'textarea',\n            'form',\n            'button',\n            'select',\n            'meta',\n            'style',\n            'link',\n            'title',\n            'object',\n            'base',\n        ] }, options));\n}\n\nfunction getChildrenHTML(node, typeName) {\n    return node\n        .literal.replace(new RegExp(\"(<\\\\s*\" + typeName + \"[^>]*>)|(</\" + typeName + \"\\\\s*[>])\", 'ig'), '')\n        .trim();\n}\nfunction getHTMLAttrsByHTMLString(html) {\n    html = html.match(reHTMLTag)[0];\n    var attrs = html.match(new RegExp(ATTRIBUTE$1, 'g'));\n    return attrs\n        ? attrs.reduce(function (acc, attr) {\n            var _a = attr.trim().split('='), name = _a[0], values = _a.slice(1);\n            if (values.length) {\n                acc[name] = values.join('=').replace(/'|\"/g, '').trim();\n            }\n            return acc;\n        }, {})\n        : {};\n}\nfunction getHTMLAttrs(dom) {\n    return toArray_1(dom.attributes).reduce(function (acc, attr) {\n        acc[attr.nodeName] = attr.nodeValue;\n        return acc;\n    }, {});\n}\nfunction sanitizeDOM(node, typeName, sanitizer, wwToDOMAdaptor) {\n    var dom = wwToDOMAdaptor.getToDOMNode(typeName)(node);\n    var html = sanitizer(dom.outerHTML);\n    var container = document.createElement('div');\n    container.innerHTML = html;\n    dom = container.firstChild;\n    var htmlAttrs = getHTMLAttrs(dom);\n    return { dom: dom, htmlAttrs: htmlAttrs };\n}\nvar schemaFactory = {\n    htmlBlock: function (typeName, sanitizeHTML, wwToDOMAdaptor) {\n        return {\n            atom: true,\n            content: 'block+',\n            group: 'block',\n            attrs: {\n                htmlAttrs: { default: {} },\n                childrenHTML: { default: '' },\n                htmlBlock: { default: true },\n            },\n            parseDOM: [\n                {\n                    tag: typeName,\n                    getAttrs: function (dom) {\n                        return {\n                            htmlAttrs: getHTMLAttrs(dom),\n                            childrenHTML: dom.innerHTML,\n                        };\n                    },\n                },\n            ],\n            toDOM: function (node) {\n                var _a = sanitizeDOM(node, typeName, sanitizeHTML, wwToDOMAdaptor), dom = _a.dom, htmlAttrs = _a.htmlAttrs;\n                htmlAttrs.class = htmlAttrs.class ? htmlAttrs.class + \" html-block\" : 'html-block';\n                return __spreadArray$1([typeName, htmlAttrs], toArray_1(dom.childNodes));\n            },\n        };\n    },\n    htmlInline: function (typeName, sanitizeHTML, wwToDOMAdaptor) {\n        return {\n            attrs: {\n                htmlAttrs: { default: {} },\n                htmlInline: { default: true },\n            },\n            parseDOM: [\n                {\n                    tag: typeName,\n                    getAttrs: function (dom) {\n                        return {\n                            htmlAttrs: getHTMLAttrs(dom),\n                        };\n                    },\n                },\n            ],\n            toDOM: function (node) {\n                var htmlAttrs = sanitizeDOM(node, typeName, sanitizeHTML, wwToDOMAdaptor).htmlAttrs;\n                return [typeName, htmlAttrs, 0];\n            },\n        };\n    },\n};\nfunction createHTMLSchemaMap(convertorMap, sanitizeHTML, wwToDOMAdaptor) {\n    var htmlSchemaMap = { nodes: {}, marks: {} };\n    ['htmlBlock', 'htmlInline'].forEach(function (htmlType) {\n        if (convertorMap[htmlType]) {\n            Object.keys(convertorMap[htmlType]).forEach(function (type) {\n                var targetType = htmlType === 'htmlBlock' ? 'nodes' : 'marks';\n                // register tag white list for preventing to remove the html in sanitizer\n                registerTagWhitelistIfPossible(type);\n                htmlSchemaMap[targetType][type] = schemaFactory[htmlType](type, sanitizeHTML, wwToDOMAdaptor);\n            });\n        }\n    });\n    return htmlSchemaMap;\n}\n\nvar reCloseTag = /^\\s*<\\s*\\//;\nvar baseConvertors = {\n    paragraph: function (_, _a) {\n        var entering = _a.entering, origin = _a.origin, options = _a.options;\n        if (options.nodeId) {\n            return {\n                type: entering ? 'openTag' : 'closeTag',\n                outerNewLine: true,\n                tagName: 'p',\n            };\n        }\n        return origin();\n    },\n    softbreak: function (node) {\n        var isPrevNodeHTML = node.prev && node.prev.type === 'htmlInline';\n        var isPrevBR = isPrevNodeHTML && /<br ?\\/?>/.test(node.prev.literal);\n        var content = isPrevBR ? '\\n' : '<br>\\n';\n        return { type: 'html', content: content };\n    },\n    item: function (node, _a) {\n        var entering = _a.entering;\n        if (entering) {\n            var attributes = {};\n            var classNames = [];\n            if (node.listData.task) {\n                attributes['data-task'] = '';\n                classNames.push('task-list-item');\n                if (node.listData.checked) {\n                    classNames.push('checked');\n                    attributes['data-task-checked'] = '';\n                }\n            }\n            return {\n                type: 'openTag',\n                tagName: 'li',\n                classNames: classNames,\n                attributes: attributes,\n                outerNewLine: true,\n            };\n        }\n        return {\n            type: 'closeTag',\n            tagName: 'li',\n            outerNewLine: true,\n        };\n    },\n    code: function (node) {\n        var attributes = { 'data-backticks': String(node.tickCount) };\n        return [\n            { type: 'openTag', tagName: 'code', attributes: attributes },\n            { type: 'text', content: node.literal },\n            { type: 'closeTag', tagName: 'code' },\n        ];\n    },\n    codeBlock: function (node) {\n        var _a = node, fenceLength = _a.fenceLength, info = _a.info;\n        var infoWords = info ? info.split(/\\s+/) : [];\n        var preClasses = [];\n        var codeAttrs = {};\n        if (fenceLength > 3) {\n            codeAttrs['data-backticks'] = fenceLength;\n        }\n        if (infoWords.length > 0 && infoWords[0].length > 0) {\n            var lang = infoWords[0];\n            preClasses.push(\"lang-\" + lang);\n            codeAttrs['data-language'] = lang;\n        }\n        return [\n            { type: 'openTag', tagName: 'pre', classNames: preClasses },\n            { type: 'openTag', tagName: 'code', attributes: codeAttrs },\n            { type: 'text', content: node.literal },\n            { type: 'closeTag', tagName: 'code' },\n            { type: 'closeTag', tagName: 'pre' },\n        ];\n    },\n    customInline: function (node, _a) {\n        var origin = _a.origin, entering = _a.entering, skipChildren = _a.skipChildren;\n        var info = node.info;\n        if (info.indexOf('widget') !== -1 && entering) {\n            skipChildren();\n            var content = getWidgetContent(node);\n            var htmlInline = widgetToDOM(info, content).outerHTML;\n            return [\n                { type: 'openTag', tagName: 'span', classNames: ['tui-widget'] },\n                { type: 'html', content: htmlInline },\n                { type: 'closeTag', tagName: 'span' },\n            ];\n        }\n        return origin();\n    },\n};\nfunction getHTMLRenderConvertors(linkAttributes, customConvertors) {\n    var convertors = __assign$1({}, baseConvertors);\n    if (linkAttributes) {\n        convertors.link = function (_, _a) {\n            var entering = _a.entering, origin = _a.origin;\n            var result = origin();\n            if (entering) {\n                result.attributes = __assign$1(__assign$1({}, result.attributes), linkAttributes);\n            }\n            return result;\n        };\n    }\n    if (customConvertors) {\n        Object.keys(customConvertors).forEach(function (nodeType) {\n            var orgConvertor = convertors[nodeType];\n            var customConvertor = customConvertors[nodeType];\n            if (orgConvertor && isFunction_1(customConvertor)) {\n                convertors[nodeType] = function (node, context) {\n                    var newContext = __assign$1({}, context);\n                    newContext.origin = function () { return orgConvertor(node, context); };\n                    return customConvertor(node, newContext);\n                };\n            }\n            else if (includes(['htmlBlock', 'htmlInline'], nodeType) && !isFunction_1(customConvertor)) {\n                convertors[nodeType] = function (node, context) {\n                    var matched = node.literal.match(reHTMLTag);\n                    if (matched) {\n                        var rootHTML = matched[0], openTagName = matched[1], closeTagName = matched[3];\n                        var typeName = (openTagName || closeTagName).toLowerCase();\n                        var htmlConvertor = customConvertor[typeName];\n                        var childrenHTML = getChildrenHTML(node, typeName);\n                        if (htmlConvertor) {\n                            // copy for preventing to overwrite the originial property\n                            var newNode = __assign$1({}, node);\n                            newNode.attrs = getHTMLAttrsByHTMLString(rootHTML);\n                            newNode.childrenHTML = childrenHTML;\n                            newNode.type = typeName;\n                            context.entering = !reCloseTag.test(node.literal);\n                            return htmlConvertor(newNode, context);\n                        }\n                    }\n                    return context.origin();\n                };\n            }\n            else {\n                convertors[nodeType] = customConvertor;\n            }\n        });\n    }\n    return convertors;\n}\n\nvar nestableTypes = ['list', 'item', 'blockQuote'];\nvar nestableTagNames = ['UL', 'OL', 'BLOCKQUOTE'];\nfunction isBlankLine(doc, index) {\n    var _a;\n    var pmNode = doc.child(index);\n    return !pmNode.childCount || (pmNode.childCount === 1 && !((_a = pmNode.firstChild.text) === null || _a === void 0 ? void 0 : _a.trim()));\n}\nfunction getEditorRangeHeightInfo(doc, mdNode, children) {\n    var start = getMdStartLine(mdNode) - 1;\n    var end = getMdEndLine(mdNode) - 1;\n    var rect = children[start].getBoundingClientRect();\n    var height = children[end].offsetTop -\n        children[start].offsetTop +\n        children[end].clientHeight;\n    return {\n        height: height <= 0\n            ? children[start].clientHeight\n            : height + getBlankLinesHeight(doc, children, Math.min(end + 1, doc.childCount - 1)),\n        rect: rect,\n    };\n}\nfunction getBlankLinesHeight(doc, children, start) {\n    var end = doc.childCount - 1;\n    var height = 0;\n    while (start <= end && isBlankLine(doc, start)) {\n        height += children[start].clientHeight;\n        start += 1;\n    }\n    return height;\n}\nfunction findAncestorHavingId(el, root) {\n    while (!el.getAttribute('data-nodeid') && el.parentElement !== root) {\n        el = el.parentElement;\n    }\n    return el;\n}\nfunction getTotalOffsetTop(el, root) {\n    var offsetTop = 0;\n    while (el && el !== root) {\n        if (!includes(nestableTagNames, el.tagName)) {\n            offsetTop += el.offsetTop;\n        }\n        if (el.offsetParent === root.offsetParent) {\n            break;\n        }\n        el = el.parentElement;\n    }\n    return offsetTop;\n}\nfunction findAdjacentElementToScrollTop(scrollTop, root) {\n    var el = root;\n    var prev = null;\n    while (el) {\n        var firstElementChild = el.firstElementChild;\n        if (!firstElementChild) {\n            break;\n        }\n        var lastSibling = findLastSiblingElementToScrollTop(firstElementChild, scrollTop, getTotalOffsetTop(el, root));\n        prev = el;\n        el = lastSibling;\n    }\n    var adjacentEl = el || prev;\n    return adjacentEl === root ? null : adjacentEl;\n}\nfunction findLastSiblingElementToScrollTop(el, scrollTop, offsetTop) {\n    if (el && scrollTop > offsetTop + el.offsetTop) {\n        return (findLastSiblingElementToScrollTop(el.nextElementSibling, scrollTop, offsetTop) || el);\n    }\n    return null;\n}\nfunction getAdditionalPos(scrollTop, offsetTop, height, targetNodeHeight) {\n    var ratio = Math.min((scrollTop - offsetTop) / height, 1);\n    return ratio * targetNodeHeight;\n}\nfunction getParentNodeObj(previewContent, mdNode) {\n    var el = previewContent.querySelector(\"[data-nodeid=\\\"\" + mdNode.id + \"\\\"]\");\n    while (!el || isStyledInlineNode(mdNode)) {\n        mdNode = mdNode.parent;\n        el = previewContent.querySelector(\"[data-nodeid=\\\"\" + mdNode.id + \"\\\"]\");\n    }\n    return getNonNestableNodeObj({ mdNode: mdNode, el: el });\n}\nfunction getNonNestableNodeObj(_a) {\n    var mdNode = _a.mdNode, el = _a.el;\n    while ((includes(nestableTypes, mdNode.type) || mdNode.type === 'table') && mdNode.firstChild) {\n        mdNode = mdNode.firstChild;\n        el = el.firstElementChild;\n    }\n    return { mdNode: mdNode, el: el };\n}\n\nvar offsetInfoMap = {};\nfunction setHeight(id, height) {\n    offsetInfoMap[id] = offsetInfoMap[id] || {};\n    offsetInfoMap[id].height = height;\n}\nfunction setOffsetTop(id, offsetTop) {\n    offsetInfoMap[id] = offsetInfoMap[id] || {};\n    offsetInfoMap[id].offsetTop = offsetTop;\n}\nfunction getHeight(id) {\n    return offsetInfoMap[id] && offsetInfoMap[id].height;\n}\nfunction getOffsetTop(id) {\n    return offsetInfoMap[id] && offsetInfoMap[id].offsetTop;\n}\nfunction removeOffsetInfoByNode(node) {\n    if (node) {\n        delete offsetInfoMap[Number(node.getAttribute('data-nodeid'))];\n        toArray_1(node.children).forEach(function (child) {\n            removeOffsetInfoByNode(child);\n        });\n    }\n}\nfunction getAndSaveOffsetInfo(node, root, mdNodeId) {\n    var cachedHeight = getHeight(mdNodeId);\n    var cachedTop = getOffsetTop(mdNodeId);\n    var nodeHeight = cachedHeight || node.clientHeight;\n    var offsetTop = cachedTop || getTotalOffsetTop(node, root) || node.offsetTop;\n    if (!cachedHeight) {\n        setHeight(mdNodeId, nodeHeight);\n    }\n    if (!cachedTop) {\n        setOffsetTop(mdNodeId, offsetTop);\n    }\n    return { nodeHeight: nodeHeight, offsetTop: offsetTop };\n}\n\nvar CLASS_HIGHLIGHT = cls('md-preview-highlight');\nfunction findTableCell(tableRow, chOffset) {\n    var cell = tableRow.firstChild;\n    while (cell && cell.next) {\n        if (getMdStartCh(cell.next) > chOffset + 1) {\n            break;\n        }\n        cell = cell.next;\n    }\n    return cell;\n}\n/**\n * Class Markdown Preview\n * @param {HTMLElement} el - base element\n * @param {eventEmitter} eventEmitter - event manager\n * @param {object} options\n * @param {boolean} options.isViewer - true for view-only mode\n * @param {boolean} options.highlight - true for using live-highlight feature\n * @param {object} opitons.linkAttributes - attributes for link element\n * @param {object} opitons.customHTMLRenderer - map of custom HTML render functions\n *\n * @ignore\n */\nvar MarkdownPreview = /** @class */ (function () {\n    function MarkdownPreview(eventEmitter, options) {\n        var el = document.createElement('div');\n        this.el = el;\n        this.eventEmitter = eventEmitter;\n        this.isViewer = !!options.isViewer;\n        this.el.className = cls('md-preview');\n        var linkAttributes = options.linkAttributes, customHTMLRenderer = options.customHTMLRenderer, sanitizer = options.sanitizer, _a = options.highlight, highlight = _a === void 0 ? false : _a;\n        this.renderer = new Renderer({\n            gfm: true,\n            nodeId: true,\n            convertors: getHTMLRenderConvertors(linkAttributes, customHTMLRenderer),\n        });\n        this.cursorNodeId = null;\n        this.sanitizer = sanitizer;\n        this.initEvent(highlight);\n        this.initContentSection();\n        // To prevent overflowing contents in the viewer\n        if (this.isViewer) {\n            this.previewContent.style.overflowWrap = 'break-word';\n        }\n    }\n    MarkdownPreview.prototype.initContentSection = function () {\n        this.previewContent = createElementWith(\"<div class=\\\"\" + cls('contents') + \"\\\"></div>\");\n        if (!this.isViewer) {\n            this.el.appendChild(this.previewContent);\n        }\n    };\n    MarkdownPreview.prototype.toggleActive = function (active) {\n        toggleClass(this.el, 'active', active);\n    };\n    MarkdownPreview.prototype.initEvent = function (highlight) {\n        var _this = this;\n        this.eventEmitter.listen('updatePreview', this.update.bind(this));\n        if (this.isViewer) {\n            return;\n        }\n        if (highlight) {\n            this.eventEmitter.listen('changeToolbarState', function (_a) {\n                var mdNode = _a.mdNode, cursorPos = _a.cursorPos;\n                _this.updateCursorNode(mdNode, cursorPos);\n            });\n            this.eventEmitter.listen('blur', function () {\n                _this.removeHighlight();\n            });\n        }\n        on_1(this.el, 'scroll', function (event) {\n            _this.eventEmitter.emit('scroll', 'preview', findAdjacentElementToScrollTop(event.target.scrollTop, _this.previewContent));\n        });\n        this.eventEmitter.listen('changePreviewTabPreview', function () { return _this.toggleActive(true); });\n        this.eventEmitter.listen('changePreviewTabWrite', function () { return _this.toggleActive(false); });\n    };\n    MarkdownPreview.prototype.removeHighlight = function () {\n        if (this.cursorNodeId) {\n            var currentEl = this.getElementByNodeId(this.cursorNodeId);\n            if (currentEl) {\n                removeClass_1(currentEl, CLASS_HIGHLIGHT);\n            }\n        }\n    };\n    MarkdownPreview.prototype.updateCursorNode = function (cursorNode, cursorPos) {\n        if (cursorNode) {\n            cursorNode = findClosestNode(cursorNode, function (mdNode) { return !isInlineNode$1(mdNode); });\n            if (cursorNode.type === 'tableRow') {\n                cursorNode = findTableCell(cursorNode, cursorPos[1]);\n            }\n            else if (cursorNode.type === 'tableBody') {\n                // empty line next to table\n                cursorNode = null;\n            }\n        }\n        var cursorNodeId = cursorNode ? cursorNode.id : null;\n        if (this.cursorNodeId === cursorNodeId) {\n            return;\n        }\n        var oldEL = this.getElementByNodeId(this.cursorNodeId);\n        var newEL = this.getElementByNodeId(cursorNodeId);\n        if (oldEL) {\n            removeClass_1(oldEL, CLASS_HIGHLIGHT);\n        }\n        if (newEL) {\n            addClass_1(newEL, CLASS_HIGHLIGHT);\n        }\n        this.cursorNodeId = cursorNodeId;\n    };\n    MarkdownPreview.prototype.getElementByNodeId = function (nodeId) {\n        return nodeId\n            ? this.previewContent.querySelector(\"[data-nodeid=\\\"\" + nodeId + \"\\\"]\")\n            : null;\n    };\n    MarkdownPreview.prototype.update = function (changed) {\n        var _this = this;\n        changed.forEach(function (editResult) { return _this.replaceRangeNodes(editResult); });\n        this.eventEmitter.emit('afterPreviewRender', this);\n    };\n    MarkdownPreview.prototype.replaceRangeNodes = function (editResult) {\n        var _this = this;\n        var nodes = editResult.nodes, removedNodeRange = editResult.removedNodeRange;\n        var contentEl = this.previewContent;\n        var newHtml = this.eventEmitter.emitReduce('beforePreviewRender', this.sanitizer(nodes.map(function (node) { return _this.renderer.render(node); }).join('')));\n        if (!removedNodeRange) {\n            contentEl.insertAdjacentHTML('afterbegin', newHtml);\n        }\n        else {\n            var _a = removedNodeRange.id, startNodeId = _a[0], endNodeId = _a[1];\n            var startEl = this.getElementByNodeId(startNodeId);\n            var endEl = this.getElementByNodeId(endNodeId);\n            if (startEl) {\n                startEl.insertAdjacentHTML('beforebegin', newHtml);\n                var el = startEl;\n                while (el && el !== endEl) {\n                    var nextEl = el.nextElementSibling;\n                    removeNode$1(el);\n                    removeOffsetInfoByNode(el);\n                    el = nextEl;\n                }\n                if (el === null || el === void 0 ? void 0 : el.parentNode) {\n                    removeNode$1(el);\n                    removeOffsetInfoByNode(el);\n                }\n            }\n        }\n    };\n    MarkdownPreview.prototype.getRenderer = function () {\n        return this.renderer;\n    };\n    MarkdownPreview.prototype.destroy = function () {\n        off_1(this.el, 'scroll');\n        this.el = null;\n    };\n    MarkdownPreview.prototype.getElement = function () {\n        return this.el;\n    };\n    MarkdownPreview.prototype.getHTML = function () {\n        return removeProseMirrorHackNodes(this.previewContent.innerHTML);\n    };\n    MarkdownPreview.prototype.setHTML = function (html) {\n        this.previewContent.innerHTML = html;\n    };\n    MarkdownPreview.prototype.setHeight = function (height) {\n        css_1(this.el, { height: height + \"px\" });\n    };\n    MarkdownPreview.prototype.setMinHeight = function (minHeight) {\n        css_1(this.el, { minHeight: minHeight + \"px\" });\n    };\n    return MarkdownPreview;\n}());\n\nfunction findNodeBy(pos, condition) {\n    var depth = pos.depth;\n    while (depth) {\n        var node = pos.node(depth);\n        if (condition(node, depth)) {\n            return {\n                node: node,\n                depth: depth,\n                offset: depth > 0 ? pos.before(depth) : 0,\n            };\n        }\n        depth -= 1;\n    }\n    return null;\n}\nfunction isInListNode(pos) {\n    return !!findNodeBy(pos, function (_a) {\n        var type = _a.type;\n        return type.name === 'listItem' || type.name === 'bulletList' || type.name === 'orderedList';\n    });\n}\nfunction isInTableNode(pos) {\n    return !!findNodeBy(pos, function (_a) {\n        var type = _a.type;\n        return type.name === 'tableHeadCell' || type.name === 'tableBodyCell';\n    });\n}\nfunction findListItem(pos) {\n    return findNodeBy(pos, function (_a) {\n        var type = _a.type;\n        return type.name === 'listItem';\n    });\n}\nfunction createDOMInfoParsedRawHTML(tag) {\n    return {\n        tag: tag,\n        getAttrs: function (dom) {\n            var rawHTML = dom.getAttribute('data-raw-html');\n            return __assign$1({}, (rawHTML && { rawHTML: rawHTML }));\n        },\n    };\n}\nfunction createCellAttrs(attrs) {\n    return Object.keys(attrs).reduce(function (acc, attrName) {\n        if (attrName !== 'rawHTML' && attrs[attrName]) {\n            attrName = attrName === 'className' ? 'class' : attrName;\n            acc[attrName] = attrs[attrName];\n        }\n        return acc;\n    }, {});\n}\nfunction createParsedCellDOM(tag) {\n    return {\n        tag: tag,\n        getAttrs: function (dom) {\n            return ['rawHTML', 'colspan', 'rowspan', 'extended'].reduce(function (acc, attrName) {\n                var attrNameInDOM = attrName === 'rawHTML' ? 'data-raw-html' : attrName;\n                var attrValue = dom.getAttribute(attrNameInDOM);\n                if (attrValue) {\n                    acc[attrName] = includes(['rawHTML', 'extended'], attrName)\n                        ? attrValue\n                        : Number(attrValue);\n                }\n                return acc;\n            }, {});\n        },\n    };\n}\nfunction getDefaultCustomAttrs() {\n    return {\n        htmlAttrs: { default: null },\n        classNames: { default: null },\n    };\n}\nfunction getCustomAttrs(attrs) {\n    var htmlAttrs = attrs.htmlAttrs, classNames = attrs.classNames;\n    return __assign$1(__assign$1({}, htmlAttrs), { class: classNames ? classNames.join(' ') : null });\n}\n\nfunction findWrappingOutside(range, type) {\n    var parent = range.parent, startIndex = range.startIndex, endIndex = range.endIndex;\n    var around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (around) {\n        var outer = around.length ? around[0] : type;\n        return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n    }\n    return null;\n}\nfunction findWrappingInside(range, type) {\n    var parent = range.parent, startIndex = range.startIndex, endIndex = range.endIndex;\n    var inner = parent.child(startIndex);\n    var inside = type.contentMatch.findWrapping(inner.type);\n    if (inside) {\n        var lastType = inside.length ? inside[inside.length - 1] : type;\n        var innerMatch = lastType.contentMatch;\n        for (var i = startIndex; innerMatch && i < endIndex; i += 1) {\n            innerMatch = innerMatch.matchType(parent.child(i).type);\n        }\n        if (innerMatch && innerMatch.validEnd) {\n            return inside;\n        }\n    }\n    return null;\n}\nfunction findWrappers(range, innerRange, nodeType, attrs) {\n    var around = findWrappingOutside(range, nodeType);\n    var inner = findWrappingInside(innerRange, nodeType);\n    if (around && inner) {\n        var aroundNodes = around.map(function (type) {\n            return { type: type };\n        });\n        var innerNodes = inner.map(function (type) {\n            return { type: type, attrs: attrs };\n        });\n        return aroundNodes.concat({ type: nodeType }).concat(innerNodes);\n    }\n    return null;\n}\nfunction wrapInList(tr, _a, wrappers, joinBefore, list) {\n    var start = _a.start, end = _a.end, startIndex = _a.startIndex, endIndex = _a.endIndex, parent = _a.parent;\n    var content = Fragment.empty;\n    for (var i = wrappers.length - 1; i >= 0; i -= 1) {\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    tr.step(new ReplaceAroundStep(start - (joinBefore ? 2 : 0), end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n    var foundListIndex = 0;\n    for (var i = 0; i < wrappers.length; i += 1) {\n        if (wrappers[i].type === list) {\n            foundListIndex = i + 1;\n            break;\n        }\n    }\n    var splitDepth = wrappers.length - foundListIndex;\n    var splitPos = start + wrappers.length - (joinBefore ? 2 : 0);\n    for (var i = startIndex, len = endIndex; i < len; i += 1) {\n        var first = i === startIndex;\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += splitDepth * 2;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\nfunction changeToList(tr, range, list, attrs) {\n    var $from = range.$from, $to = range.$to, depth = range.depth;\n    var outerRange = range;\n    var joinBefore = false;\n    if (depth >= 2 &&\n        $from.node(depth - 1).type.compatibleContent(list) &&\n        range.startIndex === 0 &&\n        $from.index(depth - 1)) {\n        var start = tr.doc.resolve(range.start - 2);\n        outerRange = new NodeRange(start, start, depth);\n        if (range.endIndex < range.parent.childCount) {\n            range = new NodeRange($from, tr.doc.resolve($to.end(depth)), depth);\n        }\n        joinBefore = true;\n    }\n    var wrappers = findWrappers(outerRange, range, list, attrs);\n    if (wrappers) {\n        return wrapInList(tr, range, wrappers, joinBefore, list);\n    }\n    return tr;\n}\nfunction getBeforeLineListItem(doc, offset) {\n    var endListItemPos = doc.resolve(offset);\n    while (endListItemPos.node().type.name !== 'paragraph') {\n        offset -= 2; // The position value of </li></ul>\n        endListItemPos = doc.resolve(offset);\n    }\n    return findListItem(endListItemPos);\n}\nfunction toggleTaskListItems(tr, _a) {\n    var $from = _a.$from, $to = _a.$to;\n    var startListItem = findListItem($from);\n    var endListItem = findListItem($to);\n    if (startListItem && endListItem) {\n        while (endListItem) {\n            var offset = endListItem.offset, node = endListItem.node;\n            var attrs = { task: !node.attrs.task, checked: false };\n            tr.setNodeMarkup(offset, null, attrs);\n            if (offset === startListItem.offset) {\n                break;\n            }\n            endListItem = getBeforeLineListItem(tr.doc, offset);\n        }\n    }\n    return tr;\n}\nfunction changeListType(tr, _a, list) {\n    var $from = _a.$from, $to = _a.$to;\n    var startListItem = findListItem($from);\n    var endListItem = findListItem($to);\n    if (startListItem && endListItem) {\n        while (endListItem) {\n            var offset = endListItem.offset, node = endListItem.node, depth = endListItem.depth;\n            if (node.attrs.task) {\n                tr.setNodeMarkup(offset, null, { task: false, checked: false });\n            }\n            var resolvedPos = tr.doc.resolve(offset);\n            if (resolvedPos.parent.type !== list) {\n                var parentOffset = resolvedPos.before(depth - 1);\n                tr.setNodeMarkup(parentOffset, list);\n            }\n            if (offset === startListItem.offset) {\n                break;\n            }\n            endListItem = getBeforeLineListItem(tr.doc, offset);\n        }\n    }\n    return tr;\n}\nfunction changeList(list) {\n    return function (_a, dispatch) {\n        var selection = _a.selection, tr = _a.tr;\n        var $from = selection.$from, $to = selection.$to;\n        var range = $from.blockRange($to);\n        if (range) {\n            var newTr = isInListNode($from)\n                ? changeListType(tr, range, list)\n                : changeToList(tr, range, list);\n            dispatch(newTr);\n            return true;\n        }\n        return false;\n    };\n}\nfunction toggleTask() {\n    return function (_a, dispatch) {\n        var selection = _a.selection, tr = _a.tr, schema = _a.schema;\n        var $from = selection.$from, $to = selection.$to;\n        var range = $from.blockRange($to);\n        if (range) {\n            var newTr = isInListNode($from)\n                ? toggleTaskListItems(tr, range)\n                : changeToList(tr, range, schema.nodes.bulletList, { task: true });\n            dispatch(newTr);\n            return true;\n        }\n        return false;\n    };\n}\nfunction sinkListItem(listItem) {\n    return function (_a, dispatch) {\n        var tr = _a.tr, selection = _a.selection;\n        var $from = selection.$from, $to = selection.$to;\n        var range = $from.blockRange($to, function (_a) {\n            var childCount = _a.childCount, firstChild = _a.firstChild;\n            return !!childCount && firstChild.type === listItem;\n        });\n        if (range && range.startIndex > 0) {\n            var parent_1 = range.parent;\n            var nodeBefore = parent_1.child(range.startIndex - 1);\n            if (nodeBefore.type !== listItem) {\n                return false;\n            }\n            var nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type === parent_1.type;\n            var inner = nestedBefore ? Fragment.from(listItem.create()) : null;\n            var slice = new Slice(Fragment.from(listItem.create(null, Fragment.from(parent_1.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            var before = range.start;\n            var after = range.end;\n            tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true));\n            dispatch(tr);\n            return true;\n        }\n        return false;\n    };\n}\nfunction liftToOuterList(tr, range, listItem) {\n    var $from = range.$from, $to = range.$to, end = range.end, depth = range.depth, parent = range.parent;\n    var endOfList = $to.end(depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(listItem.create(null, parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve($from.pos), tr.doc.resolve(endOfList), depth);\n    }\n    tr.lift(range, liftTarget(range));\n    return tr;\n}\nfunction liftOutOfList(tr, range) {\n    var list = range.parent;\n    var pos = range.end;\n    // Merge the list items into a single big item\n    for (var i = range.endIndex - 1, len = range.startIndex; i > len; i -= 1) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    var startPos = tr.doc.resolve(range.start);\n    var listItem = startPos.nodeAfter;\n    var atStart = range.startIndex === 0;\n    var atEnd = range.endIndex === list.childCount;\n    var parent = startPos.node(-1);\n    var indexBefore = startPos.index(-1);\n    var canReplaceParent = parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, listItem === null || listItem === void 0 ? void 0 : listItem.content.append(atEnd ? Fragment.empty : Fragment.from(list)));\n    if (listItem && canReplaceParent) {\n        var start = startPos.pos;\n        var end = start + listItem.nodeSize;\n        // Strip off the surrounding list. At the sides where we're not at\n        // the end of the list, the existing list is closed. At sides where\n        // this is the end, it is overwritten to its end.\n        tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))).append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    }\n    return tr;\n}\nfunction liftListItem(listItem) {\n    return function (_a, dispatch) {\n        var tr = _a.tr, selection = _a.selection;\n        var $from = selection.$from, $to = selection.$to;\n        var range = $from.blockRange($to, function (_a) {\n            var childCount = _a.childCount, firstChild = _a.firstChild;\n            return !!childCount && firstChild.type === listItem;\n        });\n        if (range) {\n            var topListItem = $from.node(range.depth - 1).type === listItem;\n            var newTr = topListItem ? liftToOuterList(tr, range, listItem) : liftOutOfList(tr, range);\n            dispatch(newTr);\n            return true;\n        }\n        return false;\n    };\n}\nfunction splitListItem(listItem) {\n    return function (_a, dispatch) {\n        var tr = _a.tr, selection = _a.selection;\n        var $from = selection.$from, $to = selection.$to;\n        if ($from.depth < 2 || !$from.sameParent($to)) {\n            return false;\n        }\n        var grandParent = $from.node(-1);\n        if (grandParent.type !== listItem) {\n            return false;\n        }\n        if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth === 2 ||\n                $from.node(-3).type !== listItem ||\n                $from.index(-2) !== $from.node(-2).childCount - 1) {\n                return false;\n            }\n            var keepItem = $from.index(-1) > 0;\n            var wrapper = Fragment.empty;\n            // Build a fragment containing empty versions of the structure\n            // from the outer list item to the parent node of the cursor\n            for (var depth = $from.depth - (keepItem ? 1 : 2); depth >= $from.depth - 3; depth -= 1) {\n                wrapper = Fragment.from($from.node(depth).copy(wrapper));\n            }\n            // Add a second list item with an empty default start node\n            wrapper = wrapper.append(Fragment.from(listItem.createAndFill()));\n            tr.replace(keepItem ? $from.before() : $from.before(-1), $from.after(-3), new Slice(wrapper, keepItem ? 3 : 2, 2));\n            tr.setSelection(Selection.near(tr.doc.resolve($from.pos + (keepItem ? 3 : 2))));\n            dispatch(tr);\n            return true;\n        }\n        var nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        var types = nextType && [null, { type: nextType }];\n        tr.delete($from.pos, $to.pos);\n        if (canSplit(tr.doc, $from.pos, 2, types)) {\n            tr.split($from.pos, 2, types);\n            dispatch(tr);\n            return true;\n        }\n        return false;\n    };\n}\n\nfunction indent() {\n    return function () { return function (state, dispatch) {\n        var selection = state.selection, schema = state.schema;\n        var $from = selection.$from, $to = selection.$to;\n        var range = $from.blockRange($to);\n        if (range && isInListNode($from)) {\n            return sinkListItem(schema.nodes.listItem)(state, dispatch);\n        }\n        return false;\n    }; };\n}\nfunction outdent() {\n    return function () { return function (state, dispatch) {\n        var selection = state.selection, schema = state.schema;\n        var $from = selection.$from, $to = selection.$to;\n        var range = $from.blockRange($to);\n        if (range && isInListNode($from)) {\n            return liftListItem(schema.nodes.listItem)(state, dispatch);\n        }\n        return false;\n    }; };\n}\nfunction getWwCommands() {\n    return {\n        indent: indent(),\n        outdent: outdent(),\n    };\n}\n\nvar cache = new Map();\n/* eslint-disable @typescript-eslint/no-unused-vars */\nvar TableOffsetMap = /** @class */ (function () {\n    function TableOffsetMap(table, tableRows, tableStartPos, rowInfo) {\n        this.table = table;\n        this.tableRows = tableRows;\n        this.tableStartPos = tableStartPos;\n        this.rowInfo = rowInfo;\n    }\n    TableOffsetMap.create = function (cellPos) {\n        var table = findNodeBy(cellPos, function (_a) {\n            var type = _a.type;\n            return type.name === 'table';\n        });\n        if (table) {\n            var node = table.node, depth = table.depth, offset = table.offset;\n            var cached = cache.get(node);\n            if ((cached === null || cached === void 0 ? void 0 : cached.tableStartPos) === offset + 1) {\n                return cached;\n            }\n            var rows_1 = [];\n            var tablePos = cellPos.start(depth);\n            var thead = node.child(0);\n            var tbody = node.child(1);\n            var theadCellInfo = createOffsetMap(thead, tablePos);\n            var tbodyCellInfo = createOffsetMap(tbody, tablePos + thead.nodeSize);\n            thead.forEach(function (row) { return rows_1.push(row); });\n            tbody.forEach(function (row) { return rows_1.push(row); });\n            var map = new TableOffsetMap(node, rows_1, tablePos, theadCellInfo.concat(tbodyCellInfo));\n            cache.set(node, map);\n            return map;\n        }\n        return null;\n    };\n    Object.defineProperty(TableOffsetMap.prototype, \"totalRowCount\", {\n        get: function () {\n            return this.rowInfo.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableOffsetMap.prototype, \"totalColumnCount\", {\n        get: function () {\n            return this.rowInfo[0].length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableOffsetMap.prototype, \"tableStartOffset\", {\n        get: function () {\n            return this.tableStartPos;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableOffsetMap.prototype, \"tableEndOffset\", {\n        get: function () {\n            return this.tableStartPos + this.table.nodeSize - 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TableOffsetMap.prototype.getCellInfo = function (rowIdx, colIdx) {\n        return this.rowInfo[rowIdx][colIdx];\n    };\n    TableOffsetMap.prototype.posAt = function (rowIdx, colIdx) {\n        for (var i = 0, rowStart = this.tableStartPos;; i += 1) {\n            var rowEnd = rowStart + this.tableRows[i].nodeSize;\n            if (i === rowIdx) {\n                var index = colIdx;\n                // Skip the cells from previous row(via rowspan)\n                while (index < this.totalColumnCount && this.rowInfo[i][index].offset < rowStart) {\n                    index += 1;\n                }\n                return index === this.totalColumnCount ? rowEnd : this.rowInfo[i][index].offset;\n            }\n            rowStart = rowEnd;\n        }\n    };\n    TableOffsetMap.prototype.getNodeAndPos = function (rowIdx, colIdx) {\n        var cellInfo = this.rowInfo[rowIdx][colIdx];\n        return {\n            node: this.table.nodeAt(cellInfo.offset - this.tableStartOffset),\n            pos: cellInfo.offset,\n        };\n    };\n    TableOffsetMap.prototype.extendedRowspan = function (rowIdx, colIdx) {\n        return false;\n    };\n    TableOffsetMap.prototype.extendedColspan = function (rowIdx, colIdx) {\n        return false;\n    };\n    TableOffsetMap.prototype.getRowspanCount = function (rowIdx, colIdx) {\n        return 0;\n    };\n    TableOffsetMap.prototype.getColspanCount = function (rowIdx, colIdx) {\n        return 0;\n    };\n    TableOffsetMap.prototype.decreaseColspanCount = function (rowIdx, colIdx) {\n        return 0;\n    };\n    TableOffsetMap.prototype.decreaseRowspanCount = function (rowIdx, colIdx) {\n        return 0;\n    };\n    TableOffsetMap.prototype.getColspanStartInfo = function (rowIdx, colIdx) {\n        return null;\n    };\n    TableOffsetMap.prototype.getRowspanStartInfo = function (rowIdx, colIdx) {\n        return null;\n    };\n    TableOffsetMap.prototype.getCellStartOffset = function (rowIdx, colIdx) {\n        var offset = this.rowInfo[rowIdx][colIdx].offset;\n        return this.extendedRowspan(rowIdx, colIdx) ? this.posAt(rowIdx, colIdx) : offset;\n    };\n    TableOffsetMap.prototype.getCellEndOffset = function (rowIdx, colIdx) {\n        var _a = this.rowInfo[rowIdx][colIdx], offset = _a.offset, nodeSize = _a.nodeSize;\n        return this.extendedRowspan(rowIdx, colIdx) ? this.posAt(rowIdx, colIdx) : offset + nodeSize;\n    };\n    TableOffsetMap.prototype.getCellIndex = function (cellPos) {\n        for (var rowIdx = 0; rowIdx < this.totalRowCount; rowIdx += 1) {\n            var rowInfo = this.rowInfo[rowIdx];\n            for (var colIdx = 0; colIdx < this.totalColumnCount; colIdx += 1) {\n                if (rowInfo[colIdx].offset + 1 > cellPos.pos) {\n                    return [rowIdx, colIdx];\n                }\n            }\n        }\n        return [0, 0];\n    };\n    TableOffsetMap.prototype.getRectOffsets = function (startCellPos, endCellPos) {\n        var _a, _b, _c;\n        if (endCellPos === void 0) { endCellPos = startCellPos; }\n        if (startCellPos.pos > endCellPos.pos) {\n            _a = [endCellPos, startCellPos], startCellPos = _a[0], endCellPos = _a[1];\n        }\n        var _d = this.getCellIndex(startCellPos), startRowIdx = _d[0], startColIdx = _d[1];\n        var _e = this.getCellIndex(endCellPos), endRowIdx = _e[0], endColIdx = _e[1];\n        _b = getSortedNumPair(startRowIdx, endRowIdx), startRowIdx = _b[0], endRowIdx = _b[1];\n        _c = getSortedNumPair(startColIdx, endColIdx), startColIdx = _c[0], endColIdx = _c[1];\n        return this.getSpannedOffsets({ startRowIdx: startRowIdx, startColIdx: startColIdx, endRowIdx: endRowIdx, endColIdx: endColIdx });\n    };\n    TableOffsetMap.prototype.getSpannedOffsets = function (selectionInfo) {\n        return selectionInfo;\n    };\n    return TableOffsetMap;\n}());\n/* eslint-enable @typescript-eslint/no-unused-vars */\nvar createOffsetMap = function (headOrBody, startOffset) {\n    var cellInfoMatrix = [];\n    headOrBody.forEach(function (row, rowOffset) {\n        // get row index based on table(not table head or table body)\n        var rowInfo = { rowspanMap: {}, colspanMap: {}, length: 0 };\n        row.forEach(function (_a, cellOffset) {\n            var nodeSize = _a.nodeSize;\n            var colIdx = 0;\n            while (rowInfo[colIdx]) {\n                colIdx += 1;\n            }\n            rowInfo[colIdx] = {\n                // 2 is the sum of the front and back positions of the tag\n                offset: startOffset + rowOffset + cellOffset + 2,\n                nodeSize: nodeSize,\n            };\n            rowInfo.length += 1;\n        });\n        cellInfoMatrix.push(rowInfo);\n    });\n    return cellInfoMatrix;\n};\nfunction mixinTableOffsetMapPrototype(offsetMapMixin, createOffsetMapMixin) {\n    assign(TableOffsetMap.prototype, offsetMapMixin);\n    createOffsetMap = createOffsetMapMixin;\n    return TableOffsetMap;\n}\n\nfunction getSelectionRanges(doc, map, _a) {\n    var startRowIdx = _a.startRowIdx, startColIdx = _a.startColIdx, endRowIdx = _a.endRowIdx, endColIdx = _a.endColIdx;\n    var ranges = [];\n    for (var rowIdx = startRowIdx; rowIdx <= endRowIdx; rowIdx += 1) {\n        for (var colIdx = startColIdx; colIdx <= endColIdx; colIdx += 1) {\n            var _b = map.getCellInfo(rowIdx, colIdx), offset = _b.offset, nodeSize = _b.nodeSize;\n            ranges.push(new SelectionRange(doc.resolve(offset + 1), doc.resolve(offset + nodeSize - 1)));\n        }\n    }\n    return ranges;\n}\nfunction createTableFragment(tableHead, tableBody) {\n    var fragment = [];\n    if (tableHead.childCount) {\n        fragment.push(tableHead);\n    }\n    if (tableBody.childCount) {\n        fragment.push(tableBody);\n    }\n    return Fragment.from(fragment);\n}\nvar CellSelection = /** @class */ (function (_super) {\n    __extends$1(CellSelection, _super);\n    function CellSelection(startCellPos, endCellPos) {\n        if (endCellPos === void 0) { endCellPos = startCellPos; }\n        var _this = this;\n        var doc = startCellPos.node(0);\n        var map = TableOffsetMap.create(startCellPos);\n        var selectionInfo = map.getRectOffsets(startCellPos, endCellPos);\n        var ranges = getSelectionRanges(doc, map, selectionInfo);\n        _this = _super.call(this, ranges[0].$from, ranges[0].$to, ranges) || this;\n        _this.startCell = startCellPos;\n        _this.endCell = endCellPos;\n        _this.offsetMap = map;\n        _this.isCellSelection = true;\n        // This property is the api of the 'Selection' in prosemirror,\n        // and is used to disable the text selection.\n        _this.visible = false;\n        return _this;\n    }\n    CellSelection.prototype.map = function (doc, mapping) {\n        var startPos = this.startCell.pos;\n        var endPos = this.endCell.pos;\n        var startCell = doc.resolve(mapping.map(startPos));\n        var endCell = doc.resolve(mapping.map(endPos));\n        var map = TableOffsetMap.create(startCell);\n        // text selection when rows or columns are deleted\n        if (this.offsetMap.totalColumnCount > map.totalColumnCount ||\n            this.offsetMap.totalRowCount > map.totalRowCount) {\n            var depthMap = { tableBody: 1, tableRow: 2, tableCell: 3, paragraph: 4 };\n            var depthFromTable = depthMap[endCell.parent.type.name];\n            var tableEndPos = endCell.end(endCell.depth - depthFromTable);\n            // subtract 4(</td></tr></tbody></table> tag length)\n            var from = Math.min(tableEndPos - 4, endCell.pos);\n            return TextSelection.create(doc, from);\n        }\n        return new CellSelection(startCell, endCell);\n    };\n    CellSelection.prototype.eq = function (cell) {\n        return (cell instanceof CellSelection &&\n            cell.startCell.pos === this.startCell.pos &&\n            cell.endCell.pos === this.endCell.pos);\n    };\n    CellSelection.prototype.content = function () {\n        var table = this.startCell.node(-2);\n        var tableOffset = this.startCell.start(-2);\n        var row = table.child(1).firstChild;\n        var tableHead = table.child(0).type.create();\n        var tableBody = table.child(1).type.create();\n        var map = TableOffsetMap.create(this.startCell);\n        var selectionInfo = map.getRectOffsets(this.startCell, this.endCell);\n        var startRowIdx = selectionInfo.startRowIdx, startColIdx = selectionInfo.startColIdx, endRowIdx = selectionInfo.endRowIdx, endColIdx = selectionInfo.endColIdx;\n        var isTableHeadCell = false;\n        for (var rowIdx = startRowIdx; rowIdx <= endRowIdx; rowIdx += 1) {\n            var cells = [];\n            for (var colIdx = startColIdx; colIdx <= endColIdx; colIdx += 1) {\n                var offset = map.getCellInfo(rowIdx, colIdx).offset;\n                var cell = table.nodeAt(offset - tableOffset);\n                if (cell) {\n                    isTableHeadCell = cell.type.name === 'tableHeadCell';\n                    // mark the extended cell for pasting\n                    if (map.extendedRowspan(rowIdx, colIdx) || map.extendedColspan(rowIdx, colIdx)) {\n                        cells.push(cell.type.create({ extended: true }));\n                    }\n                    else {\n                        cells.push(cell.copy(cell.content));\n                    }\n                }\n            }\n            var copiedRow = row.copy(Fragment.from(cells));\n            var targetNode = isTableHeadCell ? tableHead : tableBody;\n            // @ts-ignore\n            targetNode.content = targetNode.content.append(Fragment.from(copiedRow));\n        }\n        return new Slice(createTableFragment(tableHead, tableBody), 1, 1);\n    };\n    CellSelection.prototype.toJSON = function () {\n        return JSON.stringify(this);\n    };\n    return CellSelection;\n}(Selection));\n\nfunction createTableHeadRow(columnCount, schema, data) {\n    var _a = schema.nodes, tableRow = _a.tableRow, tableHeadCell = _a.tableHeadCell, paragraph = _a.paragraph;\n    var cells = [];\n    for (var index = 0; index < columnCount; index += 1) {\n        var text = data && data[index];\n        var para = paragraph.create(null, text ? schema.text(text) : []);\n        cells.push(tableHeadCell.create(null, para));\n    }\n    return [tableRow.create(null, cells)];\n}\nfunction createTableBodyRows(rowCount, columnCount, schema, data) {\n    var _a = schema.nodes, tableRow = _a.tableRow, tableBodyCell = _a.tableBodyCell, paragraph = _a.paragraph;\n    var tableRows = [];\n    for (var rowIdx = 0; rowIdx < rowCount; rowIdx += 1) {\n        var cells = [];\n        for (var colIdx = 0; colIdx < columnCount; colIdx += 1) {\n            var text = data && data[rowIdx * columnCount + colIdx];\n            var para = paragraph.create(null, text ? schema.text(text) : []);\n            cells.push(tableBodyCell.create(null, para));\n        }\n        tableRows.push(tableRow.create(null, cells));\n    }\n    return tableRows;\n}\nfunction createDummyCells(columnCount, rowIdx, schema, attrs) {\n    if (attrs === void 0) { attrs = null; }\n    var _a = schema.nodes, tableHeadCell = _a.tableHeadCell, tableBodyCell = _a.tableBodyCell, paragraph = _a.paragraph;\n    var cell = rowIdx === 0 ? tableHeadCell : tableBodyCell;\n    var cells = [];\n    for (var index = 0; index < columnCount; index += 1) {\n        cells.push(cell.create(attrs, paragraph.create()));\n    }\n    return cells;\n}\nfunction findCellElement(node, root) {\n    while (node && node !== root) {\n        if (node.nodeName === 'TD' || node.nodeName === 'TH') {\n            return node;\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\nfunction findCell(pos) {\n    return findNodeBy(pos, function (_a) {\n        var type = _a.type;\n        return type.name === 'tableHeadCell' || type.name === 'tableBodyCell';\n    });\n}\nfunction getResolvedSelection(selection) {\n    if (selection instanceof TextSelection) {\n        var $anchor = selection.$anchor;\n        var foundCell = findCell($anchor);\n        if (foundCell) {\n            var anchor = $anchor.node(0).resolve($anchor.before(foundCell.depth));\n            return { anchor: anchor, head: anchor };\n        }\n    }\n    var _a = selection, startCell = _a.startCell, endCell = _a.endCell;\n    return { anchor: startCell, head: endCell };\n}\nfunction getTableContentFromSlice(slice) {\n    var _a;\n    if (slice.size) {\n        var content = slice.content, openStart = slice.openStart, openEnd = slice.openEnd;\n        if (content.childCount !== 1) {\n            return null;\n        }\n        while (content.childCount === 1 &&\n            ((openStart > 0 && openEnd > 0) || ((_a = content.firstChild) === null || _a === void 0 ? void 0 : _a.type.name) === 'table')) {\n            openStart -= 1;\n            openEnd -= 1;\n            content = content.firstChild.content;\n        }\n        if (content.firstChild.type.name === 'tableHead' ||\n            content.firstChild.type.name === 'tableBody') {\n            return content;\n        }\n    }\n    return null;\n}\nfunction getRowAndColumnCount(_a) {\n    var startRowIdx = _a.startRowIdx, startColIdx = _a.startColIdx, endRowIdx = _a.endRowIdx, endColIdx = _a.endColIdx;\n    var rowCount = endRowIdx - startRowIdx + 1;\n    var columnCount = endColIdx - startColIdx + 1;\n    return { rowCount: rowCount, columnCount: columnCount };\n}\nfunction setAttrs(cell, attrs) {\n    return __assign$1(__assign$1({}, cell.attrs), attrs);\n}\n\nvar pluginKey = new PluginKey('cellSelection');\nvar MOUSE_RIGHT_BUTTON = 2;\nvar TableSelection = /** @class */ (function () {\n    function TableSelection(view) {\n        this.view = view;\n        this.handlers = {\n            mousedown: this.handleMousedown.bind(this),\n            mousemove: this.handleMousemove.bind(this),\n            mouseup: this.handleMouseup.bind(this),\n        };\n        this.startCellPos = null;\n        this.init();\n    }\n    TableSelection.prototype.init = function () {\n        this.view.dom.addEventListener('mousedown', this.handlers.mousedown);\n    };\n    TableSelection.prototype.handleMousedown = function (ev) {\n        var foundCell = findCellElement(ev.target, this.view.dom);\n        if (ev.button === MOUSE_RIGHT_BUTTON) {\n            ev.preventDefault();\n            return;\n        }\n        if (foundCell) {\n            var startCellPos = this.getCellPos(ev);\n            if (startCellPos) {\n                this.startCellPos = startCellPos;\n            }\n            this.bindEvent();\n        }\n    };\n    TableSelection.prototype.handleMousemove = function (ev) {\n        var prevEndCellOffset = pluginKey.getState(this.view.state);\n        var endCellPos = this.getCellPos(ev);\n        var startCellPos = this.startCellPos;\n        var prevEndCellPos;\n        if (prevEndCellOffset) {\n            prevEndCellPos = this.view.state.doc.resolve(prevEndCellOffset);\n        }\n        else if (startCellPos !== endCellPos) {\n            prevEndCellPos = startCellPos;\n        }\n        if (prevEndCellPos && startCellPos && endCellPos) {\n            this.setCellSelection(startCellPos, endCellPos);\n        }\n    };\n    TableSelection.prototype.handleMouseup = function () {\n        this.startCellPos = null;\n        this.unbindEvent();\n        if (pluginKey.getState(this.view.state) !== null) {\n            this.view.dispatch(this.view.state.tr.setMeta(pluginKey, -1));\n        }\n    };\n    TableSelection.prototype.bindEvent = function () {\n        var dom = this.view.dom;\n        dom.addEventListener('mousemove', this.handlers.mousemove);\n        dom.addEventListener('mouseup', this.handlers.mouseup);\n    };\n    TableSelection.prototype.unbindEvent = function () {\n        var dom = this.view.dom;\n        dom.removeEventListener('mousemove', this.handlers.mousemove);\n        dom.removeEventListener('mouseup', this.handlers.mouseup);\n    };\n    TableSelection.prototype.getCellPos = function (_a) {\n        var clientX = _a.clientX, clientY = _a.clientY;\n        var mousePos = this.view.posAtCoords({ left: clientX, top: clientY });\n        if (mousePos) {\n            var doc = this.view.state.doc;\n            var currentPos = doc.resolve(mousePos.pos);\n            var foundCell = findCell(currentPos);\n            if (foundCell) {\n                var cellOffset = currentPos.before(foundCell.depth);\n                return doc.resolve(cellOffset);\n            }\n        }\n        return null;\n    };\n    TableSelection.prototype.setCellSelection = function (startCellPos, endCellPos) {\n        var _a = this.view.state, selection = _a.selection, tr = _a.tr;\n        var starting = pluginKey.getState(this.view.state) === null;\n        var cellSelection = new CellSelection(startCellPos, endCellPos);\n        if (starting || !selection.eq(cellSelection)) {\n            var newTr = tr.setSelection(cellSelection);\n            if (starting) {\n                newTr.setMeta(pluginKey, endCellPos.pos);\n            }\n            this.view.dispatch(newTr);\n        }\n    };\n    TableSelection.prototype.destroy = function () {\n        this.view.dom.removeEventListener('mousedown', this.handlers.mousedown);\n    };\n    return TableSelection;\n}());\n\nvar SELECTED_CELL_CLASS_NAME = cls('cell-selected');\nfunction drawCellSelection(_a) {\n    var selection = _a.selection, doc = _a.doc;\n    if (selection instanceof CellSelection) {\n        var cells_1 = [];\n        var ranges = selection.ranges;\n        ranges.forEach(function (_a) {\n            var $from = _a.$from, $to = _a.$to;\n            cells_1.push(Decoration.node($from.pos - 1, $to.pos + 1, { class: SELECTED_CELL_CLASS_NAME }));\n        });\n        return DecorationSet.create(doc, cells_1);\n    }\n    return null;\n}\nfunction tableSelection() {\n    return new Plugin({\n        key: pluginKey,\n        state: {\n            init: function () {\n                return null;\n            },\n            apply: function (tr, value) {\n                var cellOffset = tr.getMeta(pluginKey);\n                if (cellOffset) {\n                    return cellOffset === -1 ? null : cellOffset;\n                }\n                if (isNull_1(value) || !tr.docChanged) {\n                    return value;\n                }\n                var _a = tr.mapping.mapResult(value), deleted = _a.deleted, pos = _a.pos;\n                return deleted ? null : pos;\n            },\n        },\n        props: {\n            decorations: drawCellSelection,\n            createSelectionBetween: function (_a) {\n                var state = _a.state;\n                if (!isNull_1(pluginKey.getState(state))) {\n                    return state.selection;\n                }\n                return null;\n            },\n        },\n        view: function (editorView) {\n            return new TableSelection(editorView);\n        },\n    });\n}\n\n/**\n * @class\n * @ignore\n * @classdesc ES6 Map\n */\nvar Map$1 = /** @class */ (function () {\n    function Map() {\n        this.keys = [];\n        this.values = [];\n    }\n    Map.prototype.getKeyIndex = function (key) {\n        return inArray_1(key, this.keys);\n    };\n    Map.prototype.get = function (key) {\n        return this.values[this.getKeyIndex(key)];\n    };\n    Map.prototype.set = function (key, value) {\n        var keyIndex = this.getKeyIndex(key);\n        if (keyIndex > -1) {\n            this.values[keyIndex] = value;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(value);\n        }\n        return this;\n    };\n    Map.prototype.has = function (key) {\n        return this.getKeyIndex(key) > -1;\n    };\n    Map.prototype.delete = function (key) {\n        var keyIndex = this.getKeyIndex(key);\n        if (keyIndex > -1) {\n            this.keys.splice(keyIndex, 1);\n            this.values.splice(keyIndex, 1);\n            return true;\n        }\n        return false;\n    };\n    Map.prototype.forEach = function (callback, thisArg) {\n        var _this = this;\n        if (thisArg === void 0) { thisArg = this; }\n        this.values.forEach(function (value, index) {\n            if (value && _this.keys[index]) {\n                callback.call(thisArg, value, _this.keys[index], _this);\n            }\n        });\n    };\n    Map.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    return Map;\n}());\n\n/**\n * @fileoverview Implements i18n\n * @author NHN Cloud FE Development Lab <dl_javascript@nhn.com>\n */\nvar DEFAULT_CODE = 'en-US';\n/**\n * Class I18n\n * @ignore\n */\nvar I18n = /** @class */ (function () {\n    function I18n() {\n        this.code = DEFAULT_CODE;\n        this.langs = new Map$1();\n    }\n    I18n.prototype.setCode = function (code) {\n        this.code = code || DEFAULT_CODE;\n    };\n    /**\n     * Set language set\n     * @param {string|string[]} codes locale code\n     * @param {object} data language set\n     */\n    I18n.prototype.setLanguage = function (codes, data) {\n        var _this = this;\n        codes = [].concat(codes);\n        codes.forEach(function (code) {\n            if (!_this.langs.has(code)) {\n                _this.langs.set(code, data);\n            }\n            else {\n                var langData = _this.langs.get(code);\n                _this.langs.set(code, extend_1(langData, data));\n            }\n        });\n    };\n    I18n.prototype.get = function (key, code) {\n        if (!code) {\n            code = this.code;\n        }\n        var langSet = this.langs.get(code);\n        if (!langSet) {\n            langSet = this.langs.get(DEFAULT_CODE);\n        }\n        var text = langSet[key];\n        if (!text) {\n            throw new Error(\"There is no text key \\\"\" + key + \"\\\" in \" + code);\n        }\n        return text;\n    };\n    return I18n;\n}());\nvar i18n = new I18n();\n\nvar contextMenuGroups = [\n    [\n        {\n            action: 'Add row to up',\n            command: 'addRowToUp',\n            disableInThead: true,\n            className: 'add-row-up',\n        },\n        {\n            action: 'Add row to down',\n            command: 'addRowToDown',\n            disableInThead: true,\n            className: 'add-row-down',\n        },\n        { action: 'Remove row', command: 'removeRow', disableInThead: true, className: 'remove-row' },\n    ],\n    [\n        { action: 'Add column to left', command: 'addColumnToLeft', className: 'add-column-left' },\n        { action: 'Add column to right', command: 'addColumnToRight', className: 'add-column-right' },\n        { action: 'Remove column', command: 'removeColumn', className: 'remove-column' },\n    ],\n    [\n        {\n            action: 'Align column to left',\n            command: 'alignColumn',\n            payload: { align: 'left' },\n            className: 'align-column-left',\n        },\n        {\n            action: 'Align column to center',\n            command: 'alignColumn',\n            payload: { align: 'center' },\n            className: 'align-column-center',\n        },\n        {\n            action: 'Align column to right',\n            command: 'alignColumn',\n            payload: { align: 'right' },\n            className: 'align-column-right',\n        },\n    ],\n    [{ action: 'Remove table', command: 'removeTable', className: 'remove-table' }],\n];\nfunction getContextMenuGroups(eventEmitter, inTableHead) {\n    return contextMenuGroups\n        .map(function (contextMenuGroup) {\n        return contextMenuGroup.map(function (_a) {\n            var action = _a.action, command = _a.command, payload = _a.payload, disableInThead = _a.disableInThead, className = _a.className;\n            return {\n                label: i18n.get(action),\n                onClick: function () {\n                    eventEmitter.emit('command', command, payload);\n                },\n                disabled: inTableHead && !!disableInThead,\n                className: className,\n            };\n        });\n    })\n        .concat();\n}\nfunction tableContextMenu(eventEmitter) {\n    return new Plugin({\n        props: {\n            handleDOMEvents: {\n                contextmenu: function (view, ev) {\n                    var tableCell = findCellElement(ev.target, view.dom);\n                    if (tableCell) {\n                        ev.preventDefault();\n                        var _a = ev, clientX = _a.clientX, clientY = _a.clientY;\n                        var _b = view.dom.parentNode.getBoundingClientRect(), left = _b.left, top_1 = _b.top;\n                        var inTableHead = tableCell.nodeName === 'TH';\n                        eventEmitter.emit('contextmenu', {\n                            pos: { left: clientX - left + 10 + \"px\", top: clientY - top_1 + 30 + \"px\" },\n                            menuGroups: getContextMenuGroups(eventEmitter, inTableHead),\n                            tableCell: tableCell,\n                        });\n                        return true;\n                    }\n                    return false;\n                },\n            },\n        },\n    });\n}\n\nfunction task() {\n    return new Plugin({\n        props: {\n            handleDOMEvents: {\n                mousedown: function (view, ev) {\n                    var _a = ev, clientX = _a.clientX, clientY = _a.clientY;\n                    var mousePos = view.posAtCoords({ left: clientX, top: clientY });\n                    if (mousePos) {\n                        var _b = view.state, doc = _b.doc, tr = _b.tr;\n                        var currentPos = doc.resolve(mousePos.pos);\n                        var listItem = findListItem(currentPos);\n                        var target = ev.target;\n                        var style = getComputedStyle(target, ':before');\n                        var _c = ev, offsetX = _c.offsetX, offsetY = _c.offsetY;\n                        if (!listItem || !isPositionInBox(style, offsetX, offsetY)) {\n                            return false;\n                        }\n                        ev.preventDefault();\n                        var offset = currentPos.before(listItem.depth);\n                        var attrs = listItem.node.attrs;\n                        tr.setNodeMarkup(offset, null, __assign$1(__assign$1({}, attrs), { checked: !attrs.checked }));\n                        view.dispatch(tr);\n                        return true;\n                    }\n                    return false;\n                },\n            },\n        },\n    });\n}\n\nvar EXCEPT_TYPES = ['image', 'link', 'customBlock', 'frontMatter'];\nvar MARK_TYPES = ['strong', 'strike', 'emph', 'code'];\nvar LIST_TYPES = ['bulletList', 'orderedList', 'taskList'];\nfunction getToolbarStateType(node, parentNode) {\n    var type = node.type.name;\n    if (type === 'listItem') {\n        return node.attrs.task ? 'taskList' : parentNode.type.name;\n    }\n    if (type.indexOf('table') !== -1) {\n        return 'table';\n    }\n    return type;\n}\nfunction setListNodeToolbarState(type, nodeTypeState) {\n    nodeTypeState[type] = { active: true };\n    LIST_TYPES.filter(function (listName) { return listName !== type; }).forEach(function (listType) {\n        if (nodeTypeState[listType]) {\n            delete nodeTypeState[listType];\n        }\n    });\n}\nfunction setMarkTypeStates(from, to, schema, toolbarState) {\n    MARK_TYPES.forEach(function (type) {\n        var mark = schema.marks[type];\n        var marksAtPos = from.marksAcross(to) || [];\n        var foundMark = !!mark.isInSet(marksAtPos);\n        if (foundMark) {\n            toolbarState[type] = { active: true };\n        }\n    });\n}\nfunction getToolbarState(selection, doc, schema) {\n    var $from = selection.$from, $to = selection.$to, from = selection.from, to = selection.to;\n    var toolbarState = {\n        indent: { active: false, disabled: true },\n        outdent: { active: false, disabled: true },\n    };\n    doc.nodesBetween(from, to, function (node, _, parentNode) {\n        var type = getToolbarStateType(node, parentNode);\n        if (includes(EXCEPT_TYPES, type)) {\n            return;\n        }\n        if (includes(LIST_TYPES, type)) {\n            setListNodeToolbarState(type, toolbarState);\n            toolbarState.indent.disabled = false;\n            toolbarState.outdent.disabled = false;\n        }\n        else if (type === 'paragraph' || type === 'text') {\n            setMarkTypeStates($from, $to, schema, toolbarState);\n        }\n        else {\n            toolbarState[type] = { active: true };\n        }\n    });\n    return toolbarState;\n}\nfunction toolbarStateHighlight(eventEmitter) {\n    return new Plugin({\n        view: function () {\n            return {\n                update: function (view) {\n                    var _a = view.state, selection = _a.selection, doc = _a.doc, schema = _a.schema;\n                    eventEmitter.emit('changeToolbarState', {\n                        toolbarState: getToolbarState(selection, doc, schema),\n                    });\n                },\n            };\n        },\n    });\n}\n\nvar CustomBlockView = /** @class */ (function () {\n    function CustomBlockView(node, view, getPos, toDOMAdaptor) {\n        var _this = this;\n        this.openEditor = function () {\n            if (_this.innerEditorView) {\n                throw new Error('The editor is already opened.');\n            }\n            _this.dom.draggable = false;\n            _this.wrapper.style.display = 'none';\n            _this.innerViewContainer.style.display = 'block';\n            _this.innerEditorView = new EditorView(_this.innerViewContainer, {\n                state: EditorState.create({\n                    doc: _this.node,\n                    plugins: [\n                        keymap({\n                            'Mod-z': function () { return undo(_this.innerEditorView.state, _this.innerEditorView.dispatch); },\n                            'Shift-Mod-z': function () { return redo(_this.innerEditorView.state, _this.innerEditorView.dispatch); },\n                            Tab: function (state, dispatch) {\n                                dispatch(state.tr.insertText('\\t'));\n                                return true;\n                            },\n                            Enter: newlineInCode,\n                            Escape: function () {\n                                _this.cancelEditing();\n                                return true;\n                            },\n                            'Ctrl-Enter': function () {\n                                _this.saveAndFinishEditing();\n                                return true;\n                            },\n                        }),\n                        history(),\n                    ],\n                }),\n                dispatchTransaction: function (tr) { return _this.dispatchInner(tr); },\n                handleDOMEvents: {\n                    mousedown: function () {\n                        if (_this.editorView.hasFocus()) {\n                            _this.innerEditorView.focus();\n                        }\n                        return true;\n                    },\n                    blur: function () {\n                        _this.saveAndFinishEditing();\n                        return true;\n                    },\n                },\n            });\n            _this.innerEditorView.focus();\n        };\n        this.node = node;\n        this.editorView = view;\n        this.getPos = getPos;\n        this.toDOMAdaptor = toDOMAdaptor;\n        this.innerEditorView = null;\n        this.canceled = false;\n        this.dom = document.createElement('div');\n        this.dom.className = cls('custom-block');\n        this.wrapper = document.createElement('div');\n        this.wrapper.className = cls('custom-block-view');\n        this.createInnerViewContainer();\n        this.renderCustomBlock();\n        this.dom.appendChild(this.innerViewContainer);\n        this.dom.appendChild(this.wrapper);\n    }\n    CustomBlockView.prototype.renderToolArea = function () {\n        var _this = this;\n        var tool = document.createElement('div');\n        var span = document.createElement('span');\n        var button = document.createElement('button');\n        tool.className = 'tool';\n        span.textContent = this.node.attrs.info;\n        span.className = 'info';\n        button.type = 'button';\n        button.addEventListener('click', function () { return _this.openEditor(); });\n        tool.appendChild(span);\n        tool.appendChild(button);\n        this.wrapper.appendChild(tool);\n    };\n    CustomBlockView.prototype.renderCustomBlock = function () {\n        var toDOMNode = this.toDOMAdaptor.getToDOMNode(this.node.attrs.info);\n        if (toDOMNode) {\n            var node = toDOMNode(this.node);\n            while (this.wrapper.hasChildNodes()) {\n                this.wrapper.removeChild(this.wrapper.lastChild);\n            }\n            if (node) {\n                this.wrapper.appendChild(node);\n            }\n            this.renderToolArea();\n        }\n    };\n    CustomBlockView.prototype.createInnerViewContainer = function () {\n        this.innerViewContainer = document.createElement('div');\n        this.innerViewContainer.className = cls('custom-block-editor');\n        this.innerViewContainer.style.display = 'none';\n    };\n    CustomBlockView.prototype.closeEditor = function () {\n        if (this.innerEditorView) {\n            this.innerEditorView.destroy();\n            this.innerEditorView = null;\n            this.innerViewContainer.style.display = 'none';\n        }\n        this.wrapper.style.display = 'block';\n    };\n    CustomBlockView.prototype.saveAndFinishEditing = function () {\n        var to = this.editorView.state.selection.to;\n        var outerState = this.editorView.state;\n        this.editorView.dispatch(outerState.tr.setSelection(createTextSelection(outerState.tr, to)));\n        this.editorView.focus();\n        this.renderCustomBlock();\n        this.closeEditor();\n    };\n    CustomBlockView.prototype.cancelEditing = function () {\n        var undoableCount = undoDepth(this.innerEditorView.state);\n        this.canceled = true;\n        // should undo editing result\n        // eslint-disable-next-line no-plusplus\n        while (undoableCount--) {\n            undo(this.innerEditorView.state, this.innerEditorView.dispatch);\n            undo(this.editorView.state, this.editorView.dispatch);\n        }\n        this.canceled = false;\n        var to = this.editorView.state.selection.to;\n        var outerState = this.editorView.state;\n        this.editorView.dispatch(outerState.tr.setSelection(TextSelection.create(outerState.doc, to)));\n        this.editorView.focus();\n        this.closeEditor();\n    };\n    CustomBlockView.prototype.dispatchInner = function (tr) {\n        var _a = this.innerEditorView.state.applyTransaction(tr), state = _a.state, transactions = _a.transactions;\n        this.innerEditorView.updateState(state);\n        if (!this.canceled && isFunction_1(this.getPos)) {\n            var outerTr = this.editorView.state.tr;\n            var offsetMap = StepMap.offset(this.getPos() + 1);\n            for (var i = 0; i < transactions.length; i += 1) {\n                var steps = transactions[i].steps;\n                for (var j = 0; j < steps.length; j += 1) {\n                    outerTr.step(steps[j].map(offsetMap));\n                }\n            }\n            if (outerTr.docChanged) {\n                this.editorView.dispatch(outerTr);\n            }\n        }\n    };\n    CustomBlockView.prototype.update = function (node) {\n        if (!node.sameMarkup(this.node)) {\n            return false;\n        }\n        this.node = node;\n        if (!this.innerEditorView) {\n            this.renderCustomBlock();\n        }\n        return true;\n    };\n    CustomBlockView.prototype.stopEvent = function (event) {\n        return (!!this.innerEditorView &&\n            !!event.target &&\n            this.innerEditorView.dom.contains(event.target));\n    };\n    CustomBlockView.prototype.ignoreMutation = function () {\n        return true;\n    };\n    CustomBlockView.prototype.destroy = function () {\n        this.dom.removeEventListener('dblclick', this.openEditor);\n        this.closeEditor();\n    };\n    return CustomBlockView;\n}());\n\nvar IMAGE_LINK_CLASS_NAME = 'image-link';\nvar ImageView = /** @class */ (function () {\n    function ImageView(node, view, getPos, eventEmitter) {\n        var _this = this;\n        var _a;\n        this.handleMousedown = function (ev) {\n            ev.preventDefault();\n            var target = ev.target, offsetX = ev.offsetX, offsetY = ev.offsetY;\n            if (_this.imageLink &&\n                isFunction_1(_this.getPos) &&\n                hasClass_1(target, IMAGE_LINK_CLASS_NAME)) {\n                var style = getComputedStyle(target, ':before');\n                ev.stopPropagation();\n                if (isPositionInBox(style, offsetX, offsetY)) {\n                    var tr = _this.view.state.tr;\n                    var pos = _this.getPos();\n                    tr.setSelection(createTextSelection(tr, pos, pos + 1));\n                    _this.view.dispatch(tr);\n                    _this.eventEmitter.emit('openPopup', 'link', _this.imageLink.attrs);\n                }\n            }\n        };\n        this.node = node;\n        this.view = view;\n        this.getPos = getPos;\n        this.eventEmitter = eventEmitter;\n        this.imageLink = (_a = node.marks.filter(function (_a) {\n            var type = _a.type;\n            return type.name === 'link';\n        })[0]) !== null && _a !== void 0 ? _a : null;\n        this.dom = this.createElement();\n        this.bindEvent();\n    }\n    ImageView.prototype.createElement = function () {\n        var image = this.createImageElement(this.node);\n        if (this.imageLink) {\n            var wrapper = document.createElement('span');\n            wrapper.className = IMAGE_LINK_CLASS_NAME;\n            wrapper.appendChild(image);\n            return wrapper;\n        }\n        return image;\n    };\n    ImageView.prototype.createImageElement = function (node) {\n        var image = document.createElement('img');\n        var _a = node.attrs, imageUrl = _a.imageUrl, altText = _a.altText;\n        var attrs = getCustomAttrs(node.attrs);\n        image.src = imageUrl;\n        if (altText) {\n            image.alt = altText;\n        }\n        setAttributes(attrs, image);\n        return image;\n    };\n    ImageView.prototype.bindEvent = function () {\n        if (this.imageLink) {\n            this.dom.addEventListener('mousedown', this.handleMousedown);\n        }\n    };\n    ImageView.prototype.stopEvent = function () {\n        return true;\n    };\n    ImageView.prototype.destroy = function () {\n        if (this.imageLink) {\n            this.dom.removeEventListener('mousedown', this.handleMousedown);\n        }\n    };\n    return ImageView;\n}());\n\nvar WRAPPER_CLASS_NAME = 'toastui-editor-ww-code-block';\nvar CODE_BLOCK_LANG_CLASS_NAME = 'toastui-editor-ww-code-block-language';\nvar CodeBlockView = /** @class */ (function () {\n    function CodeBlockView(node, view, getPos, eventEmitter) {\n        var _this = this;\n        this.contentDOM = null;\n        this.input = null;\n        this.timer = null;\n        this.handleMousedown = function (ev) {\n            var target = ev.target;\n            var style = getComputedStyle(target, ':after');\n            // judge to click pseudo element with background image for IE11\n            if (style.backgroundImage !== 'none' && isFunction_1(_this.getPos)) {\n                var _a = _this.view.coordsAtPos(_this.getPos()), top_1 = _a.top, right = _a.right;\n                _this.createLanguageEditor({ top: top_1, right: right });\n            }\n        };\n        this.handleKeydown = function (ev) {\n            if (ev.key === 'Enter' && _this.input) {\n                ev.preventDefault();\n                _this.changeLanguage();\n            }\n        };\n        this.node = node;\n        this.view = view;\n        this.getPos = getPos;\n        this.eventEmitter = eventEmitter;\n        this.createElement();\n        this.bindDOMEvent();\n        this.bindEvent();\n    }\n    CodeBlockView.prototype.createElement = function () {\n        var language = this.node.attrs.language;\n        var wrapper = document.createElement('div');\n        wrapper.setAttribute('data-language', language || 'text');\n        wrapper.className = WRAPPER_CLASS_NAME;\n        var pre = this.createCodeBlockElement();\n        var code = pre.firstChild;\n        wrapper.appendChild(pre);\n        this.dom = wrapper;\n        this.contentDOM = code;\n    };\n    CodeBlockView.prototype.createCodeBlockElement = function () {\n        var pre = document.createElement('pre');\n        var code = document.createElement('code');\n        var language = this.node.attrs.language;\n        var attrs = getCustomAttrs(this.node.attrs);\n        if (language) {\n            code.setAttribute('data-language', language);\n        }\n        setAttributes(attrs, pre);\n        pre.appendChild(code);\n        return pre;\n    };\n    CodeBlockView.prototype.createLanguageEditor = function (_a) {\n        var _this = this;\n        var top = _a.top, right = _a.right;\n        var wrapper = document.createElement('span');\n        wrapper.className = CODE_BLOCK_LANG_CLASS_NAME;\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.value = this.node.attrs.language;\n        wrapper.appendChild(input);\n        this.view.dom.parentElement.appendChild(wrapper);\n        var wrpperWidth = wrapper.clientWidth;\n        css_1(wrapper, {\n            top: top + 10 + \"px\",\n            left: right - wrpperWidth - 10 + \"px\",\n            width: wrpperWidth + \"px\",\n        });\n        this.input = input;\n        this.input.addEventListener('blur', function () { return _this.changeLanguage(); });\n        this.input.addEventListener('keydown', this.handleKeydown);\n        this.clearTimer();\n        this.timer = setTimeout(function () {\n            _this.input.focus();\n        });\n    };\n    CodeBlockView.prototype.bindDOMEvent = function () {\n        if (this.dom) {\n            this.dom.addEventListener('click', this.handleMousedown);\n        }\n    };\n    CodeBlockView.prototype.bindEvent = function () {\n        var _this = this;\n        this.eventEmitter.listen('scroll', function () {\n            if (_this.input) {\n                _this.reset();\n            }\n        });\n    };\n    CodeBlockView.prototype.changeLanguage = function () {\n        if (this.input && isFunction_1(this.getPos)) {\n            var value = this.input.value;\n            this.reset();\n            var pos = this.getPos();\n            var tr = this.view.state.tr;\n            tr.setNodeMarkup(pos, null, { language: value });\n            this.view.dispatch(tr);\n        }\n    };\n    CodeBlockView.prototype.reset = function () {\n        var _a;\n        if ((_a = this.input) === null || _a === void 0 ? void 0 : _a.parentElement) {\n            var parent_1 = this.input.parentElement;\n            this.input = null;\n            removeNode$1(parent_1);\n        }\n    };\n    CodeBlockView.prototype.clearTimer = function () {\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n    };\n    CodeBlockView.prototype.stopEvent = function () {\n        return true;\n    };\n    CodeBlockView.prototype.update = function (node) {\n        if (!node.sameMarkup(this.node)) {\n            return false;\n        }\n        this.node = node;\n        return true;\n    };\n    CodeBlockView.prototype.destroy = function () {\n        this.reset();\n        this.clearTimer();\n        if (this.dom) {\n            this.dom.removeEventListener('click', this.handleMousedown);\n        }\n    };\n    return CodeBlockView;\n}());\n\nvar reMSOListClassName = /MsoListParagraph/;\nvar reMSOStylePrefix = /style=(.|\\n)*mso-/;\nvar reMSOListStyle = /mso-list:(.*)/;\nvar reMSOTagName = /O:P/;\nvar reMSOListBullet = /^(n|u|l)/;\nvar MSO_CLASS_NAME_LIST_PARA = 'p.MsoListParagraph';\nfunction isFromMso(html) {\n    return reMSOStylePrefix.test(html);\n}\nfunction getListItemContents(para) {\n    var removedNodes = [];\n    var walker = document.createTreeWalker(para, 1, null, false);\n    while (walker.nextNode()) {\n        var node = walker.currentNode;\n        if (isElemNode(node)) {\n            var _a = node, outerHTML = _a.outerHTML, textContent = _a.textContent;\n            var msoSpan = reMSOStylePrefix.test(outerHTML);\n            var bulletSpan = reMSOListStyle.test(outerHTML);\n            if (msoSpan && !bulletSpan && textContent) {\n                removedNodes.push([node, true]);\n            }\n            else if (reMSOTagName.test(node.nodeName) || (msoSpan && !textContent) || bulletSpan) {\n                removedNodes.push([node, false]);\n            }\n        }\n    }\n    removedNodes.forEach(function (_a) {\n        var node = _a[0], isUnwrap = _a[1];\n        if (isUnwrap) {\n            unwrapNode(node);\n        }\n        else {\n            removeNode$1(node);\n        }\n    });\n    return para.innerHTML.trim();\n}\nfunction createListItemDataFromParagraph(para, index) {\n    var styleAttr = para.getAttribute('style');\n    if (styleAttr) {\n        var _a = styleAttr.match(reMSOListStyle), listItemInfo = _a[1];\n        var _b = listItemInfo.trim().split(' '), levelStr = _b[1];\n        var level = parseInt(levelStr.replace('level', ''), 10);\n        var unordered = reMSOListBullet.test(para.textContent || '');\n        return {\n            id: index,\n            level: level,\n            prev: null,\n            parent: null,\n            children: [],\n            unordered: unordered,\n            contents: getListItemContents(para),\n        };\n    }\n    return null;\n}\nfunction addListItemDetailData(data, prevData) {\n    if (prevData.level < data.level) {\n        prevData.children.push(data);\n        data.parent = prevData;\n    }\n    else {\n        while (prevData) {\n            if (prevData.level === data.level) {\n                break;\n            }\n            prevData = prevData.parent;\n        }\n        if (prevData) {\n            data.prev = prevData;\n            data.parent = prevData.parent;\n            if (data.parent) {\n                data.parent.children.push(data);\n            }\n        }\n    }\n}\nfunction createListData(paras) {\n    var listData = [];\n    paras.forEach(function (para, index) {\n        var prevListItemData = listData[index - 1];\n        var listItemData = createListItemDataFromParagraph(para, index);\n        if (listItemData) {\n            if (prevListItemData) {\n                addListItemDetailData(listItemData, prevListItemData);\n            }\n            listData.push(listItemData);\n        }\n    });\n    return listData;\n}\nfunction makeList(listData) {\n    var listTagName = listData[0].unordered ? 'ul' : 'ol';\n    var list = document.createElement(listTagName);\n    listData.forEach(function (data) {\n        var children = data.children, contents = data.contents;\n        var listItem = document.createElement('li');\n        listItem.innerHTML = contents;\n        list.appendChild(listItem);\n        if (children.length) {\n            list.appendChild(makeList(children));\n        }\n    });\n    return list;\n}\nfunction makeListFromParagraphs(paras) {\n    var listData = createListData(paras);\n    var rootChildren = listData.filter(function (_a) {\n        var parent = _a.parent;\n        return !parent;\n    });\n    return makeList(rootChildren);\n}\nfunction isMsoListParagraphEnd(node) {\n    while (node) {\n        if (isElemNode(node)) {\n            break;\n        }\n        node = node.nextSibling;\n    }\n    return node ? !reMSOListClassName.test(node.className) : true;\n}\nfunction convertMsoParagraphsToList(html) {\n    var container = document.createElement('div');\n    container.innerHTML = html;\n    var paras = [];\n    var foundParas = findNodes(container, MSO_CLASS_NAME_LIST_PARA);\n    foundParas.forEach(function (para) {\n        var msoListParaEnd = isMsoListParagraphEnd(para.nextSibling);\n        paras.push(para);\n        if (msoListParaEnd) {\n            var list = makeListFromParagraphs(paras);\n            var nextSibling = para.nextSibling;\n            if (nextSibling) {\n                insertBeforeNode(list, nextSibling);\n            }\n            else {\n                appendNodes(container, list);\n            }\n            paras = [];\n        }\n        removeNode$1(para);\n    });\n    // without `<p></p>`, the list string was parsed as a paragraph node and added\n    var extraHTML = foundParas.length ? '<p></p>' : '';\n    return \"\" + extraHTML + container.innerHTML;\n}\n\nvar START_FRAGMENT_COMMENT = '<!--StartFragment-->';\nvar END_FRAGMENT_COMMENT = '<!--EndFragment-->';\nfunction getContentBetweenFragmentComments(html) {\n    var startFragmentIndex = html.indexOf(START_FRAGMENT_COMMENT);\n    var endFragmentIndex = html.lastIndexOf(END_FRAGMENT_COMMENT);\n    if (startFragmentIndex > -1 && endFragmentIndex > -1) {\n        html = html.slice(startFragmentIndex + START_FRAGMENT_COMMENT.length, endFragmentIndex);\n    }\n    return html.replace(/<br[^>]*>/g, ALTERNATIVE_TAG_FOR_BR);\n}\nfunction convertMsoTableToCompletedTable(html) {\n    // wrap with <tr> if html contains dangling <td> tags\n    // dangling <td> tag is that tag does not have <tr> as parent node\n    if (/<\\/td>((?!<\\/tr>)[\\s\\S])*$/i.test(html)) {\n        html = \"<tr>\" + html + \"</tr>\";\n    }\n    // wrap with <table> if html contains dangling <tr> tags\n    // dangling <tr> tag is that tag does not have <table> as parent node\n    if (/<\\/tr>((?!<\\/table>)[\\s\\S])*$/i.test(html)) {\n        html = \"<table>\" + html + \"</table>\";\n    }\n    return html;\n}\nfunction changePastedHTML(html) {\n    html = getContentBetweenFragmentComments(html);\n    html = convertMsoTableToCompletedTable(html);\n    if (isFromMso(html)) {\n        html = convertMsoParagraphsToList(html);\n    }\n    return html;\n}\nfunction getMaxColumnCount(rows) {\n    var row = rows.reduce(function (prevRow, currentRow) {\n        return prevRow.childCount > currentRow.childCount ? prevRow : currentRow;\n    });\n    return row.childCount;\n}\nfunction createCells(orgRow, maxColumnCount, cell) {\n    var cells = [];\n    var cellCount = orgRow.childCount;\n    for (var colIdx = 0; colIdx < cellCount; colIdx += 1) {\n        if (!orgRow.child(colIdx).attrs.extended) {\n            var copiedCell = colIdx < cellCount\n                ? cell.create(orgRow.child(colIdx).attrs, orgRow.child(colIdx).content)\n                : cell.createAndFill();\n            cells.push(copiedCell);\n        }\n    }\n    return cells;\n}\nfunction copyTableHeadRow(orgRow, maxColumnCount, schema) {\n    var _a = schema.nodes, tableRow = _a.tableRow, tableHeadCell = _a.tableHeadCell;\n    var cells = createCells(orgRow, maxColumnCount, tableHeadCell);\n    return tableRow.create(null, cells);\n}\nfunction copyTableBodyRow(orgRow, maxColumnCount, schema) {\n    var _a = schema.nodes, tableRow = _a.tableRow, tableBodyCell = _a.tableBodyCell;\n    var cells = createCells(orgRow, maxColumnCount, tableBodyCell);\n    return tableRow.create(null, cells);\n}\nfunction creatTableBodyDummyRow(columnCount, schema) {\n    var _a = schema.nodes, tableRow = _a.tableRow, tableBodyCell = _a.tableBodyCell;\n    var cells = [];\n    for (var columnIndex = 0; columnIndex < columnCount; columnIndex += 1) {\n        var dummyCell = tableBodyCell.createAndFill();\n        cells.push(dummyCell);\n    }\n    return tableRow.create({ dummyRowForPasting: true }, cells);\n}\nfunction createRowsFromPastingTable(tableContent) {\n    var tableHeadRows = [];\n    var tableBodyRows = [];\n    if (tableContent.firstChild.type.name === 'tableHead') {\n        var tableHead = tableContent.firstChild;\n        tableHead.forEach(function (row) { return tableHeadRows.push(row); });\n    }\n    if (tableContent.lastChild.type.name === 'tableBody') {\n        var tableBody = tableContent.lastChild;\n        tableBody.forEach(function (row) { return tableBodyRows.push(row); });\n    }\n    return __spreadArray$1(__spreadArray$1([], tableHeadRows), tableBodyRows);\n}\nfunction createTableHead(tableHeadRow, maxColumnCount, schema) {\n    var copiedRow = copyTableHeadRow(tableHeadRow, maxColumnCount, schema);\n    return schema.nodes.tableHead.create(null, copiedRow);\n}\nfunction createTableBody(tableBodyRows, maxColumnCount, schema) {\n    var copiedRows = tableBodyRows.map(function (tableBodyRow) {\n        return copyTableBodyRow(tableBodyRow, maxColumnCount, schema);\n    });\n    if (!tableBodyRows.length) {\n        var dummyTableRow = creatTableBodyDummyRow(maxColumnCount, schema);\n        copiedRows.push(dummyTableRow);\n    }\n    return schema.nodes.tableBody.create(null, copiedRows);\n}\nfunction createTableFromPastingTable(rows, schema, startFromBody, isInTable) {\n    var columnCount = getMaxColumnCount(rows);\n    if (startFromBody && isInTable) {\n        return schema.nodes.table.create(null, [createTableBody(rows, columnCount, schema)]);\n    }\n    var tableHeadRow = rows[0];\n    var tableBodyRows = rows.slice(1);\n    var nodes = [createTableHead(tableHeadRow, columnCount, schema)];\n    if (tableBodyRows.length) {\n        nodes.push(createTableBody(tableBodyRows, columnCount, schema));\n    }\n    return schema.nodes.table.create(null, nodes);\n}\nfunction changePastedSlice(slice, schema, isInTable) {\n    var nodes = [];\n    var content = slice.content, openStart = slice.openStart, openEnd = slice.openEnd;\n    content.forEach(function (node) {\n        if (node.type.name === 'table') {\n            var tableContent = getTableContentFromSlice(new Slice(Fragment.from(node), 0, 0));\n            if (tableContent) {\n                var rows = createRowsFromPastingTable(tableContent);\n                var startFromBody = tableContent.firstChild.type.name === 'tableBody';\n                var table = createTableFromPastingTable(rows, schema, startFromBody, isInTable);\n                nodes.push(table);\n            }\n        }\n        else {\n            nodes.push(node);\n        }\n    });\n    return new Slice(Fragment.from(nodes), openStart, openEnd);\n}\n\nvar DUMMY_CELL_SIZE = 4;\nvar TR_NODES_SIZE = 2;\nfunction getDummyCellSize(dummyCellCount) {\n    return dummyCellCount * DUMMY_CELL_SIZE;\n}\nfunction createPastingCells(tableContent, curSelectionInfo, schema) {\n    var pastingRows = [];\n    var pastingTableRows = createRowsFromPastingTable(tableContent);\n    var columnCount = pastingTableRows[0].childCount;\n    var rowCount = pastingTableRows.length;\n    var startToTableHead = curSelectionInfo.startRowIdx === 0;\n    var slicedRows = pastingTableRows.slice(0, rowCount);\n    if (startToTableHead) {\n        var tableHeadRow = slicedRows.shift();\n        if (tableHeadRow) {\n            var content = copyTableHeadRow(tableHeadRow, columnCount, schema).content;\n            pastingRows.push(content);\n        }\n    }\n    slicedRows.forEach(function (tableBodyRow) {\n        if (!tableBodyRow.attrs.dummyRowForPasting) {\n            var content = copyTableBodyRow(tableBodyRow, columnCount, schema).content;\n            pastingRows.push(content);\n        }\n    });\n    return pastingRows;\n}\nfunction getPastingRangeInfo(map, _a, pastingCells) {\n    var startRowIdx = _a.startRowIdx, startColIdx = _a.startColIdx;\n    var pastingRowCount = pastingCells.length;\n    var pastingColumnCount = 0;\n    var _loop_1 = function (i) {\n        var columnCount = pastingCells[i].childCount;\n        pastingCells[i].forEach(function (_a) {\n            var attrs = _a.attrs;\n            var colspan = attrs.colspan;\n            if (colspan > 1) {\n                columnCount += colspan - 1;\n            }\n        });\n        pastingColumnCount = Math.max(pastingColumnCount, columnCount);\n    };\n    for (var i = 0; i < pastingRowCount; i += 1) {\n        _loop_1(i);\n    }\n    var endRowIdx = startRowIdx + pastingRowCount - 1;\n    var endColIdx = startColIdx + pastingColumnCount - 1;\n    var addedRowCount = Math.max(endRowIdx + 1 - map.totalRowCount, 0);\n    var addedColumnCount = Math.max(endColIdx + 1 - map.totalColumnCount, 0);\n    return {\n        startRowIdx: startRowIdx,\n        startColIdx: startColIdx,\n        endRowIdx: endRowIdx,\n        endColIdx: endColIdx,\n        addedRowCount: addedRowCount,\n        addedColumnCount: addedColumnCount,\n    };\n}\nfunction addReplacedOffsets(_a, cellsOffsets) {\n    var startRowIdx = _a.startRowIdx, startColIdx = _a.startColIdx, endRowIdx = _a.endRowIdx, endColIdx = _a.endColIdx, addedRowCount = _a.addedRowCount, addedColumnCount = _a.addedColumnCount;\n    for (var rowIdx = startRowIdx; rowIdx <= endRowIdx - addedRowCount; rowIdx += 1) {\n        cellsOffsets.push({\n            rowIdx: rowIdx,\n            startColIdx: startColIdx,\n            endColIdx: endColIdx - addedColumnCount,\n        });\n    }\n}\nfunction expandColumns(tr, schema, map, _a, cellsOffsets) {\n    var startRowIdx = _a.startRowIdx, startColIdx = _a.startColIdx, endRowIdx = _a.endRowIdx, endColIdx = _a.endColIdx, addedRowCount = _a.addedRowCount, addedColumnCount = _a.addedColumnCount;\n    var totalRowCount = map.totalRowCount;\n    var index = 0;\n    for (var rowIdx = 0; rowIdx < totalRowCount; rowIdx += 1) {\n        var _b = map.getCellInfo(rowIdx, endColIdx - addedColumnCount), offset = _b.offset, nodeSize = _b.nodeSize;\n        var insertOffset = tr.mapping.map(offset + nodeSize);\n        var cells = createDummyCells(addedColumnCount, rowIdx, schema);\n        tr.insert(insertOffset, cells);\n        if (rowIdx >= startRowIdx && rowIdx <= endRowIdx - addedRowCount) {\n            var cellInfo = map.getCellInfo(rowIdx, endColIdx - addedColumnCount);\n            var startCellOffset = tr.mapping.map(cellInfo.offset);\n            var endCellOffset = insertOffset + getDummyCellSize(addedColumnCount);\n            cellsOffsets[index] = {\n                rowIdx: rowIdx,\n                startColIdx: startColIdx,\n                endColIdx: endColIdx,\n                dummyOffsets: [startCellOffset, endCellOffset],\n            };\n            index += 1;\n        }\n    }\n}\nfunction expandRows(tr, schema, map, _a, cellsOffsets) {\n    var addedRowCount = _a.addedRowCount, addedColumnCount = _a.addedColumnCount, startColIdx = _a.startColIdx, endColIdx = _a.endColIdx;\n    var mapStart = tr.mapping.maps.length;\n    var tableEndPos = map.tableEndOffset - 2;\n    var rows = createTableBodyRows(addedRowCount, map.totalColumnCount + addedColumnCount, schema);\n    var startOffset = tableEndPos;\n    tr.insert(tr.mapping.slice(mapStart).map(startOffset), rows);\n    for (var rowIndex = 0; rowIndex < addedRowCount; rowIndex += 1) {\n        var startCellOffset = startOffset + getDummyCellSize(startColIdx) + 1;\n        var endCellOffset = startOffset + getDummyCellSize(endColIdx + 1) + 1;\n        var nextCellOffset = startOffset + getDummyCellSize(map.totalColumnCount + addedColumnCount) + TR_NODES_SIZE;\n        cellsOffsets.push({\n            rowIdx: rowIndex + map.totalRowCount,\n            startColIdx: startColIdx,\n            endColIdx: endColIdx,\n            dummyOffsets: [startCellOffset, endCellOffset],\n        });\n        startOffset = nextCellOffset;\n    }\n}\nfunction replaceCells(tr, pastingRows, cellsOffsets, map) {\n    var mapStart = tr.mapping.maps.length;\n    cellsOffsets.forEach(function (offsets, index) {\n        var rowIdx = offsets.rowIdx, startColIdx = offsets.startColIdx, endColIdx = offsets.endColIdx, dummyOffsets = offsets.dummyOffsets;\n        var mapping = tr.mapping.slice(mapStart);\n        var cells = new Slice(pastingRows[index], 0, 0);\n        var from = dummyOffsets ? dummyOffsets[0] : map.getCellStartOffset(rowIdx, startColIdx);\n        var to = dummyOffsets ? dummyOffsets[1] : map.getCellEndOffset(rowIdx, endColIdx);\n        tr.replace(mapping.map(from), mapping.map(to), cells);\n    });\n}\nfunction pasteToTable(view, slice) {\n    var _a = view.state, selection = _a.selection, schema = _a.schema, tr = _a.tr;\n    var _b = getResolvedSelection(selection), anchor = _b.anchor, head = _b.head;\n    if (anchor && head) {\n        var tableContent = getTableContentFromSlice(slice);\n        if (!tableContent) {\n            return false;\n        }\n        var map = TableOffsetMap.create(anchor);\n        var curSelectionInfo = map.getRectOffsets(anchor, head);\n        var pastingCells = createPastingCells(tableContent, curSelectionInfo, schema);\n        var pastingInfo = getPastingRangeInfo(map, curSelectionInfo, pastingCells);\n        var cellsOffsets = [];\n        // @TODO: unmerge the span and paste the cell\n        if (canMerge(map, pastingInfo)) {\n            addReplacedOffsets(pastingInfo, cellsOffsets);\n            if (pastingInfo.addedColumnCount) {\n                expandColumns(tr, schema, map, pastingInfo, cellsOffsets);\n            }\n            if (pastingInfo.addedRowCount) {\n                expandRows(tr, schema, map, pastingInfo, cellsOffsets);\n            }\n            replaceCells(tr, pastingCells, cellsOffsets, map);\n            view.dispatch(tr);\n            setSelection(view, cellsOffsets, map.getCellInfo(0, 0).offset);\n        }\n        return true;\n    }\n    return false;\n}\nfunction setSelection(view, cellsOffsets, pos) {\n    var _a = view.state, tr = _a.tr, doc = _a.doc;\n    // get changed cell offsets\n    var map = TableOffsetMap.create(doc.resolve(pos));\n    // eslint-disable-next-line prefer-destructuring\n    var _b = cellsOffsets[0], startRowIdx = _b.rowIdx, startColIdx = _b.startColIdx;\n    var _c = last$1(cellsOffsets), endRowIdx = _c.rowIdx, endColIdx = _c.endColIdx;\n    var startOffset = map.getCellInfo(startRowIdx, startColIdx).offset;\n    var endOffset = map.getCellInfo(endRowIdx, endColIdx).offset;\n    view.dispatch(tr.setSelection(new CellSelection(doc.resolve(startOffset), doc.resolve(endOffset))));\n}\nfunction canMerge(map, pastingInfo) {\n    var ranges = map.getSpannedOffsets(pastingInfo);\n    var _a = getRowAndColumnCount(ranges), rowCount = _a.rowCount, columnCount = _a.columnCount;\n    var _b = getRowAndColumnCount(pastingInfo), pastingRowCount = _b.rowCount, pastingColumnCount = _b.columnCount;\n    return rowCount === pastingRowCount && columnCount === pastingColumnCount;\n}\n\nvar Doc = /** @class */ (function (_super) {\n    __extends$1(Doc, _super);\n    function Doc() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Doc.prototype, \"name\", {\n        get: function () {\n            return 'doc';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Doc.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'block+',\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Doc;\n}(Node$2));\n\nvar Paragraph = /** @class */ (function (_super) {\n    __extends$1(Paragraph, _super);\n    function Paragraph() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Paragraph.prototype, \"name\", {\n        get: function () {\n            return 'paragraph';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Paragraph.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'inline*',\n                group: 'block',\n                attrs: __assign$1({}, getDefaultCustomAttrs()),\n                parseDOM: [{ tag: 'p' }],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['p', getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Paragraph;\n}(Node$2));\n\nvar reSoftTabLen = /\\s{1,4}$/;\nvar Text = /** @class */ (function (_super) {\n    __extends$1(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Text.prototype, \"name\", {\n        get: function () {\n            return 'text';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"schema\", {\n        get: function () {\n            return {\n                group: 'inline',\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Text.prototype.addSpaces = function () {\n        return function (_a, dispatch) {\n            var selection = _a.selection, tr = _a.tr;\n            var $from = selection.$from, $to = selection.$to;\n            var range = $from.blockRange($to);\n            if (range && !isInListNode($from) && !isInTableNode($from)) {\n                dispatch(tr.insertText('    ', $from.pos, $to.pos));\n                return true;\n            }\n            return false;\n        };\n    };\n    Text.prototype.removeSpaces = function () {\n        return function (_a, dispatch) {\n            var selection = _a.selection, tr = _a.tr;\n            var $from = selection.$from, $to = selection.$to, from = selection.from;\n            var range = $from.blockRange($to);\n            if (range && !isInListNode($from) && !isInTableNode($from)) {\n                var nodeBefore = $from.nodeBefore;\n                if (nodeBefore && nodeBefore.isText) {\n                    var text = nodeBefore.text;\n                    var removedSpaceText = text.replace(reSoftTabLen, '');\n                    var spaces = text.length - removedSpaceText.length;\n                    dispatch(tr.delete(from - spaces, from));\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    Text.prototype.keymaps = function () {\n        return {\n            Tab: this.addSpaces(),\n            'Shift-Tab': this.removeSpaces(),\n        };\n    };\n    return Text;\n}(Node$2));\n\nvar Heading = /** @class */ (function (_super) {\n    __extends$1(Heading, _super);\n    function Heading() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Heading.prototype, \"name\", {\n        get: function () {\n            return 'heading';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Heading.prototype, \"levels\", {\n        get: function () {\n            return [1, 2, 3, 4, 5, 6];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Heading.prototype, \"schema\", {\n        get: function () {\n            var parseDOM = this.levels.map(function (level) {\n                return {\n                    tag: \"h\" + level,\n                    getAttrs: function (dom) {\n                        var rawHTML = dom.getAttribute('data-raw-html');\n                        return __assign$1({ level: level }, (rawHTML && { rawHTML: rawHTML }));\n                    },\n                };\n            });\n            return {\n                attrs: __assign$1({ level: { default: 1 }, headingType: { default: 'atx' }, rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                content: 'inline*',\n                group: 'block',\n                defining: true,\n                parseDOM: parseDOM,\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [\"h\" + attrs.level, getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Heading.prototype.commands = function () {\n        return function (payload) { return function (state, dispatch) {\n            var nodeType = state.schema.nodes[payload.level ? 'heading' : 'paragraph'];\n            return setBlockType(nodeType, payload)(state, dispatch);\n        }; };\n    };\n    return Heading;\n}(Node$2));\n\nvar CodeBlock = /** @class */ (function (_super) {\n    __extends$1(CodeBlock, _super);\n    function CodeBlock() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CodeBlock.prototype, \"name\", {\n        get: function () {\n            return 'codeBlock';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CodeBlock.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'text*',\n                group: 'block',\n                attrs: __assign$1({ language: { default: null }, rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                code: true,\n                defining: true,\n                marks: '',\n                parseDOM: [\n                    {\n                        tag: 'pre',\n                        preserveWhitespace: 'full',\n                        getAttrs: function (dom) {\n                            var rawHTML = dom.getAttribute('data-raw-html');\n                            var child = dom.firstElementChild;\n                            return __assign$1({ language: (child === null || child === void 0 ? void 0 : child.getAttribute('data-language')) || null }, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [\n                        attrs.rawHTML || 'pre',\n                        ['code', __assign$1({ 'data-language': attrs.language }, getCustomAttrs(attrs)), 0],\n                    ];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CodeBlock.prototype.commands = function () {\n        return function () { return function (state, dispatch) { return setBlockType(state.schema.nodes.codeBlock)(state, dispatch); }; };\n    };\n    CodeBlock.prototype.moveCursor = function (direction) {\n        var _this = this;\n        return function (state, dispatch) {\n            var tr = state.tr, doc = state.doc, schema = state.schema;\n            var $from = state.selection.$from;\n            var view = _this.context.view;\n            if (view.endOfTextblock(direction) && $from.node().type.name === 'codeBlock') {\n                var lines = $from.parent.textContent.split('\\n');\n                var offset = direction === 'up' ? $from.start() : $from.end();\n                var range = direction === 'up'\n                    ? [offset, lines[0].length + offset]\n                    : [offset - last$1(lines).length, offset];\n                var pos = doc.resolve(direction === 'up' ? $from.before() : $from.after());\n                var node = direction === 'up' ? pos.nodeBefore : pos.nodeAfter;\n                if (between$1($from.pos, range[0], range[1]) && !node) {\n                    var newTr = addParagraph(tr, pos, schema);\n                    if (newTr) {\n                        dispatch(newTr);\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n    };\n    CodeBlock.prototype.keymaps = function () {\n        var codeCommand = this.commands()();\n        return {\n            'Shift-Mod-p': codeCommand,\n            'Shift-Mod-P': codeCommand,\n            ArrowUp: this.moveCursor('up'),\n            ArrowDown: this.moveCursor('down'),\n        };\n    };\n    return CodeBlock;\n}(Node$2));\n\nvar BulletList = /** @class */ (function (_super) {\n    __extends$1(BulletList, _super);\n    function BulletList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BulletList.prototype, \"name\", {\n        get: function () {\n            return 'bulletList';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BulletList.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'listItem+',\n                group: 'block',\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: [createDOMInfoParsedRawHTML('ul')],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['ul', getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BulletList.prototype.changeList = function () {\n        return function (state, dispatch) { return changeList(state.schema.nodes.bulletList)(state, dispatch); };\n    };\n    BulletList.prototype.commands = function () {\n        return {\n            bulletList: this.changeList,\n            taskList: toggleTask,\n        };\n    };\n    BulletList.prototype.keymaps = function () {\n        var bulletListCommand = this.changeList();\n        var _a = getWwCommands(), indent = _a.indent, outdent = _a.outdent;\n        return {\n            'Mod-u': bulletListCommand,\n            'Mod-U': bulletListCommand,\n            Tab: indent(),\n            'Shift-Tab': outdent(),\n        };\n    };\n    return BulletList;\n}(Node$2));\n\nvar OrderedList = /** @class */ (function (_super) {\n    __extends$1(OrderedList, _super);\n    function OrderedList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(OrderedList.prototype, \"name\", {\n        get: function () {\n            return 'orderedList';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OrderedList.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'listItem+',\n                group: 'block',\n                attrs: __assign$1({ order: { default: 1 }, rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: [\n                    {\n                        tag: 'ol',\n                        getAttrs: function (dom) {\n                            var start = dom.getAttribute('start');\n                            var rawHTML = dom.getAttribute('data-raw-html');\n                            return __assign$1({ order: dom.hasAttribute('start') ? Number(start) : 1 }, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [\n                        attrs.rawHTML || 'ol',\n                        __assign$1({ start: attrs.order === 1 ? null : attrs.order }, getCustomAttrs(attrs)),\n                        0,\n                    ];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OrderedList.prototype.commands = function () {\n        return function () { return function (state, dispatch) { return changeList(state.schema.nodes.orderedList)(state, dispatch); }; };\n    };\n    OrderedList.prototype.keymaps = function () {\n        var orderedListCommand = this.commands()();\n        var _a = getWwCommands(), indent = _a.indent, outdent = _a.outdent;\n        return {\n            'Mod-o': orderedListCommand,\n            'Mod-O': orderedListCommand,\n            Tab: indent(),\n            'Shift-Tab': outdent(),\n        };\n    };\n    return OrderedList;\n}(Node$2));\n\nvar ListItem = /** @class */ (function (_super) {\n    __extends$1(ListItem, _super);\n    function ListItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ListItem.prototype, \"name\", {\n        get: function () {\n            return 'listItem';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ListItem.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'paragraph block*',\n                selectable: false,\n                attrs: {\n                    task: { default: false },\n                    checked: { default: false },\n                    rawHTML: { default: null },\n                },\n                defining: true,\n                parseDOM: [\n                    {\n                        tag: 'li',\n                        getAttrs: function (dom) {\n                            var rawHTML = dom.getAttribute('data-raw-html');\n                            return __assign$1({ task: dom.hasAttribute('data-task'), checked: dom.hasAttribute('data-task-checked') }, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    var task = attrs.task, checked = attrs.checked;\n                    if (!task) {\n                        return [attrs.rawHTML || 'li', 0];\n                    }\n                    var classNames = ['task-list-item'];\n                    if (checked) {\n                        classNames.push('checked');\n                    }\n                    return [\n                        attrs.rawHTML || 'li',\n                        __assign$1({ class: classNames.join(' '), 'data-task': task }, (checked && { 'data-task-checked': checked })),\n                        0,\n                    ];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ListItem.prototype.liftToPrevListItem = function () {\n        return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr, schema = state.schema;\n            var $from = selection.$from, empty = selection.empty;\n            var listItem = schema.nodes.listItem;\n            var parent = $from.parent;\n            var listItemParent = $from.node(-1);\n            if (empty && !parent.childCount && listItemParent.type === listItem) {\n                // move to previous sibling list item when the current list item is not top list item\n                if ($from.index(-2) >= 1) {\n                    // should subtract '1' for considering tag length(<li>)\n                    tr.delete($from.start(-1) - 1, $from.end(-1));\n                    dispatch(tr);\n                    return true;\n                }\n                var grandParentListItem = $from.node(-3);\n                // move to parent list item when the current list item is top list item\n                if (grandParentListItem.type === listItem) {\n                    // should subtract '1' for considering tag length(<ul>)\n                    tr.delete($from.start(-2) - 1, $from.end(-1));\n                    dispatch(tr);\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    ListItem.prototype.keymaps = function () {\n        var split = function (state, dispatch) {\n            return splitListItem(state.schema.nodes.listItem)(state, dispatch);\n        };\n        return {\n            Backspace: this.liftToPrevListItem(),\n            Enter: split,\n        };\n    };\n    return ListItem;\n}(Node$2));\n\nvar BlockQuote = /** @class */ (function (_super) {\n    __extends$1(BlockQuote, _super);\n    function BlockQuote() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BlockQuote.prototype, \"name\", {\n        get: function () {\n            return 'blockQuote';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BlockQuote.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                content: 'block+',\n                group: 'block',\n                parseDOM: [createDOMInfoParsedRawHTML('blockquote')],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['blockquote', getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BlockQuote.prototype.commands = function () {\n        return function () { return function (state, dispatch) { return wrapIn(state.schema.nodes.blockQuote)(state, dispatch); }; };\n    };\n    BlockQuote.prototype.keymaps = function () {\n        var blockQutoeCommand = this.commands()();\n        return {\n            'Alt-q': blockQutoeCommand,\n            'Alt-Q': blockQutoeCommand,\n        };\n    };\n    return BlockQuote;\n}(Node$2));\n\nvar cellOffsetFnMap = {\n    left: getLeftCellOffset,\n    right: getRightCellOffset,\n    up: getUpCellOffset,\n    down: getDownCellOffset,\n};\nfunction isInFirstListItem(pos, doc, _a) {\n    var paraDepth = _a[0], listDepth = _a[1];\n    var listItemNode = doc.resolve(pos.before(paraDepth - 1));\n    return listDepth === paraDepth && !listItemNode.nodeBefore;\n}\nfunction isInLastListItem(pos) {\n    var _a;\n    var depth = pos.depth;\n    var parentNode;\n    while (depth) {\n        parentNode = pos.node(depth);\n        if (parentNode.type.name === 'tableBodyCell') {\n            break;\n        }\n        if (parentNode.type.name === 'listItem') {\n            var grandParent = pos.node(depth - 1);\n            var lastListItem = grandParent.lastChild === parentNode;\n            var hasChildren = ((_a = parentNode.lastChild) === null || _a === void 0 ? void 0 : _a.type.name) !== 'paragraph';\n            if (!lastListItem) {\n                return false;\n            }\n            return !hasChildren;\n        }\n        depth -= 1;\n    }\n    return false;\n}\nfunction canMoveToBeforeCell(direction, _a, from, doc, inList) {\n    var paraDepth = _a[0], listDepth = _a[1], curDepth = _a[2];\n    if (direction === \"left\" /* LEFT */ || direction === \"up\" /* UP */) {\n        if (inList && !isInFirstListItem(from, doc, [paraDepth, listDepth])) {\n            return false;\n        }\n        var endOffset = from.before(curDepth);\n        var nodeBefore = doc.resolve(endOffset).nodeBefore;\n        if (nodeBefore) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canMoveToAfterCell(direction, curDepth, from, doc, inList) {\n    if (direction === \"right\" /* RIGHT */ || direction === \"down\" /* DOWN */) {\n        if (inList && !isInLastListItem(from)) {\n            return false;\n        }\n        var endOffset = from.after(curDepth);\n        var nodeAfter = doc.resolve(endOffset).nodeAfter;\n        if (nodeAfter) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canMoveBetweenCells(direction, _a, from, doc) {\n    var cellDepth = _a[0], paraDepth = _a[1];\n    var listDepth = cellDepth + 3; // 3 is position of <ul><li><p>\n    var inList = paraDepth >= listDepth;\n    var curDepth = inList ? cellDepth + 1 : paraDepth;\n    var moveBeforeCell = canMoveToBeforeCell(direction, [paraDepth, listDepth, curDepth], from, doc, inList);\n    var moveAfterCell = canMoveToAfterCell(direction, curDepth, from, doc, inList);\n    return moveBeforeCell && moveAfterCell;\n}\nfunction canBeOutOfTable(direction, map, _a) {\n    var rowIdx = _a[0], colIdx = _a[1];\n    var rowspanInfo = map.getRowspanStartInfo(rowIdx, colIdx);\n    var inFirstRow = direction === \"up\" /* UP */ && rowIdx === 0;\n    var inLastRow = direction === \"down\" /* DOWN */ &&\n        ((rowspanInfo === null || rowspanInfo === void 0 ? void 0 : rowspanInfo.count) > 1 ? rowIdx + rowspanInfo.count - 1 : rowIdx) === map.totalRowCount - 1;\n    return inFirstRow || inLastRow;\n}\nfunction addParagraphBeforeTable(tr, map, schema) {\n    var tableStartPos = tr.doc.resolve(map.tableStartOffset - 1);\n    if (!tableStartPos.nodeBefore) {\n        return addParagraph(tr, tableStartPos, schema);\n    }\n    return tr.setSelection(Selection.near(tableStartPos, -1));\n}\nfunction addParagraphAfterTable(tr, map, schema, forcedAddtion) {\n    if (forcedAddtion === void 0) { forcedAddtion = false; }\n    var tableEndPos = tr.doc.resolve(map.tableEndOffset);\n    if (forcedAddtion || !tableEndPos.nodeAfter) {\n        return addParagraph(tr, tableEndPos, schema);\n    }\n    return tr.setSelection(Selection.near(tableEndPos, 1));\n}\nfunction getRightCellOffset(_a, map) {\n    var rowIdx = _a[0], colIdx = _a[1];\n    var totalRowCount = map.totalRowCount, totalColumnCount = map.totalColumnCount;\n    var lastCellInRow = colIdx === totalColumnCount - 1;\n    var lastCellInTable = rowIdx === totalRowCount - 1 && lastCellInRow;\n    if (!lastCellInTable) {\n        var nextColIdx = colIdx + 1;\n        var colspanInfo = map.getColspanStartInfo(rowIdx, colIdx);\n        if ((colspanInfo === null || colspanInfo === void 0 ? void 0 : colspanInfo.count) > 1) {\n            nextColIdx += colspanInfo.count - 1;\n        }\n        if (lastCellInRow || nextColIdx === totalColumnCount) {\n            rowIdx += 1;\n            nextColIdx = 0;\n        }\n        var offset = map.getCellInfo(rowIdx, nextColIdx).offset;\n        return offset + 2;\n    }\n    return null;\n}\nfunction getLeftCellOffset(_a, map) {\n    var rowIdx = _a[0], colIdx = _a[1];\n    var totalColumnCount = map.totalColumnCount;\n    var firstCellInRow = colIdx === 0;\n    var firstCellInTable = rowIdx === 0 && firstCellInRow;\n    if (!firstCellInTable) {\n        colIdx -= 1;\n        if (firstCellInRow) {\n            rowIdx -= 1;\n            colIdx = totalColumnCount - 1;\n        }\n        var _b = map.getCellInfo(rowIdx, colIdx), offset = _b.offset, nodeSize = _b.nodeSize;\n        return offset + nodeSize - 2;\n    }\n    return null;\n}\nfunction getUpCellOffset(_a, map) {\n    var rowIdx = _a[0], colIdx = _a[1];\n    if (rowIdx > 0) {\n        var _b = map.getCellInfo(rowIdx - 1, colIdx), offset = _b.offset, nodeSize = _b.nodeSize;\n        return offset + nodeSize - 2;\n    }\n    return null;\n}\nfunction getDownCellOffset(_a, map) {\n    var rowIdx = _a[0], colIdx = _a[1];\n    var totalRowCount = map.totalRowCount;\n    if (rowIdx < totalRowCount - 1) {\n        var nextRowIdx = rowIdx + 1;\n        var rowspanInfo = map.getRowspanStartInfo(rowIdx, colIdx);\n        if ((rowspanInfo === null || rowspanInfo === void 0 ? void 0 : rowspanInfo.count) > 1) {\n            nextRowIdx += rowspanInfo.count - 1;\n        }\n        var offset = map.getCellInfo(nextRowIdx, colIdx).offset;\n        return offset + 2;\n    }\n    return null;\n}\nfunction moveToCell(direction, tr, cellIndex, map) {\n    var cellOffsetFn = cellOffsetFnMap[direction];\n    var offset = cellOffsetFn(cellIndex, map);\n    if (offset) {\n        var dir = direction === \"right\" /* RIGHT */ || direction === \"down\" /* DOWN */ ? 1 : -1;\n        return tr.setSelection(Selection.near(tr.doc.resolve(offset), dir));\n    }\n    return null;\n}\nfunction canSelectTableNode(direction, map, _a) {\n    var rowIdx = _a[0], colIdx = _a[1];\n    if (direction === \"up\" /* UP */ || direction === \"down\" /* DOWN */) {\n        return false;\n    }\n    var tableStartOffset = map.tableStartOffset, tableEndOffset = map.tableEndOffset;\n    var _b = map.getCellInfo(rowIdx, colIdx), offset = _b.offset, nodeSize = _b.nodeSize;\n    var pos = direction === \"left\" /* LEFT */ ? tableStartOffset : tableEndOffset;\n    var curPos = direction === \"left\" /* LEFT */ ? offset - 2 : offset + nodeSize + 3;\n    return pos === curPos;\n}\nfunction selectNode(tr, pos, depth) {\n    var tablePos = tr.doc.resolve(pos.before(depth - 3));\n    return tr.setSelection(new NodeSelection(tablePos));\n}\n\nfunction getTargetRowInfo(direction, map, selectionInfo) {\n    var targetRowIdx;\n    var insertColIdx;\n    var nodeSize;\n    if (direction === \"up\" /* UP */) {\n        targetRowIdx = selectionInfo.startRowIdx;\n        insertColIdx = 0;\n        nodeSize = -1;\n    }\n    else {\n        targetRowIdx = selectionInfo.endRowIdx;\n        insertColIdx = map.totalColumnCount - 1;\n        nodeSize = map.getCellInfo(targetRowIdx, insertColIdx).nodeSize + 1;\n    }\n    return { targetRowIdx: targetRowIdx, insertColIdx: insertColIdx, nodeSize: nodeSize };\n}\nfunction getRowRanges(map, rowIdx, totalColumnCount) {\n    var startOffset = map.getCellInfo(rowIdx, 0).offset;\n    var _a = map.getCellInfo(rowIdx, totalColumnCount - 1), offset = _a.offset, nodeSize = _a.nodeSize;\n    return { from: startOffset, to: offset + nodeSize };\n}\nvar Table = /** @class */ (function (_super) {\n    __extends$1(Table, _super);\n    function Table() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Table.prototype, \"name\", {\n        get: function () {\n            return 'table';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'tableHead{1} tableBody{1}',\n                group: 'block',\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: [createDOMInfoParsedRawHTML('table')],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['table', getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Table.prototype.addTable = function () {\n        return function (payload) {\n            if (payload === void 0) { payload = { rowCount: 2, columnCount: 1, data: [] }; }\n            return function (state, dispatch) {\n                var rowCount = payload.rowCount, columnCount = payload.columnCount, data = payload.data;\n                var schema = state.schema, selection = state.selection, tr = state.tr;\n                var from = selection.from, to = selection.to, $from = selection.$from;\n                var collapsed = from === to;\n                if (collapsed && !isInTableNode($from)) {\n                    var _a = schema.nodes, tableHead = _a.tableHead, tableBody = _a.tableBody;\n                    var theadData = data === null || data === void 0 ? void 0 : data.slice(0, columnCount);\n                    var tbodyData = data === null || data === void 0 ? void 0 : data.slice(columnCount, data.length);\n                    var tableHeadRow = createTableHeadRow(columnCount, schema, theadData);\n                    var tableBodyRows = createTableBodyRows(rowCount - 1, columnCount, schema, tbodyData);\n                    var table = schema.nodes.table.create(null, [\n                        tableHead.create(null, tableHeadRow),\n                        tableBody.create(null, tableBodyRows),\n                    ]);\n                    dispatch(tr.replaceSelectionWith(table));\n                    return true;\n                }\n                return false;\n            };\n        };\n    };\n    Table.prototype.removeTable = function () {\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr;\n            var map = TableOffsetMap.create(selection.$anchor);\n            if (map) {\n                var tableStartOffset = map.tableStartOffset, tableEndOffset = map.tableEndOffset;\n                var startOffset = tableStartOffset - 1;\n                var cursorPos = createTextSelection(tr.delete(startOffset, tableEndOffset), startOffset);\n                dispatch(tr.setSelection(cursorPos));\n                return true;\n            }\n            return false;\n        }; };\n    };\n    Table.prototype.addColumn = function (direction) {\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr, schema = state.schema;\n            var _a = getResolvedSelection(selection), anchor = _a.anchor, head = _a.head;\n            if (anchor && head) {\n                var map = TableOffsetMap.create(anchor);\n                var selectionInfo = map.getRectOffsets(anchor, head);\n                var targetColIdx = direction === \"left\" /* LEFT */ ? selectionInfo.startColIdx : selectionInfo.endColIdx + 1;\n                var columnCount = getRowAndColumnCount(selectionInfo).columnCount;\n                var totalRowCount = map.totalRowCount;\n                for (var rowIdx = 0; rowIdx < totalRowCount; rowIdx += 1) {\n                    var cells = createDummyCells(columnCount, rowIdx, schema);\n                    tr.insert(tr.mapping.map(map.posAt(rowIdx, targetColIdx)), cells);\n                }\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        }; };\n    };\n    Table.prototype.removeColumn = function () {\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr;\n            var _a = getResolvedSelection(selection), anchor = _a.anchor, head = _a.head;\n            if (anchor && head) {\n                var map = TableOffsetMap.create(anchor);\n                var selectionInfo = map.getRectOffsets(anchor, head);\n                var totalColumnCount = map.totalColumnCount, totalRowCount = map.totalRowCount;\n                var columnCount = getRowAndColumnCount(selectionInfo).columnCount;\n                var selectedAllColumn = columnCount === totalColumnCount;\n                if (selectedAllColumn) {\n                    return false;\n                }\n                var startColIdx = selectionInfo.startColIdx, endColIdx = selectionInfo.endColIdx;\n                var mapStart = tr.mapping.maps.length;\n                for (var rowIdx = 0; rowIdx < totalRowCount; rowIdx += 1) {\n                    for (var colIdx = endColIdx; colIdx >= startColIdx; colIdx -= 1) {\n                        var _b = map.getCellInfo(rowIdx, colIdx), offset = _b.offset, nodeSize = _b.nodeSize;\n                        var from = tr.mapping.slice(mapStart).map(offset);\n                        var to = from + nodeSize;\n                        tr.delete(from, to);\n                    }\n                }\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        }; };\n    };\n    Table.prototype.addRow = function (direction) {\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, schema = state.schema, tr = state.tr;\n            var _a = getResolvedSelection(selection), anchor = _a.anchor, head = _a.head;\n            if (anchor && head) {\n                var map = TableOffsetMap.create(anchor);\n                var totalColumnCount = map.totalColumnCount;\n                var selectionInfo = map.getRectOffsets(anchor, head);\n                var rowCount = getRowAndColumnCount(selectionInfo).rowCount;\n                var _b = getTargetRowInfo(direction, map, selectionInfo), targetRowIdx = _b.targetRowIdx, insertColIdx = _b.insertColIdx, nodeSize = _b.nodeSize;\n                var selectedThead = targetRowIdx === 0;\n                if (!selectedThead) {\n                    var rows = [];\n                    var from = tr.mapping.map(map.posAt(targetRowIdx, insertColIdx)) + nodeSize;\n                    var cells = [];\n                    for (var colIdx = 0; colIdx < totalColumnCount; colIdx += 1) {\n                        cells = cells.concat(createDummyCells(1, targetRowIdx, schema));\n                    }\n                    for (var i = 0; i < rowCount; i += 1) {\n                        rows.push(schema.nodes.tableRow.create(null, cells));\n                    }\n                    dispatch(tr.insert(from, rows));\n                    return true;\n                }\n            }\n            return false;\n        }; };\n    };\n    Table.prototype.removeRow = function () {\n        return function () { return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr;\n            var _a = getResolvedSelection(selection), anchor = _a.anchor, head = _a.head;\n            if (anchor && head) {\n                var map = TableOffsetMap.create(anchor);\n                var totalRowCount = map.totalRowCount, totalColumnCount = map.totalColumnCount;\n                var selectionInfo = map.getRectOffsets(anchor, head);\n                var rowCount = getRowAndColumnCount(selectionInfo).rowCount;\n                var startRowIdx = selectionInfo.startRowIdx, endRowIdx = selectionInfo.endRowIdx;\n                var selectedThead = startRowIdx === 0;\n                var selectedAllTbodyRow = rowCount === totalRowCount - 1;\n                if (selectedAllTbodyRow || selectedThead) {\n                    return false;\n                }\n                for (var rowIdx = endRowIdx; rowIdx >= startRowIdx; rowIdx -= 1) {\n                    var _b = getRowRanges(map, rowIdx, totalColumnCount), from = _b.from, to = _b.to;\n                    // delete table row\n                    tr.delete(from - 1, to + 1);\n                }\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        }; };\n    };\n    Table.prototype.alignColumn = function () {\n        return function (payload) {\n            if (payload === void 0) { payload = { align: 'center' }; }\n            return function (state, dispatch) {\n                var align = payload.align;\n                var selection = state.selection, tr = state.tr;\n                var _a = getResolvedSelection(selection), anchor = _a.anchor, head = _a.head;\n                if (anchor && head) {\n                    var map = TableOffsetMap.create(anchor);\n                    var totalRowCount = map.totalRowCount;\n                    var selectionInfo = map.getRectOffsets(anchor, head);\n                    var startColIdx = selectionInfo.startColIdx, endColIdx = selectionInfo.endColIdx;\n                    for (var rowIdx = 0; rowIdx < totalRowCount; rowIdx += 1) {\n                        for (var colIdx = startColIdx; colIdx <= endColIdx; colIdx += 1) {\n                            if (!map.extendedRowspan(rowIdx, colIdx) && !map.extendedColspan(rowIdx, colIdx)) {\n                                var _b = map.getNodeAndPos(rowIdx, colIdx), node = _b.node, pos = _b.pos;\n                                var attrs = setAttrs(node, { align: align });\n                                tr.setNodeMarkup(pos, null, attrs);\n                            }\n                        }\n                    }\n                    dispatch(tr);\n                    return true;\n                }\n                return false;\n            };\n        };\n    };\n    Table.prototype.moveToCell = function (direction) {\n        return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr, schema = state.schema;\n            var _a = getResolvedSelection(selection), anchor = _a.anchor, head = _a.head;\n            if (anchor && head) {\n                var map = TableOffsetMap.create(anchor);\n                var cellIndex = map.getCellIndex(anchor);\n                var newTr = void 0;\n                if (canBeOutOfTable(direction, map, cellIndex)) {\n                    // When there is no content before or after the table,\n                    // an empty line('paragraph') is created by pressing the arrow keys.\n                    newTr = addParagraphAfterTable(tr, map, schema);\n                }\n                else {\n                    newTr = moveToCell(direction, tr, cellIndex, map);\n                }\n                if (newTr) {\n                    dispatch(newTr);\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    Table.prototype.moveInCell = function (direction) {\n        var _this = this;\n        return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr, doc = state.doc, schema = state.schema;\n            var $from = selection.$from;\n            var view = _this.context.view;\n            if (!view.endOfTextblock(direction)) {\n                return false;\n            }\n            var cell = findNodeBy($from, function (_a) {\n                var type = _a.type;\n                return type.name === 'tableHeadCell' || type.name === 'tableBodyCell';\n            });\n            if (cell) {\n                var para = findNodeBy($from, function (_a) {\n                    var type = _a.type;\n                    return type.name === 'paragraph';\n                });\n                var cellDepth = cell.depth;\n                if (para && canMoveBetweenCells(direction, [cellDepth, para.depth], $from, doc)) {\n                    var anchor = getResolvedSelection(selection).anchor;\n                    var map = TableOffsetMap.create(anchor);\n                    var cellIndex = map.getCellIndex(anchor);\n                    var newTr = void 0;\n                    if (canSelectTableNode(direction, map, cellIndex)) {\n                        // When the cursor position is at the end of the cell,\n                        // the table is selected when the left / right arrow keys are pressed.\n                        newTr = selectNode(tr, $from, cellDepth);\n                    }\n                    else if (canBeOutOfTable(direction, map, cellIndex)) {\n                        // When there is no content before or after the table,\n                        // an empty line('paragraph') is created by pressing the arrow keys.\n                        if (direction === \"up\" /* UP */) {\n                            newTr = addParagraphBeforeTable(tr, map, schema);\n                        }\n                        else if (direction === \"down\" /* DOWN */) {\n                            newTr = addParagraphAfterTable(tr, map, schema);\n                        }\n                    }\n                    else {\n                        newTr = moveToCell(direction, tr, cellIndex, map);\n                    }\n                    if (newTr) {\n                        dispatch(newTr);\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n    };\n    Table.prototype.deleteCells = function () {\n        return function (state, dispatch) {\n            var schema = state.schema, selection = state.selection, tr = state.tr;\n            var _a = getResolvedSelection(selection), anchor = _a.anchor, head = _a.head;\n            var textSelection = selection instanceof TextSelection;\n            if (anchor && head && !textSelection) {\n                var map = TableOffsetMap.create(anchor);\n                var _b = map.getRectOffsets(anchor, head), startRowIdx = _b.startRowIdx, startColIdx = _b.startColIdx, endRowIdx = _b.endRowIdx, endColIdx = _b.endColIdx;\n                for (var rowIdx = startRowIdx; rowIdx <= endRowIdx; rowIdx += 1) {\n                    for (var colIdx = startColIdx; colIdx <= endColIdx; colIdx += 1) {\n                        if (!map.extendedRowspan(rowIdx, colIdx) && !map.extendedColspan(rowIdx, colIdx)) {\n                            var _c = map.getNodeAndPos(rowIdx, colIdx), node = _c.node, pos = _c.pos;\n                            var cells = createDummyCells(1, rowIdx, schema, node.attrs);\n                            tr.replaceWith(tr.mapping.map(pos), tr.mapping.map(pos + node.nodeSize), cells);\n                        }\n                    }\n                }\n                dispatch(tr);\n                return true;\n            }\n            return false;\n        };\n    };\n    Table.prototype.exitTable = function () {\n        return function (state, dispatch) {\n            var selection = state.selection, tr = state.tr, schema = state.schema;\n            var $from = selection.$from;\n            var cell = findNodeBy($from, function (_a) {\n                var type = _a.type;\n                return type.name === 'tableHeadCell' || type.name === 'tableBodyCell';\n            });\n            if (cell) {\n                var para = findNodeBy($from, function (_a) {\n                    var type = _a.type;\n                    return type.name === 'paragraph';\n                });\n                if (para) {\n                    var anchor = getResolvedSelection(selection).anchor;\n                    var map = TableOffsetMap.create(anchor);\n                    dispatch(addParagraphAfterTable(tr, map, schema, true));\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    Table.prototype.commands = function () {\n        return {\n            addTable: this.addTable(),\n            removeTable: this.removeTable(),\n            addColumnToLeft: this.addColumn(\"left\" /* LEFT */),\n            addColumnToRight: this.addColumn(\"right\" /* RIGHT */),\n            removeColumn: this.removeColumn(),\n            addRowToUp: this.addRow(\"up\" /* UP */),\n            addRowToDown: this.addRow(\"down\" /* DOWN */),\n            removeRow: this.removeRow(),\n            alignColumn: this.alignColumn(),\n        };\n    };\n    Table.prototype.keymaps = function () {\n        var deleteCellContent = this.deleteCells();\n        return {\n            Tab: this.moveToCell(\"right\" /* RIGHT */),\n            'Shift-Tab': this.moveToCell(\"left\" /* LEFT */),\n            ArrowUp: this.moveInCell(\"up\" /* UP */),\n            ArrowDown: this.moveInCell(\"down\" /* DOWN */),\n            ArrowLeft: this.moveInCell(\"left\" /* LEFT */),\n            ArrowRight: this.moveInCell(\"right\" /* RIGHT */),\n            Backspace: deleteCellContent,\n            'Mod-Backspace': deleteCellContent,\n            Delete: deleteCellContent,\n            'Mod-Delete': deleteCellContent,\n            'Mod-Enter': this.exitTable(),\n        };\n    };\n    return Table;\n}(Node$2));\n\nvar TableHead = /** @class */ (function (_super) {\n    __extends$1(TableHead, _super);\n    function TableHead() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TableHead.prototype, \"name\", {\n        get: function () {\n            return 'tableHead';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableHead.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'tableRow{1}',\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: [createDOMInfoParsedRawHTML('thead')],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['thead', getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TableHead;\n}(Node$2));\n\nvar TableBody = /** @class */ (function (_super) {\n    __extends$1(TableBody, _super);\n    function TableBody() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TableBody.prototype, \"name\", {\n        get: function () {\n            return 'tableBody';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableBody.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'tableRow+',\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: [\n                    {\n                        tag: 'tbody',\n                        getAttrs: function (dom) {\n                            var rows = dom.querySelectorAll('tr');\n                            var columns = rows[0].children.length;\n                            var rawHTML = dom.getAttribute('data-raw-html');\n                            if (!columns) {\n                                return false;\n                            }\n                            return __assign$1({}, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['tbody', getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TableBody;\n}(Node$2));\n\nvar TableRow = /** @class */ (function (_super) {\n    __extends$1(TableRow, _super);\n    function TableRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TableRow.prototype, \"name\", {\n        get: function () {\n            return 'tableRow';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableRow.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: '(tableHeadCell | tableBodyCell)*',\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: [\n                    {\n                        tag: 'tr',\n                        getAttrs: function (dom) {\n                            var columns = dom.children.length;\n                            var rawHTML = dom.getAttribute('data-raw-html');\n                            if (!columns) {\n                                return false;\n                            }\n                            return __assign$1({}, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['tr', getCustomAttrs(attrs), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TableRow;\n}(Node$2));\n\nvar TableHeadCell = /** @class */ (function (_super) {\n    __extends$1(TableHeadCell, _super);\n    function TableHeadCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TableHeadCell.prototype, \"name\", {\n        get: function () {\n            return 'tableHeadCell';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableHeadCell.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'paragraph+',\n                attrs: __assign$1({ align: { default: null }, className: { default: null }, rawHTML: { default: null }, colspan: { default: null }, extended: { default: null } }, getDefaultCustomAttrs()),\n                isolating: true,\n                parseDOM: [createParsedCellDOM('th')],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    var cellAttrs = createCellAttrs(attrs);\n                    return ['th', __assign$1(__assign$1({}, cellAttrs), getCustomAttrs(attrs)), 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TableHeadCell;\n}(Node$2));\n\nvar TableBodyCell = /** @class */ (function (_super) {\n    __extends$1(TableBodyCell, _super);\n    function TableBodyCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TableBodyCell.prototype, \"name\", {\n        get: function () {\n            return 'tableBodyCell';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableBodyCell.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: '(paragraph | bulletList | orderedList)+',\n                attrs: {\n                    align: { default: null },\n                    className: { default: null },\n                    rawHTML: { default: null },\n                    colspan: { default: null },\n                    rowspan: { default: null },\n                    extended: { default: null },\n                },\n                isolating: true,\n                parseDOM: [createParsedCellDOM('td')],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    var cellAttrs = createCellAttrs(attrs);\n                    return ['td', cellAttrs, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TableBodyCell;\n}(Node$2));\n\nvar Image = /** @class */ (function (_super) {\n    __extends$1(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Image.prototype, \"name\", {\n        get: function () {\n            return 'image';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"schema\", {\n        get: function () {\n            return {\n                inline: true,\n                attrs: __assign$1({ imageUrl: { default: '' }, altText: { default: null }, rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                group: 'inline',\n                selectable: false,\n                parseDOM: [\n                    {\n                        tag: 'img[src]',\n                        getAttrs: function (dom) {\n                            var sanitizedDOM = sanitizeHTML(dom, { RETURN_DOM_FRAGMENT: true })\n                                .firstChild;\n                            var imageUrl = sanitizedDOM.getAttribute('src') || '';\n                            var rawHTML = sanitizedDOM.getAttribute('data-raw-html');\n                            var altText = sanitizedDOM.getAttribute('alt');\n                            return __assign$1({ imageUrl: imageUrl,\n                                altText: altText }, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [\n                        attrs.rawHTML || 'img',\n                        __assign$1(__assign$1({ src: escapeXml$1(attrs.imageUrl) }, (attrs.altText && { alt: attrs.altText })), getCustomAttrs(attrs)),\n                    ];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Image.prototype.addImage = function () {\n        return function (payload) { return function (_a, dispatch) {\n            var schema = _a.schema, tr = _a.tr;\n            var _b = payload, imageUrl = _b.imageUrl, altText = _b.altText;\n            if (!imageUrl) {\n                return false;\n            }\n            var node = schema.nodes.image.createAndFill(__assign$1({ imageUrl: imageUrl }, (altText && { altText: altText })));\n            dispatch(tr.replaceSelectionWith(node).scrollIntoView());\n            return true;\n        }; };\n    };\n    Image.prototype.commands = function () {\n        return {\n            addImage: this.addImage(),\n        };\n    };\n    return Image;\n}(Node$2));\n\nvar ROOT_BLOCK_DEPTH = 1;\nvar ThematicBreak = /** @class */ (function (_super) {\n    __extends$1(ThematicBreak, _super);\n    function ThematicBreak() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ThematicBreak.prototype, \"name\", {\n        get: function () {\n            return 'thematicBreak';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ThematicBreak.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                group: 'block',\n                parseDOM: [{ tag: 'hr' }],\n                selectable: false,\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['div', getCustomAttrs(attrs), [attrs.rawHTML || 'hr']];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ThematicBreak.prototype.hr = function () {\n        var _this = this;\n        return function () { return function (state, dispatch) {\n            var _a;\n            var _b = state.selection, $from = _b.$from, $to = _b.$to;\n            if ($from === $to) {\n                var doc = state.doc;\n                var _c = state.schema.nodes, thematicBreak = _c.thematicBreak, paragraph = _c.paragraph;\n                var nodes = [thematicBreak.create()];\n                var rootBlock = $from.node(ROOT_BLOCK_DEPTH);\n                var lastBlock = doc.child(doc.childCount - 1) === rootBlock;\n                var blockEnd = doc.resolve($from.after(ROOT_BLOCK_DEPTH));\n                var nextHr = ((_a = $from.nodeAfter) === null || _a === void 0 ? void 0 : _a.type.name) === _this.name;\n                if (lastBlock || nextHr) {\n                    nodes.push(paragraph.create());\n                }\n                dispatch(state.tr.insert(blockEnd.pos, nodes).scrollIntoView());\n                return true;\n            }\n            return false;\n        }; };\n    };\n    ThematicBreak.prototype.commands = function () {\n        return { hr: this.hr() };\n    };\n    ThematicBreak.prototype.keymaps = function () {\n        var hrCommand = this.hr()();\n        return {\n            'Mod-l': hrCommand,\n            'Mod-L': hrCommand,\n        };\n    };\n    return ThematicBreak;\n}(Node$2));\n\nvar Strong = /** @class */ (function (_super) {\n    __extends$1(Strong, _super);\n    function Strong() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Strong.prototype, \"name\", {\n        get: function () {\n            return 'strong';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Strong.prototype, \"schema\", {\n        get: function () {\n            var parseDOM = ['b', 'strong'].map(function (tag) {\n                return {\n                    tag: tag,\n                    getAttrs: function (dom) {\n                        var rawHTML = dom.getAttribute('data-raw-html');\n                        return __assign$1({}, (rawHTML && { rawHTML: rawHTML }));\n                    },\n                };\n            });\n            return {\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: parseDOM,\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [attrs.rawHTML || 'strong', getCustomAttrs(attrs)];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Strong.prototype.bold = function () {\n        return function () { return function (state, dispatch) { return toggleMark$1(state.schema.marks.strong)(state, dispatch); }; };\n    };\n    Strong.prototype.commands = function () {\n        return { bold: this.bold() };\n    };\n    Strong.prototype.keymaps = function () {\n        var boldCommand = this.bold()();\n        return {\n            'Mod-b': boldCommand,\n            'Mod-B': boldCommand,\n        };\n    };\n    return Strong;\n}(Mark));\n\nvar Emph = /** @class */ (function (_super) {\n    __extends$1(Emph, _super);\n    function Emph() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Emph.prototype, \"name\", {\n        get: function () {\n            return 'emph';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Emph.prototype, \"schema\", {\n        get: function () {\n            var parseDOM = ['i', 'em'].map(function (tag) {\n                return {\n                    tag: tag,\n                    getAttrs: function (dom) {\n                        var rawHTML = dom.getAttribute('data-raw-html');\n                        return __assign$1({}, (rawHTML && { rawHTML: rawHTML }));\n                    },\n                };\n            });\n            return {\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: parseDOM,\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [attrs.rawHTML || 'em', getCustomAttrs(attrs)];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Emph.prototype.italic = function () {\n        return function () { return function (state, dispatch) { return toggleMark$1(state.schema.marks.emph)(state, dispatch); }; };\n    };\n    Emph.prototype.commands = function () {\n        return { italic: this.italic() };\n    };\n    Emph.prototype.keymaps = function () {\n        var italicCommand = this.italic()();\n        return {\n            'Mod-i': italicCommand,\n            'Mod-I': italicCommand,\n        };\n    };\n    return Emph;\n}(Mark));\n\nvar Strike = /** @class */ (function (_super) {\n    __extends$1(Strike, _super);\n    function Strike() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Strike.prototype, \"name\", {\n        get: function () {\n            return 'strike';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Strike.prototype, \"schema\", {\n        get: function () {\n            var parseDOM = ['s', 'del'].map(function (tag) {\n                return {\n                    tag: tag,\n                    getAttrs: function (dom) {\n                        var rawHTML = dom.getAttribute('data-raw-html');\n                        return __assign$1({}, (rawHTML && { rawHTML: rawHTML }));\n                    },\n                };\n            });\n            return {\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: parseDOM,\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [attrs.rawHTML || 'del', getCustomAttrs(attrs)];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Strike.prototype.commands = function () {\n        return function () { return function (state, dispatch) { return toggleMark$1(state.schema.marks.strike)(state, dispatch); }; };\n    };\n    Strike.prototype.keymaps = function () {\n        var strikeCommand = this.commands()();\n        return {\n            'Mod-s': strikeCommand,\n            'Mod-S': strikeCommand,\n        };\n    };\n    return Strike;\n}(Mark));\n\nvar Link = /** @class */ (function (_super) {\n    __extends$1(Link, _super);\n    function Link(linkAttributes) {\n        var _this = _super.call(this) || this;\n        _this.linkAttributes = linkAttributes;\n        return _this;\n    }\n    Object.defineProperty(Link.prototype, \"name\", {\n        get: function () {\n            return 'link';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Link.prototype, \"schema\", {\n        get: function () {\n            var _this = this;\n            return {\n                attrs: __assign$1({ linkUrl: { default: '' }, title: { default: null }, rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                inclusive: false,\n                parseDOM: [\n                    {\n                        tag: 'a[href]',\n                        getAttrs: function (dom) {\n                            var sanitizedDOM = sanitizeHTML(dom, { RETURN_DOM_FRAGMENT: true })\n                                .firstChild;\n                            var href = sanitizedDOM.getAttribute('href') || '';\n                            var title = sanitizedDOM.getAttribute('title') || '';\n                            var rawHTML = sanitizedDOM.getAttribute('data-raw-html');\n                            return __assign$1({ linkUrl: href, title: title }, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [\n                        attrs.rawHTML || 'a',\n                        __assign$1(__assign$1({ href: escapeXml$1(attrs.linkUrl) }, _this.linkAttributes), getCustomAttrs(attrs)),\n                    ];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Link.prototype.addLink = function () {\n        return function (payload) { return function (state, dispatch) {\n            var _a = payload, linkUrl = _a.linkUrl, _b = _a.linkText, linkText = _b === void 0 ? '' : _b;\n            var schema = state.schema, tr = state.tr, selection = state.selection;\n            var empty = selection.empty, from = selection.from, to = selection.to;\n            if (from && to && linkUrl) {\n                var attrs = { linkUrl: linkUrl };\n                var mark = schema.mark('link', attrs);\n                if (empty && linkText) {\n                    var node = createTextNode$1(schema, linkText, mark);\n                    tr.replaceRangeWith(from, to, node);\n                }\n                else {\n                    tr.addMark(from, to, mark);\n                }\n                dispatch(tr.scrollIntoView());\n                return true;\n            }\n            return false;\n        }; };\n    };\n    Link.prototype.toggleLink = function () {\n        return function (payload) { return function (state, dispatch) {\n            return toggleMark$1(state.schema.marks.link, payload)(state, dispatch);\n        }; };\n    };\n    Link.prototype.commands = function () {\n        return {\n            addLink: this.addLink(),\n            toggleLink: this.toggleLink(),\n        };\n    };\n    return Link;\n}(Mark));\n\nvar Code = /** @class */ (function (_super) {\n    __extends$1(Code, _super);\n    function Code() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Code.prototype, \"name\", {\n        get: function () {\n            return 'code';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Code.prototype, \"schema\", {\n        get: function () {\n            return {\n                attrs: __assign$1({ rawHTML: { default: null } }, getDefaultCustomAttrs()),\n                parseDOM: [\n                    {\n                        tag: 'code',\n                        getAttrs: function (dom) {\n                            var rawHTML = dom.getAttribute('data-raw-html');\n                            return __assign$1({}, (rawHTML && { rawHTML: rawHTML }));\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return [attrs.rawHTML || 'code', getCustomAttrs(attrs)];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Code.prototype.commands = function () {\n        return function () { return function (state, dispatch) { return toggleMark$1(state.schema.marks.code)(state, dispatch); }; };\n    };\n    Code.prototype.keymaps = function () {\n        var codeCommand = this.commands()();\n        return {\n            'Shift-Mod-c': codeCommand,\n            'Shift-Mod-C': codeCommand,\n        };\n    };\n    return Code;\n}(Mark));\n\nvar CustomBlock = /** @class */ (function (_super) {\n    __extends$1(CustomBlock, _super);\n    function CustomBlock() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CustomBlock.prototype, \"name\", {\n        get: function () {\n            return 'customBlock';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CustomBlock.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'text*',\n                group: 'block',\n                attrs: {\n                    info: { default: null },\n                },\n                atom: true,\n                code: true,\n                defining: true,\n                parseDOM: [\n                    {\n                        tag: 'div[data-custom-info]',\n                        getAttrs: function (dom) {\n                            var info = dom.getAttribute('data-custom-info');\n                            return { info: info };\n                        },\n                    },\n                ],\n                toDOM: function (_a) {\n                    var attrs = _a.attrs;\n                    return ['div', { 'data-custom-info': attrs.info || null }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CustomBlock.prototype.commands = function () {\n        return function (payload) { return function (state, dispatch) {\n            return (payload === null || payload === void 0 ? void 0 : payload.info)\n                ? setBlockType(state.schema.nodes.customBlock, payload)(state, dispatch)\n                : false;\n        }; };\n    };\n    return CustomBlock;\n}(Node$2));\n\nvar FrontMatter = /** @class */ (function (_super) {\n    __extends$1(FrontMatter, _super);\n    function FrontMatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FrontMatter.prototype, \"name\", {\n        get: function () {\n            return 'frontMatter';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FrontMatter.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'text*',\n                group: 'block',\n                code: true,\n                defining: true,\n                parseDOM: [\n                    {\n                        preserveWhitespace: 'full',\n                        tag: 'div[data-front-matter]',\n                    },\n                ],\n                toDOM: function () {\n                    return ['div', { 'data-front-matter': 'true' }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FrontMatter.prototype.commands = function () {\n        return function () { return function (state, dispatch, view) {\n            var $from = state.selection.$from;\n            if (view.endOfTextblock('down') && $from.node().type.name === 'frontMatter') {\n                return exitCode(state, dispatch);\n            }\n            return false;\n        }; };\n    };\n    FrontMatter.prototype.keymaps = function () {\n        return {\n            Enter: this.commands()(),\n        };\n    };\n    return FrontMatter;\n}(Node$2));\n\nvar HTMLComment = /** @class */ (function (_super) {\n    __extends$1(HTMLComment, _super);\n    function HTMLComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HTMLComment.prototype, \"name\", {\n        get: function () {\n            return 'htmlComment';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLComment.prototype, \"schema\", {\n        get: function () {\n            return {\n                content: 'text*',\n                group: 'block',\n                code: true,\n                defining: true,\n                parseDOM: [{ preserveWhitespace: 'full', tag: 'div[data-html-comment]' }],\n                toDOM: function () {\n                    return ['div', { 'data-html-comment': 'true' }, 0];\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTMLComment.prototype.commands = function () {\n        return function () { return function (state, dispatch, view) {\n            var $from = state.selection.$from;\n            if (view.endOfTextblock('down') && $from.node().type.name === 'htmlComment') {\n                return exitCode(state, dispatch);\n            }\n            return false;\n        }; };\n    };\n    HTMLComment.prototype.keymaps = function () {\n        return {\n            Enter: this.commands()(),\n        };\n    };\n    return HTMLComment;\n}(Node$2));\n\nfunction createSpecs(linkAttributes) {\n    return new SpecManager([\n        new Doc(),\n        new Paragraph(),\n        new Text(),\n        new Heading(),\n        new CodeBlock(),\n        new BulletList(),\n        new OrderedList(),\n        new ListItem(),\n        new BlockQuote(),\n        new Table(),\n        new TableHead(),\n        new TableBody(),\n        new TableRow(),\n        new TableHeadCell(),\n        new TableBodyCell(),\n        new Image(),\n        new ThematicBreak(),\n        new Strong(),\n        new Emph(),\n        new Strike(),\n        new Link(linkAttributes),\n        new Code(),\n        new CustomBlock(),\n        new FrontMatter(),\n        new Widget(),\n        new HTMLComment(),\n    ]);\n}\n\nvar CONTENTS_CLASS_NAME = cls('contents');\nvar WysiwygEditor = /** @class */ (function (_super) {\n    __extends$1(WysiwygEditor, _super);\n    function WysiwygEditor(eventEmitter, options) {\n        var _this = _super.call(this, eventEmitter) || this;\n        var toDOMAdaptor = options.toDOMAdaptor, _a = options.htmlSchemaMap, htmlSchemaMap = _a === void 0 ? {} : _a, _b = options.linkAttributes, linkAttributes = _b === void 0 ? {} : _b, _c = options.useCommandShortcut, useCommandShortcut = _c === void 0 ? true : _c, _d = options.wwPlugins, wwPlugins = _d === void 0 ? [] : _d, _e = options.wwNodeViews, wwNodeViews = _e === void 0 ? {} : _e;\n        _this.editorType = 'wysiwyg';\n        _this.el.classList.add('ww-mode');\n        _this.toDOMAdaptor = toDOMAdaptor;\n        _this.linkAttributes = linkAttributes;\n        _this.extraPlugins = wwPlugins;\n        _this.pluginNodeViews = wwNodeViews;\n        _this.specs = _this.createSpecs();\n        _this.schema = _this.createSchema(htmlSchemaMap);\n        _this.context = _this.createContext();\n        _this.keymaps = _this.createKeymaps(useCommandShortcut);\n        _this.view = _this.createView();\n        _this.commands = _this.createCommands();\n        _this.specs.setContext(__assign$1(__assign$1({}, _this.context), { view: _this.view }));\n        _this.initEvent();\n        return _this;\n    }\n    WysiwygEditor.prototype.createSpecs = function () {\n        return createSpecs(this.linkAttributes);\n    };\n    WysiwygEditor.prototype.createContext = function () {\n        return {\n            schema: this.schema,\n            eventEmitter: this.eventEmitter,\n        };\n    };\n    WysiwygEditor.prototype.createSchema = function (htmlSchemaMap) {\n        return new Schema({\n            nodes: __assign$1(__assign$1({}, this.specs.nodes), htmlSchemaMap.nodes),\n            marks: __assign$1(__assign$1({}, this.specs.marks), htmlSchemaMap.marks),\n        });\n    };\n    WysiwygEditor.prototype.createPlugins = function () {\n        return __spreadArray$1([\n            tableSelection(),\n            tableContextMenu(this.eventEmitter),\n            task(),\n            toolbarStateHighlight(this.eventEmitter)\n        ], this.createPluginProps()).concat(this.defaultPlugins);\n    };\n    WysiwygEditor.prototype.createPluginNodeViews = function () {\n        var _a = this, eventEmitter = _a.eventEmitter, pluginNodeViews = _a.pluginNodeViews;\n        var pluginNodeViewMap = {};\n        if (pluginNodeViews) {\n            Object.keys(pluginNodeViews).forEach(function (key) {\n                pluginNodeViewMap[key] = function (node, view, getPos) {\n                    return pluginNodeViews[key](node, view, getPos, eventEmitter);\n                };\n            });\n        }\n        return pluginNodeViewMap;\n    };\n    WysiwygEditor.prototype.createView = function () {\n        var _this = this;\n        var _a = this, toDOMAdaptor = _a.toDOMAdaptor, eventEmitter = _a.eventEmitter;\n        return new EditorView(this.el, {\n            state: this.createState(),\n            attributes: {\n                class: CONTENTS_CLASS_NAME,\n            },\n            nodeViews: __assign$1({ customBlock: function (node, view, getPos) {\n                    return new CustomBlockView(node, view, getPos, toDOMAdaptor);\n                },\n                image: function (node, view, getPos) {\n                    return new ImageView(node, view, getPos, eventEmitter);\n                },\n                codeBlock: function (node, view, getPos) {\n                    return new CodeBlockView(node, view, getPos, eventEmitter);\n                }, widget: widgetNodeView }, this.createPluginNodeViews()),\n            dispatchTransaction: function (tr) {\n                var state = _this.view.state.applyTransaction(tr).state;\n                _this.view.updateState(state);\n                _this.emitChangeEvent(tr.scrollIntoView());\n                _this.eventEmitter.emit('setFocusedNode', state.selection.$from.node(1));\n            },\n            transformPastedHTML: changePastedHTML,\n            transformPasted: function (slice) {\n                return changePastedSlice(slice, _this.schema, isInTableNode(_this.view.state.selection.$from));\n            },\n            handlePaste: function (view, _, slice) { return pasteToTable(view, slice); },\n            handleKeyDown: function (_, ev) {\n                _this.eventEmitter.emit('keydown', _this.editorType, ev);\n                return false;\n            },\n            handleDOMEvents: {\n                paste: function (_, ev) {\n                    var clipboardData = ev.clipboardData || window.clipboardData;\n                    var items = clipboardData === null || clipboardData === void 0 ? void 0 : clipboardData.items;\n                    if (items) {\n                        var containRtfItem = toArray_1(items).some(function (item) { return item.kind === 'string' && item.type === 'text/rtf'; });\n                        // if it contains rtf, it's most likely copy paste from office -> no image\n                        if (!containRtfItem) {\n                            var imageBlob = pasteImageOnly(items);\n                            if (imageBlob) {\n                                ev.preventDefault();\n                                emitImageBlobHook(_this.eventEmitter, imageBlob, ev.type);\n                            }\n                        }\n                    }\n                    return false;\n                },\n                keyup: function (_, ev) {\n                    _this.eventEmitter.emit('keyup', _this.editorType, ev);\n                    return false;\n                },\n                scroll: function () {\n                    _this.eventEmitter.emit('scroll', 'editor');\n                    return true;\n                },\n            },\n        });\n    };\n    WysiwygEditor.prototype.createCommands = function () {\n        return this.specs.commands(this.view, getWwCommands());\n    };\n    WysiwygEditor.prototype.getHTML = function () {\n        return removeProseMirrorHackNodes(this.view.dom.innerHTML);\n    };\n    WysiwygEditor.prototype.getModel = function () {\n        return this.view.state.doc;\n    };\n    WysiwygEditor.prototype.getSelection = function () {\n        var _a = this.view.state.selection, from = _a.from, to = _a.to;\n        return [from, to];\n    };\n    WysiwygEditor.prototype.getSchema = function () {\n        return this.view.state.schema;\n    };\n    WysiwygEditor.prototype.replaceSelection = function (text, start, end) {\n        var _a = this.view.state, schema = _a.schema, tr = _a.tr;\n        var lineTexts = text.split('\\n');\n        var paras = lineTexts.map(function (lineText) {\n            return createParagraph(schema, createNodesWithWidget(lineText, schema));\n        });\n        var slice = new Slice(Fragment.from(paras), 1, 1);\n        var newTr = isNumber_1(start) && isNumber_1(end)\n            ? tr.replaceRange(start, end, slice)\n            : tr.replaceSelection(slice);\n        this.view.dispatch(newTr);\n        this.focus();\n    };\n    WysiwygEditor.prototype.deleteSelection = function (start, end) {\n        var tr = this.view.state.tr;\n        var newTr = isNumber_1(start) && isNumber_1(end) ? tr.deleteRange(start, end) : tr.deleteSelection();\n        this.view.dispatch(newTr.scrollIntoView());\n    };\n    WysiwygEditor.prototype.getSelectedText = function (start, end) {\n        var _a = this.view.state, doc = _a.doc, selection = _a.selection;\n        var from = selection.from, to = selection.to;\n        if (isNumber_1(start) && isNumber_1(end)) {\n            from = start;\n            to = end;\n        }\n        return doc.textBetween(from, to, '\\n');\n    };\n    WysiwygEditor.prototype.setModel = function (newDoc, cursorToEnd) {\n        if (cursorToEnd === void 0) { cursorToEnd = false; }\n        var _a = this.view.state, tr = _a.tr, doc = _a.doc;\n        this.view.dispatch(tr.replaceWith(0, doc.content.size, newDoc));\n        if (cursorToEnd) {\n            this.moveCursorToEnd(true);\n        }\n    };\n    WysiwygEditor.prototype.setSelection = function (start, end) {\n        if (end === void 0) { end = start; }\n        var tr = this.view.state.tr;\n        var selection = createTextSelection(tr, start, end);\n        this.view.dispatch(tr.setSelection(selection).scrollIntoView());\n    };\n    WysiwygEditor.prototype.addWidget = function (node, style, pos) {\n        var _a = this.view, dispatch = _a.dispatch, state = _a.state;\n        dispatch(state.tr.setMeta('widget', { pos: pos !== null && pos !== void 0 ? pos : state.selection.to, node: node, style: style }));\n    };\n    WysiwygEditor.prototype.replaceWithWidget = function (start, end, text) {\n        var _a = this.view.state, tr = _a.tr, schema = _a.schema;\n        var nodes = createNodesWithWidget(text, schema);\n        this.view.dispatch(tr.replaceWith(start, end, nodes));\n    };\n    WysiwygEditor.prototype.getRangeInfoOfNode = function (pos) {\n        var _a = this.view.state, doc = _a.doc, selection = _a.selection;\n        var $pos = pos ? doc.resolve(pos) : selection.$from;\n        var marks = $pos.marks();\n        var node = $pos.node();\n        var start = $pos.start();\n        var end = $pos.end();\n        var type = node.type.name;\n        if (marks.length || type === 'paragraph') {\n            var mark_1 = marks[marks.length - 1];\n            var maybeHasMark_1 = function (nodeMarks) {\n                return nodeMarks.length ? includes(nodeMarks, mark_1) : true;\n            };\n            type = mark_1 ? mark_1.type.name : 'text';\n            node.forEach(function (child, offset) {\n                var isText = child.isText, nodeSize = child.nodeSize, nodeMarks = child.marks;\n                var startOffset = $pos.pos - start;\n                if (isText &&\n                    offset <= startOffset &&\n                    offset + nodeSize >= startOffset &&\n                    maybeHasMark_1(nodeMarks)) {\n                    start = start + offset;\n                    end = start + nodeSize;\n                }\n            });\n        }\n        return { range: [start, end], type: type };\n    };\n    return WysiwygEditor;\n}(EditorBase));\n\n/**\n * @fileoverview Check whether the given variable is existing or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isUndefined = isUndefined_1;\nvar isNull = isNull_1;\n\n/**\n * Check whether the given variable is existing or not.\n * If the given variable is not null and not undefined, returns true.\n * @param {*} param - Target for checking\n * @returns {boolean} Is existy?\n * @memberof module:type\n * @example\n * // ES6\n * import isExisty from 'tui-code-snippet/type/isExisty');\n * \n * // CommonJS\n * const isExisty = require('tui-code-snippet/type/isExisty');\n *\n * isExisty(''); //true\n * isExisty(0); //true\n * isExisty([]); //true\n * isExisty({}); //true\n * isExisty(null); //false\n * isExisty(undefined); //false\n*/\nfunction isExisty$1(param) {\n  return !isUndefined(param) && !isNull(param);\n}\n\nvar isExisty_1 = isExisty$1;\n\n/**\n * @fileoverview Check whether the given variable is truthy or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isExisty = isExisty_1;\n\n/**\n * Check whether the given variable is truthy or not.\n * If the given variable is not null or not undefined or not false, returns true.\n * (It regards 0 as true)\n * @param {*} obj - Target for checking\n * @returns {boolean} Is truthy?\n * @memberof module:type\n */\nfunction isTruthy$1(obj) {\n  return isExisty(obj) && obj !== false;\n}\n\nvar isTruthy_1 = isTruthy$1;\n\n/**\n * @fileoverview Check whether the given variable is falsy or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\nvar isTruthy = isTruthy_1;\n\n/**\n * Check whether the given variable is falsy or not.\n * If the given variable is null or undefined or false, returns true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is falsy?\n * @memberof module:type\n */\nfunction isFalsy(obj) {\n  return !isTruthy(obj);\n}\n\nvar isFalsy_1 = isFalsy;\n\nvar eventTypeList = [\n    'afterPreviewRender',\n    'updatePreview',\n    'changeMode',\n    'needChangeMode',\n    'command',\n    'changePreviewStyle',\n    'changePreviewTabPreview',\n    'changePreviewTabWrite',\n    'scroll',\n    'contextmenu',\n    'show',\n    'hide',\n    'changeLanguage',\n    'changeToolbarState',\n    'toggleScrollSync',\n    'mixinTableOffsetMapPrototype',\n    'setFocusedNode',\n    'removePopupWidget',\n    'query',\n    // provide event for user\n    'openPopup',\n    'closePopup',\n    'addImageBlobHook',\n    'beforePreviewRender',\n    'beforeConvertWysiwygToMarkdown',\n    'load',\n    'loadUI',\n    'change',\n    'caretChange',\n    'destroy',\n    'focus',\n    'blur',\n    'keydown',\n    'keyup',\n];\n/**\n * Class EventEmitter\n * @ignore\n */\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        var _this = this;\n        this.events = new Map$1();\n        this.eventTypes = eventTypeList.reduce(function (types, type) {\n            return __assign$1(__assign$1({}, types), { type: type });\n        }, {});\n        this.hold = false;\n        eventTypeList.forEach(function (eventType) {\n            _this.addEventType(eventType);\n        });\n    }\n    /**\n     * Listen event and bind event handler\n     * @param {string} type Event type string\n     * @param {function} handler Event handler\n     */\n    EventEmitter.prototype.listen = function (type, handler) {\n        var typeInfo = this.getTypeInfo(type);\n        var eventHandlers = this.events.get(typeInfo.type) || [];\n        if (!this.hasEventType(typeInfo.type)) {\n            throw new Error(\"There is no event type \" + typeInfo.type);\n        }\n        if (typeInfo.namespace) {\n            handler.namespace = typeInfo.namespace;\n        }\n        eventHandlers.push(handler);\n        this.events.set(typeInfo.type, eventHandlers);\n    };\n    /**\n     * Emit event\n     * @param {string} eventName Event name to emit\n     * @returns {Array}\n     */\n    EventEmitter.prototype.emit = function (type) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var typeInfo = this.getTypeInfo(type);\n        var eventHandlers = this.events.get(typeInfo.type);\n        var results = [];\n        if (!this.hold && eventHandlers) {\n            eventHandlers.forEach(function (handler) {\n                var result = handler.apply(void 0, args);\n                if (!isUndefined_1(result)) {\n                    results.push(result);\n                }\n            });\n        }\n        return results;\n    };\n    /**\n     * Emit given event and return result\n     * @param {string} eventName Event name to emit\n     * @param {any} source Source to change\n     * @returns {string}\n     */\n    EventEmitter.prototype.emitReduce = function (type, source) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var eventHandlers = this.events.get(type);\n        if (!this.hold && eventHandlers) {\n            eventHandlers.forEach(function (handler) {\n                var result = handler.apply(void 0, __spreadArray$1([source], args));\n                if (!isFalsy_1(result)) {\n                    source = result;\n                }\n            });\n        }\n        return source;\n    };\n    /**\n     * Get event type and namespace\n     * @param {string} type Event type name\n     * @returns {{type: string, namespace: string}}\n     * @private\n     */\n    EventEmitter.prototype.getTypeInfo = function (type) {\n        var splited = type.split('.');\n        return {\n            type: splited[0],\n            namespace: splited[1],\n        };\n    };\n    /**\n     * Check whether event type exists or not\n     * @param {string} type Event type name\n     * @returns {boolean}\n     * @private\n     */\n    EventEmitter.prototype.hasEventType = function (type) {\n        return !isUndefined_1(this.eventTypes[this.getTypeInfo(type).type]);\n    };\n    /**\n     * Add event type when given event not exists\n     * @param {string} type Event type name\n     */\n    EventEmitter.prototype.addEventType = function (type) {\n        if (this.hasEventType(type)) {\n            throw new Error(\"There is already have event type \" + type);\n        }\n        this.eventTypes[type] = type;\n    };\n    /**\n     * Remove event handler from given event type\n     * @param {string} eventType Event type name\n     * @param {function} [handler] - registered event handler\n     */\n    EventEmitter.prototype.removeEventHandler = function (eventType, handler) {\n        var _this = this;\n        var _a = this.getTypeInfo(eventType), type = _a.type, namespace = _a.namespace;\n        if (type && handler) {\n            this.removeEventHandlerWithHandler(type, handler);\n        }\n        else if (type && !namespace) {\n            this.events.delete(type);\n        }\n        else if (!type && namespace) {\n            this.events.forEach(function (_, evtType) {\n                _this.removeEventHandlerWithTypeInfo(evtType, namespace);\n            });\n        }\n        else if (type && namespace) {\n            this.removeEventHandlerWithTypeInfo(type, namespace);\n        }\n    };\n    /**\n     * Remove event handler with event handler\n     * @param {string} type - event type name\n     * @param {function} handler - event handler\n     * @private\n     */\n    EventEmitter.prototype.removeEventHandlerWithHandler = function (type, handler) {\n        var eventHandlers = this.events.get(type);\n        if (eventHandlers) {\n            var handlerIndex = eventHandlers.indexOf(handler);\n            if (eventHandlers.indexOf(handler) >= 0) {\n                eventHandlers.splice(handlerIndex, 1);\n            }\n        }\n    };\n    /**\n     * Remove event handler with event type information\n     * @param {string} type Event type name\n     * @param {string} namespace Event namespace\n     * @private\n     */\n    EventEmitter.prototype.removeEventHandlerWithTypeInfo = function (type, namespace) {\n        var handlersToSurvive = [];\n        var eventHandlers = this.events.get(type);\n        if (!eventHandlers) {\n            return;\n        }\n        eventHandlers.map(function (handler) {\n            if (handler.namespace !== namespace) {\n                handlersToSurvive.push(handler);\n            }\n            return null;\n        });\n        this.events.set(type, handlersToSurvive);\n    };\n    EventEmitter.prototype.getEvents = function () {\n        return this.events;\n    };\n    EventEmitter.prototype.holdEventInvoke = function (fn) {\n        this.hold = true;\n        fn();\n        this.hold = false;\n    };\n    return EventEmitter;\n}());\n\nvar CommandManager = /** @class */ (function () {\n    function CommandManager(eventEmitter, mdCommands, wwCommands, getEditorType) {\n        this.eventEmitter = eventEmitter;\n        this.mdCommands = mdCommands;\n        this.wwCommands = wwCommands;\n        this.getEditorType = getEditorType;\n        this.initEvent();\n    }\n    CommandManager.prototype.initEvent = function () {\n        var _this = this;\n        this.eventEmitter.listen('command', function (command, payload) {\n            _this.exec(command, payload);\n        });\n    };\n    CommandManager.prototype.addCommand = function (type, name, command) {\n        if (type === 'markdown') {\n            this.mdCommands[name] = command;\n        }\n        else {\n            this.wwCommands[name] = command;\n        }\n    };\n    CommandManager.prototype.deleteCommand = function (type, name) {\n        if (type === 'markdown') {\n            delete this.mdCommands[name];\n        }\n        else {\n            delete this.wwCommands[name];\n        }\n    };\n    CommandManager.prototype.exec = function (name, payload) {\n        var type = this.getEditorType();\n        if (type === 'markdown') {\n            this.mdCommands[name](payload);\n        }\n        else {\n            this.wwCommands[name](payload);\n        }\n    };\n    return CommandManager;\n}());\n\nfunction getTextWithoutTrailingNewline(text) {\n    return text[text.length - 1] === '\\n' ? text.slice(0, text.length - 1) : text;\n}\nfunction isCustomHTMLInlineNode(_a, node) {\n    var schema = _a.schema;\n    var html = node.literal;\n    var matched = html.match(reHTMLTag);\n    if (matched) {\n        var openTagName = matched[1], closeTagName = matched[3];\n        var typeName = (openTagName || closeTagName).toLowerCase();\n        return node.type === 'htmlInline' && !!(schema.marks[typeName] || schema.nodes[typeName]);\n    }\n    return false;\n}\nfunction isInlineNode(_a) {\n    var type = _a.type;\n    return includes(['text', 'strong', 'emph', 'strike', 'image', 'link', 'code'], type);\n}\nfunction isSoftbreak(mdNode) {\n    return (mdNode === null || mdNode === void 0 ? void 0 : mdNode.type) === 'softbreak';\n}\nfunction isListNode(_a) {\n    var type = _a.type, literal = _a.literal;\n    var matched = type === 'htmlInline' && literal.match(reHTMLTag);\n    if (matched) {\n        var openTagName = matched[1], closeTagName = matched[3];\n        var tagName = openTagName || closeTagName;\n        if (tagName) {\n            return includes(['ul', 'ol', 'li'], tagName.toLowerCase());\n        }\n    }\n    return false;\n}\nfunction getListItemAttrs(_a) {\n    var literal = _a.literal;\n    var task = /data-task/.test(literal);\n    var checked = /data-task-checked/.test(literal);\n    return { task: task, checked: checked };\n}\nfunction getMatchedAttributeValue(rawHTML) {\n    var attrNames = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        attrNames[_i - 1] = arguments[_i];\n    }\n    var wrapper = document.createElement('div');\n    wrapper.innerHTML = sanitizeHTML(rawHTML);\n    var el = wrapper.firstChild;\n    return attrNames.map(function (attrName) { return el.getAttribute(attrName) || ''; });\n}\nfunction createConvertors(convertors) {\n    var convertorMap = {};\n    Object.keys(convertors).forEach(function (key) {\n        var tagNames = key.split(', ');\n        tagNames.forEach(function (tagName) {\n            var name = tagName.toLowerCase();\n            convertorMap[name] = convertors[key];\n        });\n    });\n    return convertorMap;\n}\nvar convertors = {\n    'b, strong': function (state, _, openTagName) {\n        var strong = state.schema.marks.strong;\n        if (openTagName) {\n            state.openMark(strong.create({ rawHTML: openTagName }));\n        }\n        else {\n            state.closeMark(strong);\n        }\n    },\n    'i, em': function (state, _, openTagName) {\n        var emph = state.schema.marks.emph;\n        if (openTagName) {\n            state.openMark(emph.create({ rawHTML: openTagName }));\n        }\n        else {\n            state.closeMark(emph);\n        }\n    },\n    's, del': function (state, _, openTagName) {\n        var strike = state.schema.marks.strike;\n        if (openTagName) {\n            state.openMark(strike.create({ rawHTML: openTagName }));\n        }\n        else {\n            state.closeMark(strike);\n        }\n    },\n    code: function (state, _, openTagName) {\n        var code = state.schema.marks.code;\n        if (openTagName) {\n            state.openMark(code.create({ rawHTML: openTagName }));\n        }\n        else {\n            state.closeMark(code);\n        }\n    },\n    a: function (state, node, openTagName) {\n        var tag = node.literal;\n        var link = state.schema.marks.link;\n        if (openTagName) {\n            var linkUrl = getMatchedAttributeValue(tag, 'href')[0];\n            state.openMark(link.create({\n                linkUrl: linkUrl,\n                rawHTML: openTagName,\n            }));\n        }\n        else {\n            state.closeMark(link);\n        }\n    },\n    img: function (state, node, openTagName) {\n        var tag = node.literal;\n        if (openTagName) {\n            var _a = getMatchedAttributeValue(tag, 'src', 'alt'), imageUrl = _a[0], altText = _a[1];\n            var image = state.schema.nodes.image;\n            state.addNode(image, __assign$1({ rawHTML: openTagName, imageUrl: imageUrl }, (altText && { altText: altText })));\n        }\n    },\n    hr: function (state, _, openTagName) {\n        state.addNode(state.schema.nodes.thematicBreak, { rawHTML: openTagName });\n    },\n    br: function (state, node) {\n        var paragraph = state.schema.nodes.paragraph;\n        var parent = node.parent, prev = node.prev, next = node.next;\n        if ((parent === null || parent === void 0 ? void 0 : parent.type) === 'paragraph') {\n            // should open a paragraph node when line text has only <br> tag\n            // ex) first line\\n\\n<br>\\nfourth line\n            if (isSoftbreak(prev)) {\n                state.openNode(paragraph);\n            }\n            // should close a paragraph node when line text has only <br> tag\n            // ex) first line\\n\\n<br>\\nfourth line\n            if (isSoftbreak(next)) {\n                state.closeNode();\n                // should close a paragraph node and open a paragraph node to separate between blocks\n                // when <br> tag is in the middle of the paragraph\n                // ex) first <br>line\\nthird line\n            }\n            else if (next) {\n                state.closeNode();\n                state.openNode(paragraph);\n            }\n        }\n        else if ((parent === null || parent === void 0 ? void 0 : parent.type) === 'tableCell') {\n            if (prev && (isInlineNode(prev) || isCustomHTMLInlineNode(state, prev))) {\n                state.closeNode();\n            }\n            if (next && (isInlineNode(next) || isCustomHTMLInlineNode(state, next))) {\n                state.openNode(paragraph);\n            }\n        }\n    },\n    pre: function (state, node, openTagName) {\n        var _a, _b;\n        var container = document.createElement('div');\n        container.innerHTML = node.literal;\n        var literal = (_b = (_a = container.firstChild) === null || _a === void 0 ? void 0 : _a.firstChild) === null || _b === void 0 ? void 0 : _b.textContent;\n        state.openNode(state.schema.nodes.codeBlock, { rawHTML: openTagName });\n        state.addText(getTextWithoutTrailingNewline(literal));\n        state.closeNode();\n    },\n    'ul, ol': function (state, node, openTagName) {\n        // in the table cell, '<ul>', '<ol>' is parsed as 'htmlInline' node\n        if (node.parent.type === 'tableCell') {\n            var _a = state.schema.nodes, bulletList = _a.bulletList, orderedList = _a.orderedList, paragraph = _a.paragraph;\n            var list = openTagName === 'ul' ? bulletList : orderedList;\n            if (openTagName) {\n                if (node.prev && !isListNode(node.prev)) {\n                    state.closeNode();\n                }\n                state.openNode(list, { rawHTML: openTagName });\n            }\n            else {\n                state.closeNode();\n                if (node.next && !isListNode(node.next)) {\n                    state.openNode(paragraph);\n                }\n            }\n        }\n    },\n    li: function (state, node, openTagName) {\n        var _a;\n        // in the table cell, '<li>' is parsed as 'htmlInline' node\n        if (((_a = node.parent) === null || _a === void 0 ? void 0 : _a.type) === 'tableCell') {\n            var _b = state.schema.nodes, listItem = _b.listItem, paragraph = _b.paragraph;\n            if (openTagName) {\n                var attrs = getListItemAttrs(node);\n                if (node.prev && !isListNode(node.prev)) {\n                    state.closeNode();\n                }\n                state.openNode(listItem, __assign$1({ rawHTML: openTagName }, attrs));\n                if (node.next && !isListNode(node.next)) {\n                    state.openNode(paragraph);\n                }\n            }\n            else {\n                if (node.prev && !isListNode(node.prev)) {\n                    state.closeNode();\n                }\n                state.closeNode();\n            }\n        }\n    },\n};\nvar htmlToWwConvertors = createConvertors(convertors);\n\nfunction isBRTag(node) {\n    return node.type === 'htmlInline' && reBR.test(node.literal);\n}\nfunction addRawHTMLAttributeToDOM(parent) {\n    toArray_1(parent.childNodes).forEach(function (child) {\n        if (isElemNode(child)) {\n            var openTagName = child.nodeName.toLowerCase();\n            child.setAttribute('data-raw-html', openTagName);\n            if (child.childNodes) {\n                addRawHTMLAttributeToDOM(child);\n            }\n        }\n    });\n}\nvar toWwConvertors = {\n    text: function (state, node) {\n        state.addText(node.literal || '');\n    },\n    paragraph: function (state, node, _a, customAttrs) {\n        var _b;\n        var entering = _a.entering;\n        if (entering) {\n            var paragraph = state.schema.nodes.paragraph;\n            // The `\\n\\n` entered in markdown separates the paragraph.\n            // When changing to wysiwyg, a newline is added between the two paragraphs.\n            if (((_b = node.prev) === null || _b === void 0 ? void 0 : _b.type) === 'paragraph') {\n                state.openNode(paragraph, customAttrs);\n                state.closeNode();\n            }\n            state.openNode(paragraph, customAttrs);\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    heading: function (state, node, _a, customAttrs) {\n        var entering = _a.entering;\n        if (entering) {\n            var _b = node, level = _b.level, headingType = _b.headingType;\n            state.openNode(state.schema.nodes.heading, __assign$1({ level: level, headingType: headingType }, customAttrs));\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    codeBlock: function (state, node, customAttrs) {\n        var codeBlock = state.schema.nodes.codeBlock;\n        var _a = node, info = _a.info, literal = _a.literal;\n        state.openNode(codeBlock, __assign$1({ language: info }, customAttrs));\n        state.addText(getTextWithoutTrailingNewline(literal || ''));\n        state.closeNode();\n    },\n    list: function (state, node, _a, customAttrs) {\n        var entering = _a.entering;\n        if (entering) {\n            var _b = state.schema.nodes, bulletList = _b.bulletList, orderedList = _b.orderedList;\n            var _c = node.listData, type = _c.type, start = _c.start;\n            if (type === 'bullet') {\n                state.openNode(bulletList, customAttrs);\n            }\n            else {\n                state.openNode(orderedList, __assign$1({ order: start }, customAttrs));\n            }\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    item: function (state, node, _a, customAttrs) {\n        var entering = _a.entering;\n        var listItem = state.schema.nodes.listItem;\n        var _b = node.listData, task = _b.task, checked = _b.checked;\n        if (entering) {\n            var attrs = __assign$1(__assign$1(__assign$1({}, (task && { task: task })), (checked && { checked: checked })), customAttrs);\n            state.openNode(listItem, attrs);\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    blockQuote: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        if (entering) {\n            state.openNode(state.schema.nodes.blockQuote, customAttrs);\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    image: function (state, node, _a, customAttrs) {\n        var entering = _a.entering, skipChildren = _a.skipChildren;\n        var image = state.schema.nodes.image;\n        var _b = node, destination = _b.destination, firstChild = _b.firstChild;\n        if (entering && skipChildren) {\n            skipChildren();\n        }\n        state.addNode(image, __assign$1(__assign$1({ imageUrl: destination }, (firstChild && { altText: firstChild.literal })), customAttrs));\n    },\n    thematicBreak: function (state, node, _, customAttrs) {\n        state.addNode(state.schema.nodes.thematicBreak, customAttrs);\n    },\n    strong: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        var strong = state.schema.marks.strong;\n        if (entering) {\n            state.openMark(strong.create(customAttrs));\n        }\n        else {\n            state.closeMark(strong);\n        }\n    },\n    emph: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        var emph = state.schema.marks.emph;\n        if (entering) {\n            state.openMark(emph.create(customAttrs));\n        }\n        else {\n            state.closeMark(emph);\n        }\n    },\n    link: function (state, node, _a, customAttrs) {\n        var entering = _a.entering;\n        var link = state.schema.marks.link;\n        var _b = node, destination = _b.destination, title = _b.title;\n        if (entering) {\n            var attrs = __assign$1({ linkUrl: destination, title: title }, customAttrs);\n            state.openMark(link.create(attrs));\n        }\n        else {\n            state.closeMark(link);\n        }\n    },\n    softbreak: function (state, node) {\n        if (node.parent.type === 'paragraph') {\n            var prev = node.prev, next = node.next;\n            if (prev && !isBRTag(prev)) {\n                state.closeNode();\n            }\n            if (next && !isBRTag(next)) {\n                state.openNode(state.schema.nodes.paragraph);\n            }\n        }\n    },\n    // GFM specifications node\n    table: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        if (entering) {\n            state.openNode(state.schema.nodes.table, customAttrs);\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    tableHead: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        if (entering) {\n            state.openNode(state.schema.nodes.tableHead, customAttrs);\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    tableBody: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        if (entering) {\n            state.openNode(state.schema.nodes.tableBody, customAttrs);\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    tableRow: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        if (entering) {\n            state.openNode(state.schema.nodes.tableRow, customAttrs);\n        }\n        else {\n            state.closeNode();\n        }\n    },\n    tableCell: function (state, node, _a) {\n        var entering = _a.entering;\n        if (!node.ignored) {\n            var hasParaNode = function (childNode) {\n                return childNode && (isInlineNode(childNode) || isCustomHTMLInlineNode(state, childNode));\n            };\n            if (entering) {\n                var _b = state.schema.nodes, tableHeadCell = _b.tableHeadCell, tableBodyCell = _b.tableBodyCell, paragraph = _b.paragraph;\n                var tablePart = node.parent.parent;\n                var cell = tablePart.type === 'tableHead' ? tableHeadCell : tableBodyCell;\n                var table = tablePart.parent;\n                var align = (table.columns[node.startIdx] || {}).align;\n                var attrs = __assign$1({}, node.attrs);\n                if (align) {\n                    attrs.align = align;\n                }\n                state.openNode(cell, attrs);\n                if (hasParaNode(node.firstChild)) {\n                    state.openNode(paragraph);\n                }\n            }\n            else {\n                if (hasParaNode(node.lastChild)) {\n                    state.closeNode();\n                }\n                state.closeNode();\n            }\n        }\n    },\n    strike: function (state, _, _a, customAttrs) {\n        var entering = _a.entering;\n        var strike = state.schema.marks.strike;\n        if (entering) {\n            state.openMark(strike.create(customAttrs));\n        }\n        else {\n            state.closeMark(strike);\n        }\n    },\n    code: function (state, node, _, customAttrs) {\n        var code = state.schema.marks.code;\n        state.openMark(code.create(customAttrs));\n        state.addText(getTextWithoutTrailingNewline(node.literal || ''));\n        state.closeMark(code);\n    },\n    customBlock: function (state, node) {\n        var _a = state.schema.nodes, customBlock = _a.customBlock, paragraph = _a.paragraph;\n        var _b = node, info = _b.info, literal = _b.literal;\n        state.openNode(customBlock, { info: info });\n        state.addText(getTextWithoutTrailingNewline(literal || ''));\n        state.closeNode();\n        // add empty line to edit the content in next line\n        if (!node.next) {\n            state.openNode(paragraph);\n            state.closeNode();\n        }\n    },\n    frontMatter: function (state, node) {\n        state.openNode(state.schema.nodes.frontMatter);\n        state.addText(node.literal);\n        state.closeNode();\n    },\n    htmlInline: function (state, node) {\n        var html = node.literal;\n        var matched = html.match(reHTMLTag);\n        var openTagName = matched[1], closeTagName = matched[3];\n        var typeName = (openTagName || closeTagName).toLowerCase();\n        var markType = state.schema.marks[typeName];\n        var sanitizedHTML = sanitizeHTML(html);\n        // for user defined html schema\n        if (markType === null || markType === void 0 ? void 0 : markType.spec.attrs.htmlInline) {\n            if (openTagName) {\n                var htmlAttrs = getHTMLAttrsByHTMLString(sanitizedHTML);\n                state.openMark(markType.create({ htmlAttrs: htmlAttrs }));\n            }\n            else {\n                state.closeMark(markType);\n            }\n        }\n        else {\n            var htmlToWwConvertor = htmlToWwConvertors[typeName];\n            if (htmlToWwConvertor) {\n                htmlToWwConvertor(state, node, openTagName);\n            }\n        }\n    },\n    htmlBlock: function (state, node) {\n        var html = node.literal;\n        var container = document.createElement('div');\n        var isHTMLComment = reHTMLComment.test(html);\n        if (isHTMLComment) {\n            state.openNode(state.schema.nodes.htmlComment);\n            state.addText(node.literal);\n            state.closeNode();\n        }\n        else {\n            var matched = html.match(reHTMLTag);\n            var openTagName = matched[1], closeTagName = matched[3];\n            var typeName = (openTagName || closeTagName).toLowerCase();\n            var nodeType = state.schema.nodes[typeName];\n            var sanitizedHTML = sanitizeHTML(html);\n            // for user defined html schema\n            if (nodeType === null || nodeType === void 0 ? void 0 : nodeType.spec.attrs.htmlBlock) {\n                var htmlAttrs = getHTMLAttrsByHTMLString(sanitizedHTML);\n                var childrenHTML = getChildrenHTML(node, typeName);\n                state.addNode(nodeType, { htmlAttrs: htmlAttrs, childrenHTML: childrenHTML });\n            }\n            else {\n                container.innerHTML = sanitizedHTML;\n                addRawHTMLAttributeToDOM(container);\n                state.convertByDOMParser(container);\n            }\n        }\n    },\n    customInline: function (state, node, _a) {\n        var entering = _a.entering, skipChildren = _a.skipChildren;\n        var _b = node, info = _b.info, firstChild = _b.firstChild;\n        var schema = state.schema;\n        if (info.indexOf('widget') !== -1 && entering) {\n            var content = getWidgetContent(node);\n            skipChildren();\n            state.addNode(schema.nodes.widget, { info: info }, [\n                schema.text(createWidgetContent(info, content)),\n            ]);\n        }\n        else {\n            var text = '$$';\n            if (entering) {\n                text += firstChild ? info + \" \" : info;\n            }\n            state.addText(text);\n        }\n    },\n};\nfunction createWwConvertors(customConvertors) {\n    var customConvertorTypes = Object.keys(customConvertors);\n    var convertors = __assign$1({}, toWwConvertors);\n    var renderer = new Renderer({\n        gfm: true,\n        nodeId: true,\n        convertors: customConvertors,\n    });\n    var orgConvertors = renderer.getConvertors();\n    customConvertorTypes.forEach(function (type) {\n        var wwConvertor = toWwConvertors[type];\n        if (wwConvertor && !includes(['htmlBlock', 'htmlInline'], type)) {\n            convertors[type] = function (state, node, context) {\n                context.origin = function () { return orgConvertors[type](node, context, orgConvertors); };\n                var tokens = customConvertors[type](node, context);\n                var attrs;\n                if (tokens) {\n                    var _a = Array.isArray(tokens) ? tokens[0] : tokens, htmlAttrs = _a.attributes, classNames = _a.classNames;\n                    attrs = { htmlAttrs: htmlAttrs, classNames: classNames };\n                }\n                wwConvertor(state, node, context, attrs);\n            };\n        }\n    });\n    return convertors;\n}\n\nfunction mergeMarkText(a, b) {\n    if (a.isText && b.isText && Mark$1.sameSet(a.marks, b.marks)) {\n        // @ts-ignore\n        // type is not defined for \"withText\" in prosemirror-model\n        return a.withText(a.text + b.text);\n    }\n    return false;\n}\nvar ToWwConvertorState = /** @class */ (function () {\n    function ToWwConvertorState(schema, convertors) {\n        this.schema = schema;\n        this.convertors = convertors;\n        this.stack = [{ type: this.schema.topNodeType, attrs: null, content: [] }];\n        this.marks = Mark$1.none;\n    }\n    ToWwConvertorState.prototype.top = function () {\n        return last$1(this.stack);\n    };\n    ToWwConvertorState.prototype.push = function (node) {\n        if (this.stack.length) {\n            this.top().content.push(node);\n        }\n    };\n    ToWwConvertorState.prototype.addText = function (text) {\n        if (text) {\n            var nodes = this.top().content;\n            var lastNode = last$1(nodes);\n            var node = this.schema.text(text, this.marks);\n            var merged = lastNode && mergeMarkText(lastNode, node);\n            if (merged) {\n                nodes[nodes.length - 1] = merged;\n            }\n            else {\n                nodes.push(node);\n            }\n        }\n    };\n    ToWwConvertorState.prototype.openMark = function (mark) {\n        this.marks = mark.addToSet(this.marks);\n    };\n    ToWwConvertorState.prototype.closeMark = function (mark) {\n        this.marks = mark.removeFromSet(this.marks);\n    };\n    ToWwConvertorState.prototype.addNode = function (type, attrs, content) {\n        var node = type.createAndFill(attrs, content, this.marks);\n        if (node) {\n            this.push(node);\n            return node;\n        }\n        return null;\n    };\n    ToWwConvertorState.prototype.openNode = function (type, attrs) {\n        this.stack.push({ type: type, attrs: attrs, content: [] });\n    };\n    ToWwConvertorState.prototype.closeNode = function () {\n        if (this.marks.length) {\n            this.marks = Mark$1.none;\n        }\n        var _a = this.stack.pop(), type = _a.type, attrs = _a.attrs, content = _a.content;\n        return this.addNode(type, attrs, content);\n    };\n    ToWwConvertorState.prototype.convertByDOMParser = function (root) {\n        var _this = this;\n        var doc = DOMParser.fromSchema(this.schema).parse(root);\n        doc.content.forEach(function (node) { return _this.push(node); });\n    };\n    ToWwConvertorState.prototype.closeUnmatchedHTMLInline = function (node, entering) {\n        var _a;\n        if (!entering && node.type !== 'htmlInline') {\n            var length_1 = this.stack.length - 1;\n            for (var i = length_1; i >= 0; i -= 1) {\n                var nodeInfo = this.stack[i];\n                if ((_a = nodeInfo.attrs) === null || _a === void 0 ? void 0 : _a.rawHTML) {\n                    if (nodeInfo.content.length) {\n                        this.closeNode();\n                    }\n                    else {\n                        // just pop useless unmatched html inline node\n                        this.stack.pop();\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n    };\n    ToWwConvertorState.prototype.convert = function (mdNode, infoForPosSync) {\n        var walker = mdNode.walker();\n        var event = walker.next();\n        var _loop_1 = function () {\n            var node = event.node, entering = event.entering;\n            var convertor = this_1.convertors[node.type];\n            var skipped = false;\n            if (convertor) {\n                var context = {\n                    entering: entering,\n                    leaf: !isContainer$2(node),\n                    getChildrenText: getChildrenText$1,\n                    options: { gfm: true, nodeId: false, tagFilter: false, softbreak: '\\n' },\n                    skipChildren: function () {\n                        skipped = true;\n                    },\n                };\n                this_1.closeUnmatchedHTMLInline(node, entering);\n                convertor(this_1, node, context);\n                if ((infoForPosSync === null || infoForPosSync === void 0 ? void 0 : infoForPosSync.node) === node) {\n                    var pos = this_1.stack.reduce(function (nodeSize, stackItem) {\n                        return nodeSize +\n                            stackItem.content.reduce(function (contentSize, pmNode) { return contentSize + pmNode.nodeSize; }, 0);\n                    }, 0) + 1;\n                    infoForPosSync.setMappedPos(pos);\n                }\n            }\n            if (skipped) {\n                walker.resumeAt(node, false);\n                walker.next();\n            }\n            event = walker.next();\n        };\n        var this_1 = this;\n        while (event) {\n            _loop_1();\n        }\n    };\n    ToWwConvertorState.prototype.convertNode = function (mdNode, infoForPosSync) {\n        this.convert(mdNode, infoForPosSync);\n        if (this.stack.length) {\n            return this.closeNode();\n        }\n        return null;\n    };\n    return ToWwConvertorState;\n}());\n\nfunction convertToRawHTMLHavingInlines(state, node, _a) {\n    var openTag = _a[0], closeTag = _a[1];\n    state.write(openTag);\n    state.convertInline(node);\n    state.write(closeTag);\n}\nfunction convertToRawHTMLHavingBlocks(state, _a, _b) {\n    var node = _a.node, parent = _a.parent;\n    var openTag = _b[0], closeTag = _b[1];\n    state.stopNewline = true;\n    state.write(openTag);\n    state.convertNode(node);\n    state.write(closeTag);\n    if ((parent === null || parent === void 0 ? void 0 : parent.type.name) === 'doc') {\n        state.closeBlock(node);\n        state.stopNewline = false;\n    }\n}\nfunction createTableHeadDelim(textContent, columnAlign) {\n    var textLen = textContent.length;\n    var leftDelim = '';\n    var rightDelim = '';\n    if (columnAlign === 'left') {\n        leftDelim = ':';\n        textLen -= 1;\n    }\n    else if (columnAlign === 'right') {\n        rightDelim = ':';\n        textLen -= 1;\n    }\n    else if (columnAlign === 'center') {\n        leftDelim = ':';\n        rightDelim = ':';\n        textLen -= 2;\n    }\n    return \"\" + leftDelim + repeat$1('-', Math.max(textLen, 3)) + rightDelim;\n}\nvar nodeTypeWriters = {\n    text: function (state, _a) {\n        var _b;\n        var node = _a.node;\n        var text = (_b = node.text) !== null && _b !== void 0 ? _b : '';\n        if ((node.marks || []).some(function (mark) { return mark.type.name === 'link'; })) {\n            state.text(escapeTextForLink(text), false);\n        }\n        else {\n            state.text(text);\n        }\n    },\n    paragraph: function (state, _a) {\n        var node = _a.node, parent = _a.parent, _b = _a.index, index = _b === void 0 ? 0 : _b;\n        if (state.stopNewline) {\n            state.convertInline(node);\n        }\n        else {\n            var firstChildNode = index === 0;\n            var prevNode = !firstChildNode && parent.child(index - 1);\n            var prevEmptyNode = prevNode && prevNode.childCount === 0;\n            var nextNode = index < parent.childCount - 1 && parent.child(index + 1);\n            var nextParaNode = nextNode && nextNode.type.name === 'paragraph';\n            var emptyNode = node.childCount === 0;\n            if (emptyNode && prevEmptyNode) {\n                state.write('<br>\\n');\n            }\n            else if (emptyNode && !prevEmptyNode && !firstChildNode) {\n                if ((parent === null || parent === void 0 ? void 0 : parent.type.name) === 'listItem') {\n                    var prevDelim = state.getDelim();\n                    state.setDelim('');\n                    state.write('<br>');\n                    state.setDelim(prevDelim);\n                }\n                state.write('\\n');\n            }\n            else {\n                state.convertInline(node);\n                if (nextParaNode) {\n                    state.write('\\n');\n                }\n                else {\n                    state.closeBlock(node);\n                }\n            }\n        }\n    },\n    heading: function (state, _a, _b) {\n        var node = _a.node;\n        var delim = _b.delim;\n        var headingType = node.attrs.headingType;\n        if (headingType === 'atx') {\n            state.write(delim + \" \");\n            state.convertInline(node);\n            state.closeBlock(node);\n        }\n        else {\n            state.convertInline(node);\n            state.ensureNewLine();\n            state.write(delim);\n            state.closeBlock(node);\n        }\n    },\n    codeBlock: function (state, _a, _b) {\n        var node = _a.node;\n        var delim = _b.delim, text = _b.text;\n        var _c = delim, openDelim = _c[0], closeDelim = _c[1];\n        state.write(openDelim);\n        state.ensureNewLine();\n        state.text(text, false);\n        state.ensureNewLine();\n        state.write(closeDelim);\n        state.closeBlock(node);\n    },\n    blockQuote: function (state, _a, _b) {\n        var node = _a.node, parent = _a.parent;\n        var delim = _b.delim;\n        if ((parent === null || parent === void 0 ? void 0 : parent.type.name) === node.type.name) {\n            state.flushClose(1);\n        }\n        state.wrapBlock(delim, null, node, function () { return state.convertNode(node); });\n    },\n    bulletList: function (state, _a, _b) {\n        var node = _a.node;\n        var delim = _b.delim;\n        // soft-tab(4)\n        state.convertList(node, repeat$1(' ', 4), function () { return delim + \" \"; });\n    },\n    orderedList: function (state, _a) {\n        var node = _a.node;\n        var start = node.attrs.order || 1;\n        // soft-tab(4)\n        state.convertList(node, repeat$1(' ', 4), function (index) {\n            var orderedNum = String(start + index);\n            return orderedNum + \". \";\n        });\n    },\n    listItem: function (state, _a) {\n        var node = _a.node;\n        var _b = node.attrs, task = _b.task, checked = _b.checked;\n        if (task) {\n            state.write(\"[\" + (checked ? 'x' : ' ') + \"] \");\n        }\n        state.convertNode(node);\n    },\n    image: function (state, _, _a) {\n        var attrs = _a.attrs;\n        state.write(\"![\" + (attrs === null || attrs === void 0 ? void 0 : attrs.altText) + \"](\" + (attrs === null || attrs === void 0 ? void 0 : attrs.imageUrl) + \")\");\n    },\n    thematicBreak: function (state, _a, _b) {\n        var node = _a.node;\n        var delim = _b.delim;\n        state.write(delim);\n        state.closeBlock(node);\n    },\n    table: function (state, _a) {\n        var node = _a.node;\n        state.convertNode(node);\n        state.closeBlock(node);\n    },\n    tableHead: function (state, _a, _b) {\n        var node = _a.node;\n        var delim = _b.delim;\n        var row = node.firstChild;\n        state.convertNode(node);\n        var result = delim !== null && delim !== void 0 ? delim : '';\n        if (!delim && row) {\n            row.forEach(function (_a) {\n                var textContent = _a.textContent, attrs = _a.attrs;\n                var headDelim = createTableHeadDelim(textContent, attrs.align);\n                result += \"| \" + headDelim + \" \";\n            });\n        }\n        state.write(result + \"|\");\n        state.ensureNewLine();\n    },\n    tableBody: function (state, _a) {\n        var node = _a.node;\n        state.convertNode(node);\n    },\n    tableRow: function (state, _a) {\n        var node = _a.node;\n        state.convertNode(node);\n        state.write('|');\n        state.ensureNewLine();\n    },\n    tableHeadCell: function (state, _a, _b) {\n        var node = _a.node;\n        var _c = _b.delim, delim = _c === void 0 ? '| ' : _c;\n        state.write(delim);\n        state.convertTableCell(node);\n        state.write(' ');\n    },\n    tableBodyCell: function (state, _a, _b) {\n        var node = _a.node;\n        var _c = _b.delim, delim = _c === void 0 ? '| ' : _c;\n        state.write(delim);\n        state.convertTableCell(node);\n        state.write(' ');\n    },\n    customBlock: function (state, _a, _b) {\n        var node = _a.node;\n        var delim = _b.delim, text = _b.text;\n        var _c = delim, openDelim = _c[0], closeDelim = _c[1];\n        state.write(openDelim);\n        state.ensureNewLine();\n        state.text(text, false);\n        state.ensureNewLine();\n        state.write(closeDelim);\n        state.closeBlock(node);\n    },\n    frontMatter: function (state, _a, _b) {\n        var node = _a.node;\n        var text = _b.text;\n        state.text(text, false);\n        state.closeBlock(node);\n    },\n    widget: function (state, _, _a) {\n        var text = _a.text;\n        state.write(text);\n    },\n    html: function (state, _a, _b) {\n        var node = _a.node;\n        var text = _b.text;\n        state.write(text);\n        if (node.attrs.htmlBlock) {\n            state.closeBlock(node);\n        }\n    },\n    htmlComment: function (state, _a, _b) {\n        var node = _a.node;\n        var text = _b.text;\n        state.write(text);\n        state.closeBlock(node);\n    },\n};\nfunction write(type, _a) {\n    var state = _a.state, nodeInfo = _a.nodeInfo, params = _a.params;\n    var rawHTML = params.rawHTML;\n    if (rawHTML) {\n        if (inArray_1(type, ['heading', 'codeBlock']) > -1) {\n            convertToRawHTMLHavingInlines(state, nodeInfo.node, rawHTML);\n        }\n        else if (inArray_1(type, ['image', 'thematicBreak']) > -1) {\n            state.write(rawHTML);\n        }\n        else {\n            convertToRawHTMLHavingBlocks(state, nodeInfo, rawHTML);\n        }\n    }\n    else {\n        nodeTypeWriters[type](state, nodeInfo, params);\n    }\n}\n\nfunction addBackticks(node, side) {\n    var text = node.text;\n    var ticks = /`+/g;\n    var len = 0;\n    if (node.isText && text) {\n        var matched = ticks.exec(text);\n        while (matched) {\n            len = Math.max(len, matched[0].length);\n            matched = ticks.exec(text);\n        }\n    }\n    var result = len > 0 && side > 0 ? ' `' : '`';\n    for (var i = 0; i < len; i += 1) {\n        result += '`';\n    }\n    if (len > 0 && side < 0) {\n        result += ' ';\n    }\n    return result;\n}\nfunction getPairRawHTML(rawHTML) {\n    return rawHTML ? [\"<\" + rawHTML + \">\", \"</\" + rawHTML + \">\"] : null;\n}\nfunction getOpenRawHTML(rawHTML) {\n    return rawHTML ? \"<\" + rawHTML + \">\" : null;\n}\nfunction getCloseRawHTML(rawHTML) {\n    return rawHTML ? \"</\" + rawHTML + \">\" : null;\n}\nvar toMdConvertors = {\n    heading: function (_a) {\n        var node = _a.node;\n        var attrs = node.attrs;\n        var level = attrs.level;\n        var delim = repeat$1('#', level);\n        if (attrs.headingType === 'setext') {\n            delim = level === 1 ? '===' : '---';\n        }\n        return {\n            delim: delim,\n            rawHTML: getPairRawHTML(attrs.rawHTML),\n        };\n    },\n    codeBlock: function (_a) {\n        var node = _a.node;\n        var _b = node, attrs = _b.attrs, textContent = _b.textContent;\n        return {\n            delim: [\"```\" + (attrs.language || ''), '```'],\n            rawHTML: getPairRawHTML(attrs.rawHTML),\n            text: textContent,\n        };\n    },\n    blockQuote: function (_a) {\n        var node = _a.node;\n        return {\n            delim: '> ',\n            rawHTML: getPairRawHTML(node.attrs.rawHTML),\n        };\n    },\n    bulletList: function (_a, _b) {\n        var node = _a.node;\n        var inTable = _b.inTable;\n        var rawHTML = node.attrs.rawHTML;\n        if (inTable) {\n            rawHTML = rawHTML || 'ul';\n        }\n        return {\n            delim: '*',\n            rawHTML: getPairRawHTML(rawHTML),\n        };\n    },\n    orderedList: function (_a, _b) {\n        var node = _a.node;\n        var inTable = _b.inTable;\n        var rawHTML = node.attrs.rawHTML;\n        if (inTable) {\n            rawHTML = rawHTML || 'ol';\n        }\n        return {\n            rawHTML: getPairRawHTML(rawHTML),\n        };\n    },\n    listItem: function (_a, _b) {\n        var node = _a.node;\n        var inTable = _b.inTable;\n        var _c = node.attrs, task = _c.task, checked = _c.checked;\n        var rawHTML = node.attrs.rawHTML;\n        if (inTable) {\n            rawHTML = rawHTML || 'li';\n        }\n        var className = task ? \" class=\\\"task-list-item\" + (checked ? ' checked' : '') + \"\\\"\" : '';\n        var dataset = task ? \" data-task\" + (checked ? \" data-task-checked\" : '') : '';\n        return {\n            rawHTML: rawHTML ? [\"<\" + rawHTML + className + dataset + \">\", \"</\" + rawHTML + \">\"] : null,\n        };\n    },\n    table: function (_a) {\n        var node = _a.node;\n        return {\n            rawHTML: getPairRawHTML(node.attrs.rawHTML),\n        };\n    },\n    tableHead: function (_a) {\n        var node = _a.node;\n        return {\n            rawHTML: getPairRawHTML(node.attrs.rawHTML),\n        };\n    },\n    tableBody: function (_a) {\n        var node = _a.node;\n        return {\n            rawHTML: getPairRawHTML(node.attrs.rawHTML),\n        };\n    },\n    tableRow: function (_a) {\n        var node = _a.node;\n        return {\n            rawHTML: getPairRawHTML(node.attrs.rawHTML),\n        };\n    },\n    tableHeadCell: function (_a) {\n        var node = _a.node;\n        return {\n            rawHTML: getPairRawHTML(node.attrs.rawHTML),\n        };\n    },\n    tableBodyCell: function (_a) {\n        var node = _a.node;\n        return {\n            rawHTML: getPairRawHTML(node.attrs.rawHTML),\n        };\n    },\n    image: function (_a) {\n        var node = _a.node;\n        var attrs = node.attrs;\n        var rawHTML = attrs.rawHTML, altText = attrs.altText;\n        var imageUrl = attrs.imageUrl.replace(/&amp;/g, '&');\n        var altAttr = altText ? \" alt=\\\"\" + escapeXml$1(altText) + \"\\\"\" : '';\n        return {\n            rawHTML: rawHTML ? \"<\" + rawHTML + \" src=\\\"\" + escapeXml$1(imageUrl) + \"\\\"\" + altAttr + \">\" : null,\n            attrs: {\n                altText: escapeTextForLink(altText || ''),\n                imageUrl: imageUrl,\n            },\n        };\n    },\n    thematicBreak: function (_a) {\n        var node = _a.node;\n        return {\n            delim: '***',\n            rawHTML: getOpenRawHTML(node.attrs.rawHTML),\n        };\n    },\n    customBlock: function (_a) {\n        var node = _a.node;\n        var _b = node, attrs = _b.attrs, textContent = _b.textContent;\n        return {\n            delim: [\"$$\" + attrs.info, '$$'],\n            text: textContent,\n        };\n    },\n    frontMatter: function (_a) {\n        var node = _a.node;\n        return {\n            text: node.textContent,\n        };\n    },\n    widget: function (_a) {\n        var node = _a.node;\n        return {\n            text: node.textContent,\n        };\n    },\n    strong: function (_a, _b) {\n        var node = _a.node;\n        var entering = _b.entering;\n        var rawHTML = node.attrs.rawHTML;\n        return {\n            delim: '**',\n            rawHTML: entering ? getOpenRawHTML(rawHTML) : getCloseRawHTML(rawHTML),\n        };\n    },\n    emph: function (_a, _b) {\n        var node = _a.node;\n        var entering = _b.entering;\n        var rawHTML = node.attrs.rawHTML;\n        return {\n            delim: '*',\n            rawHTML: entering ? getOpenRawHTML(rawHTML) : getCloseRawHTML(rawHTML),\n        };\n    },\n    strike: function (_a, _b) {\n        var node = _a.node;\n        var entering = _b.entering;\n        var rawHTML = node.attrs.rawHTML;\n        return {\n            delim: '~~',\n            rawHTML: entering ? getOpenRawHTML(rawHTML) : getCloseRawHTML(rawHTML),\n        };\n    },\n    link: function (_a, _b) {\n        var node = _a.node;\n        var entering = _b.entering;\n        var attrs = node.attrs;\n        var title = attrs.title, rawHTML = attrs.rawHTML;\n        var linkUrl = attrs.linkUrl.replace(/&amp;/g, '&');\n        var titleAttr = title ? \" title=\\\"\" + escapeXml$1(title) + \"\\\"\" : '';\n        if (entering) {\n            return {\n                delim: '[',\n                rawHTML: rawHTML ? \"<\" + rawHTML + \" href=\\\"\" + escapeXml$1(linkUrl) + \"\\\"\" + titleAttr + \">\" : null,\n            };\n        }\n        return {\n            delim: \"](\" + linkUrl + (title ? \" \" + quote(escapeTextForLink(title)) : '') + \")\",\n            rawHTML: getCloseRawHTML(rawHTML),\n        };\n    },\n    code: function (_a, _b) {\n        var node = _a.node, parent = _a.parent, _c = _a.index, index = _c === void 0 ? 0 : _c;\n        var entering = _b.entering;\n        var delim = entering\n            ? addBackticks(parent.child(index), -1)\n            : addBackticks(parent.child(index - 1), 1);\n        var rawHTML = entering\n            ? getOpenRawHTML(node.attrs.rawHTML)\n            : getCloseRawHTML(node.attrs.rawHTML);\n        return {\n            delim: delim,\n            rawHTML: rawHTML,\n        };\n    },\n    htmlComment: function (_a) {\n        var node = _a.node;\n        return {\n            text: node.textContent,\n        };\n    },\n    // html inline node, html block node\n    html: function (_a, _b) {\n        var node = _a.node;\n        var entering = _b.entering;\n        var tagName = node.type.name;\n        var attrs = node.attrs.htmlAttrs;\n        var openTag = \"<\" + tagName;\n        var closeTag = \"</\" + tagName + \">\";\n        Object.keys(attrs).forEach(function (attrName) {\n            // To prevent broken converting when attributes has double quote string\n            openTag += \" \" + attrName + \"=\\\"\" + attrs[attrName].replace(/\"/g, \"'\") + \"\\\"\";\n        });\n        openTag += '>';\n        if (node.attrs.htmlInline) {\n            return {\n                rawHTML: entering ? openTag : closeTag,\n            };\n        }\n        return {\n            text: \"\" + openTag + node.attrs.childrenHTML + closeTag,\n        };\n    },\n};\nvar markTypeOptions = {\n    strong: {\n        mixable: true,\n        removedEnclosingWhitespace: true,\n    },\n    emph: {\n        mixable: true,\n        removedEnclosingWhitespace: true,\n    },\n    strike: {\n        mixable: true,\n        removedEnclosingWhitespace: true,\n    },\n    code: {\n        escape: false,\n    },\n    link: null,\n    html: null,\n};\nfunction createNodeTypeConvertors(convertors) {\n    var nodeTypeConvertors = {};\n    var nodeTypes = Object.keys(nodeTypeWriters);\n    nodeTypes.forEach(function (type) {\n        nodeTypeConvertors[type] = function (state, nodeInfo) {\n            var writer = nodeTypeWriters[type];\n            if (writer) {\n                var convertor = convertors[type];\n                var params = convertor\n                    ? convertor(nodeInfo, {\n                        inTable: state.inTable,\n                    })\n                    : {};\n                write(type, { state: state, nodeInfo: nodeInfo, params: params });\n            }\n        };\n    });\n    return nodeTypeConvertors;\n}\nfunction createMarkTypeConvertors(convertors) {\n    var markTypeConvertors = {};\n    var markTypes = Object.keys(markTypeOptions);\n    markTypes.forEach(function (type) {\n        markTypeConvertors[type] = function (nodeInfo, entering) {\n            var markOption = markTypeOptions[type];\n            var convertor = convertors[type];\n            // There are two ways to call the mark type converter\n            // in the `toMdConvertorState` module.\n            // When calling the converter without using `delim` and `rawHTML` values,\n            // the converter is called without parameters.\n            var runConvertor = convertor && nodeInfo && !isUndefined_1(entering);\n            var params = runConvertor ? convertor(nodeInfo, { entering: entering }) : {};\n            return __assign$1(__assign$1({}, params), markOption);\n        };\n    });\n    return markTypeConvertors;\n}\n// Step 1: Create the converter by overriding the custom converter\n//         to the original converter defined in the `toMdConvertors` module.\n//         If the node type is defined in the original converter,\n//         the `origin()` function is exported to the paramter of the converter.\n// Step 2: Create a converter for the node type of ProseMirror by combining the converter\n//         created in Step 1 with the writers defined in the`toMdNodeTypeWriters` module.\n//         Each writer converts the ProseMirror's node to a string with the value returned\n//         by the converter, and then stores the state in the`toMdConverterState` class.\n// Step 3: Create a converter for the mark type of ProseMirror by combining the converter\n//         created in Step 1 with `markTypeOptions`.\n// Step 4: The created node type converter and mark type converter are injected\n//         when creating an instance of the`toMdConverterState` class.\nfunction createMdConvertors(customConvertors) {\n    var customConvertorTypes = Object.keys(customConvertors);\n    customConvertorTypes.forEach(function (type) {\n        var baseConvertor = toMdConvertors[type];\n        var customConvertor = customConvertors[type];\n        if (baseConvertor) {\n            toMdConvertors[type] = function (nodeInfo, context) {\n                context.origin = function () { return baseConvertor(nodeInfo, context); };\n                return customConvertor(nodeInfo, context);\n            };\n        }\n        else {\n            toMdConvertors[type] = customConvertor;\n        }\n        delete customConvertors[type];\n    });\n    var nodeTypeConvertors = createNodeTypeConvertors(toMdConvertors);\n    var markTypeConvertors = createMarkTypeConvertors(toMdConvertors);\n    return {\n        nodeTypeConvertors: nodeTypeConvertors,\n        markTypeConvertors: markTypeConvertors,\n    };\n}\n\nvar ToMdConvertorState = /** @class */ (function () {\n    function ToMdConvertorState(_a) {\n        var nodeTypeConvertors = _a.nodeTypeConvertors, markTypeConvertors = _a.markTypeConvertors;\n        this.nodeTypeConvertors = nodeTypeConvertors;\n        this.markTypeConvertors = markTypeConvertors;\n        this.delim = '';\n        this.result = '';\n        this.closed = false;\n        this.tightList = false;\n        this.stopNewline = false;\n        this.inTable = false;\n    }\n    ToMdConvertorState.prototype.getMarkConvertor = function (mark) {\n        var type = mark.attrs.htmlInline ? 'html' : mark.type.name;\n        return this.markTypeConvertors[type];\n    };\n    ToMdConvertorState.prototype.isInBlank = function () {\n        return /(^|\\n)$/.test(this.result);\n    };\n    ToMdConvertorState.prototype.markText = function (mark, entering, parent, index) {\n        var convertor = this.getMarkConvertor(mark);\n        if (convertor) {\n            var _a = convertor({ node: mark, parent: parent, index: index }, entering), delim = _a.delim, rawHTML = _a.rawHTML;\n            return rawHTML || delim;\n        }\n        return '';\n    };\n    ToMdConvertorState.prototype.setDelim = function (delim) {\n        this.delim = delim;\n    };\n    ToMdConvertorState.prototype.getDelim = function () {\n        return this.delim;\n    };\n    ToMdConvertorState.prototype.flushClose = function (size) {\n        if (!this.stopNewline && this.closed) {\n            if (!this.isInBlank()) {\n                this.result += '\\n';\n            }\n            if (!size) {\n                size = 2;\n            }\n            if (size > 1) {\n                var delimMin = this.delim;\n                var trim = /\\s+$/.exec(delimMin);\n                if (trim) {\n                    delimMin = delimMin.slice(0, delimMin.length - trim[0].length);\n                }\n                for (var i = 1; i < size; i += 1) {\n                    this.result += delimMin + \"\\n\";\n                }\n            }\n            this.closed = false;\n        }\n    };\n    ToMdConvertorState.prototype.wrapBlock = function (delim, firstDelim, node, fn) {\n        var old = this.getDelim();\n        this.write(firstDelim || delim);\n        this.setDelim(this.getDelim() + delim);\n        fn();\n        this.setDelim(old);\n        this.closeBlock(node);\n    };\n    ToMdConvertorState.prototype.ensureNewLine = function () {\n        if (!this.isInBlank()) {\n            this.result += '\\n';\n        }\n    };\n    ToMdConvertorState.prototype.write = function (content) {\n        if (content === void 0) { content = ''; }\n        this.flushClose();\n        if (this.delim && this.isInBlank()) {\n            this.result += this.delim;\n        }\n        if (content) {\n            this.result += content;\n        }\n    };\n    ToMdConvertorState.prototype.closeBlock = function (node) {\n        this.closed = node;\n    };\n    ToMdConvertorState.prototype.text = function (text, escaped) {\n        if (escaped === void 0) { escaped = true; }\n        var lines = text.split('\\n');\n        for (var i = 0; i < lines.length; i += 1) {\n            this.write();\n            this.result += escaped ? escape$1(lines[i]) : lines[i];\n            if (i !== lines.length - 1) {\n                this.result += '\\n';\n            }\n        }\n    };\n    ToMdConvertorState.prototype.convertBlock = function (node, parent, index) {\n        var type = node.type.name;\n        var convertor = this.nodeTypeConvertors[type];\n        var nodeInfo = { node: node, parent: parent, index: index };\n        if (node.attrs.htmlBlock) {\n            this.nodeTypeConvertors.html(this, nodeInfo);\n        }\n        else if (convertor) {\n            convertor(this, nodeInfo);\n        }\n    };\n    ToMdConvertorState.prototype.convertInline = function (parent) {\n        var _this = this;\n        var active = [];\n        var trailing = '';\n        var progress = function (node, _, index) {\n            var marks = node ? node.marks : [];\n            var leading = trailing;\n            trailing = '';\n            // If whitespace has to be expelled from the node, adjust\n            // leading and trailing accordingly.\n            var removedWhitespace = node &&\n                node.isText &&\n                marks.some(function (mark) {\n                    var markConvertor = _this.getMarkConvertor(mark);\n                    var info = markConvertor && markConvertor();\n                    return info && info.removedEnclosingWhitespace;\n                });\n            if (removedWhitespace && node && node.text) {\n                var _a = /^(\\s*)(.*?)(\\s*)$/m.exec(node.text), lead = _a[1], mark = _a[2], trail = _a[3];\n                leading += lead;\n                trailing = trail;\n                if (lead || trail) {\n                    // @ts-ignore\n                    // type is not defined for \"withText\" in prosemirror-model\n                    node = mark ? node.withText(mark) : null;\n                    if (!node) {\n                        marks = active;\n                    }\n                }\n            }\n            var lastMark = marks.length && last$1(marks);\n            var markConvertor = lastMark && _this.getMarkConvertor(lastMark);\n            var markType = markConvertor && markConvertor();\n            var noEscape = markType && markType.escape === false;\n            var len = marks.length - (noEscape ? 1 : 0);\n            // Try to reorder 'mixable' marks, such as em and strong, which\n            // in Markdown may be opened and closed in different order, so\n            // that order of the marks for the token matches the order in\n            // active.\n            for (var i = 0; i < len; i += 1) {\n                var mark = marks[i];\n                if (markType && !markType.mixable) {\n                    break;\n                }\n                for (var j = 0; j < active.length; j += 1) {\n                    var other = active[j];\n                    if (markType && !markType.mixable) {\n                        break;\n                    }\n                    if (mark.eq(other)) {\n                        // eslint-disable-next-line max-depth\n                        if (i > j) {\n                            marks = marks\n                                .slice(0, j)\n                                .concat(mark)\n                                .concat(marks.slice(j, i))\n                                .concat(marks.slice(i + 1, len));\n                        }\n                        else if (j > i) {\n                            marks = marks\n                                .slice(0, i)\n                                .concat(marks.slice(i + 1, j))\n                                .concat(mark)\n                                .concat(marks.slice(j, len));\n                        }\n                        break;\n                    }\n                }\n            }\n            // Find the prefix of the mark set that didn't change\n            var keep = 0;\n            while (keep < Math.min(active.length, len) && marks[keep].eq(active[keep])) {\n                keep += 1;\n            }\n            // Close the marks that need to be closed\n            while (keep < active.length) {\n                var activedMark = active.pop();\n                if (activedMark) {\n                    _this.text(_this.markText(activedMark, false, parent, index), false);\n                }\n            }\n            // Output any previously expelled trailing whitespace outside the marks\n            if (leading) {\n                _this.text(leading);\n            }\n            // Open the marks that need to be opened\n            if (node) {\n                while (active.length < len) {\n                    var mark = marks[active.length];\n                    active.push(mark);\n                    _this.text(_this.markText(mark, true, parent, index), false);\n                }\n                // Render the node. Special case code marks, since their content\n                // may not be escaped.\n                if (noEscape && node.isText) {\n                    _this.text(_this.markText(lastMark, true, parent, index) +\n                        node.text +\n                        _this.markText(lastMark, false, parent, index + 1), false);\n                }\n                else {\n                    _this.convertBlock(node, parent, index);\n                }\n            }\n        };\n        parent.forEach(progress);\n        progress(null, null, parent.childCount);\n    };\n    // Render a node's content as a list. `delim` should be the extra\n    // indentation added to all lines except the first in an item,\n    // `firstDelimFn` is a function going from an item index to a\n    // delimiter for the first line of the item.\n    ToMdConvertorState.prototype.convertList = function (node, delim, firstDelimFn) {\n        var _this = this;\n        var _a;\n        if (this.closed && this.closed.type === node.type) {\n            this.flushClose(3);\n        }\n        else if (this.tightList) {\n            this.flushClose(1);\n        }\n        var tight = (_a = node.attrs.tight) !== null && _a !== void 0 ? _a : true;\n        var prevTight = this.tightList;\n        this.tightList = tight;\n        node.forEach(function (child, _, index) {\n            if (index && tight) {\n                _this.flushClose(1);\n            }\n            _this.wrapBlock(delim, firstDelimFn(index), node, function () { return _this.convertBlock(child, node, index); });\n        });\n        this.tightList = prevTight;\n    };\n    ToMdConvertorState.prototype.convertTableCell = function (node) {\n        var _this = this;\n        this.stopNewline = true;\n        this.inTable = true;\n        node.forEach(function (child, _, index) {\n            if (includes(['bulletList', 'orderedList'], child.type.name)) {\n                _this.convertBlock(child, node, index);\n                _this.closed = false;\n            }\n            else {\n                _this.convertInline(child);\n                if (index < node.childCount - 1) {\n                    var nextChild = node.child(index + 1);\n                    if (nextChild.type.name === 'paragraph') {\n                        _this.write('<br>');\n                    }\n                }\n            }\n        });\n        this.stopNewline = false;\n        this.inTable = false;\n    };\n    ToMdConvertorState.prototype.convertNode = function (parent, infoForPosSync) {\n        var _this = this;\n        parent.forEach(function (node, _, index) {\n            _this.convertBlock(node, parent, index);\n            if ((infoForPosSync === null || infoForPosSync === void 0 ? void 0 : infoForPosSync.node) === node) {\n                var lineTexts = _this.result.split('\\n');\n                infoForPosSync.setMappedPos([lineTexts.length, last$1(lineTexts).length + 1]);\n            }\n        });\n        return this.result;\n    };\n    return ToMdConvertorState;\n}());\n\nvar Convertor = /** @class */ (function () {\n    function Convertor(schema, toMdConvertors, toHTMLConvertors, eventEmitter) {\n        var _this = this;\n        this.setMappedPos = function (pos) {\n            _this.mappedPosWhenConverting = pos;\n        };\n        this.schema = schema;\n        this.eventEmitter = eventEmitter;\n        this.focusedNode = null;\n        this.mappedPosWhenConverting = null;\n        this.toWwConvertors = createWwConvertors(toHTMLConvertors);\n        this.toMdConvertors = createMdConvertors(toMdConvertors || {});\n        this.eventEmitter.listen('setFocusedNode', function (node) { return (_this.focusedNode = node); });\n    }\n    Convertor.prototype.getMappedPos = function () {\n        return this.mappedPosWhenConverting;\n    };\n    Convertor.prototype.getInfoForPosSync = function () {\n        return { node: this.focusedNode, setMappedPos: this.setMappedPos };\n    };\n    Convertor.prototype.toWysiwygModel = function (mdNode) {\n        var state = new ToWwConvertorState(this.schema, this.toWwConvertors);\n        return state.convertNode(mdNode, this.getInfoForPosSync());\n    };\n    Convertor.prototype.toMarkdownText = function (wwNode) {\n        var state = new ToMdConvertorState(this.toMdConvertors);\n        var markdownText = state.convertNode(wwNode, this.getInfoForPosSync());\n        markdownText = this.eventEmitter.emitReduce('beforeConvertWysiwygToMarkdown', markdownText);\n        return markdownText;\n    };\n    return Convertor;\n}());\n\nfunction execPlugin(pluginInfo) {\n    var plugin = pluginInfo.plugin, eventEmitter = pluginInfo.eventEmitter, usageStatistics = pluginInfo.usageStatistics, instance = pluginInfo.instance;\n    var pmState = { Plugin: Plugin, PluginKey: PluginKey, Selection: Selection, TextSelection: TextSelection };\n    var pmView = { Decoration: Decoration, DecorationSet: DecorationSet };\n    var pmModel = { Fragment: Fragment };\n    var pmRules = { InputRule: InputRule, inputRules: inputRules, undoInputRule: undoInputRule };\n    var pmKeymap = { keymap: keymap };\n    var context = {\n        eventEmitter: eventEmitter,\n        usageStatistics: usageStatistics,\n        instance: instance,\n        pmState: pmState,\n        pmView: pmView,\n        pmModel: pmModel,\n        pmRules: pmRules,\n        pmKeymap: pmKeymap,\n        i18n: i18n,\n    };\n    if (isArray_1(plugin)) {\n        var pluginFn = plugin[0], _a = plugin[1], options = _a === void 0 ? {} : _a;\n        return pluginFn(context, options);\n    }\n    return plugin(context);\n}\nfunction getPluginInfo(pluginsInfo) {\n    var plugins = pluginsInfo.plugins, eventEmitter = pluginsInfo.eventEmitter, usageStatistics = pluginsInfo.usageStatistics, instance = pluginsInfo.instance;\n    eventEmitter.listen('mixinTableOffsetMapPrototype', mixinTableOffsetMapPrototype);\n    return (plugins !== null && plugins !== void 0 ? plugins : []).reduce(function (acc, plugin) {\n        var pluginInfoResult = execPlugin({\n            plugin: plugin,\n            eventEmitter: eventEmitter,\n            usageStatistics: usageStatistics,\n            instance: instance,\n        });\n        if (!pluginInfoResult) {\n            throw new Error('The return value of the executed plugin is empty.');\n        }\n        var markdownParsers = pluginInfoResult.markdownParsers, toHTMLRenderers = pluginInfoResult.toHTMLRenderers, toMarkdownRenderers = pluginInfoResult.toMarkdownRenderers, markdownPlugins = pluginInfoResult.markdownPlugins, wysiwygPlugins = pluginInfoResult.wysiwygPlugins, wysiwygNodeViews = pluginInfoResult.wysiwygNodeViews, markdownCommands = pluginInfoResult.markdownCommands, wysiwygCommands = pluginInfoResult.wysiwygCommands, toolbarItems = pluginInfoResult.toolbarItems;\n        if (toHTMLRenderers) {\n            acc.toHTMLRenderers = deepMergedCopy(acc.toHTMLRenderers, toHTMLRenderers);\n        }\n        if (toMarkdownRenderers) {\n            acc.toMarkdownRenderers = deepMergedCopy(acc.toMarkdownRenderers, toMarkdownRenderers);\n        }\n        if (markdownPlugins) {\n            acc.mdPlugins = acc.mdPlugins.concat(markdownPlugins);\n        }\n        if (wysiwygPlugins) {\n            acc.wwPlugins = acc.wwPlugins.concat(wysiwygPlugins);\n        }\n        if (wysiwygNodeViews) {\n            acc.wwNodeViews = __assign$1(__assign$1({}, acc.wwNodeViews), wysiwygNodeViews);\n        }\n        if (markdownCommands) {\n            acc.mdCommands = __assign$1(__assign$1({}, acc.mdCommands), markdownCommands);\n        }\n        if (wysiwygCommands) {\n            acc.wwCommands = __assign$1(__assign$1({}, acc.wwCommands), wysiwygCommands);\n        }\n        if (toolbarItems) {\n            acc.toolbarItems = acc.toolbarItems.concat(toolbarItems);\n        }\n        if (markdownParsers) {\n            acc.markdownParsers = __assign$1(__assign$1({}, acc.markdownParsers), markdownParsers);\n        }\n        return acc;\n    }, {\n        toHTMLRenderers: {},\n        toMarkdownRenderers: {},\n        mdPlugins: [],\n        wwPlugins: [],\n        wwNodeViews: {},\n        mdCommands: {},\n        wwCommands: {},\n        toolbarItems: [],\n        markdownParsers: {},\n    });\n}\n\nvar TASK_ATTR_NAME = 'data-task';\nvar DISABLED_TASK_ATTR_NAME = 'data-task-disabled';\nvar TASK_CHECKED_CLASS_NAME = 'checked';\nfunction registerHTMLTagToWhitelist(convertorMap) {\n    ['htmlBlock', 'htmlInline'].forEach(function (htmlType) {\n        if (convertorMap[htmlType]) {\n            // register tag white list for preventing to remove the html in sanitizer\n            Object.keys(convertorMap[htmlType]).forEach(function (type) { return registerTagWhitelistIfPossible(type); });\n        }\n    });\n}\n/**\n * Class ToastUIEditorViewer\n * @param {object} options Option object\n *     @param {HTMLElement} options.el - container element\n *     @param {string} [options.initialValue] Editor's initial value\n *     @param {Object} [options.events] - Events\n *         @param {function} [options.events.load] - It would be emitted when editor fully load\n *         @param {function} [options.events.change] - It would be emitted when content changed\n *         @param {function} [options.events.caretChange] - It would be emitted when format change by cursor position\n *         @param {function} [options.events.focus] - It would be emitted when editor get focus\n *         @param {function} [options.events.blur] - It would be emitted when editor loose focus\n *     @param {Array.<function|Array>} [options.plugins] - Array of plugins. A plugin can be either a function or an array in the form of [function, options].\n *     @param {Object} [options.extendedAutolinks] - Using extended Autolinks specified in GFM spec\n *     @param {Object} [options.linkAttributes] - Attributes of anchor element that should be rel, target, hreflang, type\n *     @param {Object} [options.customHTMLRenderer=null] - Object containing custom renderer functions correspond to change markdown node to preview HTML or wysiwyg node\n *     @param {boolean} [options.referenceDefinition=false] - whether use the specification of link reference definition\n *     @param {function} [options.customHTMLSanitizer=null] - custom HTML sanitizer\n *     @param {boolean} [options.frontMatter=false] - whether use the front matter\n *     @param {string} [options.theme] - The theme to style the viewer with. The default is included in toastui-editor.css.\n */\nvar ToastUIEditorViewer = /** @class */ (function () {\n    function ToastUIEditorViewer(options) {\n        var _this = this;\n        this.options = extend_1({\n            linkAttributes: null,\n            extendedAutolinks: false,\n            customHTMLRenderer: null,\n            referenceDefinition: false,\n            customHTMLSanitizer: null,\n            frontMatter: false,\n            usageStatistics: true,\n            theme: 'light',\n        }, options);\n        this.eventEmitter = new EventEmitter();\n        var linkAttributes = sanitizeLinkAttribute(this.options.linkAttributes);\n        var _a = getPluginInfo({\n            plugins: this.options.plugins,\n            eventEmitter: this.eventEmitter,\n            usageStatistics: this.options.usageStatistics,\n            instance: this,\n        }) || {}, toHTMLRenderers = _a.toHTMLRenderers, markdownParsers = _a.markdownParsers;\n        var _b = this.options, customHTMLRenderer = _b.customHTMLRenderer, extendedAutolinks = _b.extendedAutolinks, referenceDefinition = _b.referenceDefinition, frontMatter = _b.frontMatter, customHTMLSanitizer = _b.customHTMLSanitizer;\n        var rendererOptions = {\n            linkAttributes: linkAttributes,\n            customHTMLRenderer: __assign$1(__assign$1({}, toHTMLRenderers), customHTMLRenderer),\n            extendedAutolinks: extendedAutolinks,\n            referenceDefinition: referenceDefinition,\n            frontMatter: frontMatter,\n            sanitizer: customHTMLSanitizer || sanitizeHTML,\n        };\n        registerHTMLTagToWhitelist(rendererOptions.customHTMLRenderer);\n        if (this.options.events) {\n            forEachOwnProperties_1(this.options.events, function (fn, key) {\n                _this.on(key, fn);\n            });\n        }\n        var _c = this.options, el = _c.el, initialValue = _c.initialValue, theme = _c.theme;\n        var existingHTML = el.innerHTML;\n        if (theme !== 'light') {\n            el.classList.add(cls(theme));\n        }\n        el.innerHTML = '';\n        this.toastMark = new ToastMark('', {\n            disallowedHtmlBlockTags: ['br', 'img'],\n            extendedAutolinks: extendedAutolinks,\n            referenceDefinition: referenceDefinition,\n            disallowDeepHeading: true,\n            frontMatter: frontMatter,\n            customParser: markdownParsers,\n        });\n        this.preview = new MarkdownPreview(this.eventEmitter, __assign$1(__assign$1({}, rendererOptions), { isViewer: true }));\n        on_1(this.preview.previewContent, 'mousedown', this.toggleTask.bind(this));\n        if (initialValue) {\n            this.setMarkdown(initialValue);\n        }\n        else if (existingHTML) {\n            this.preview.setHTML(existingHTML);\n        }\n        el.appendChild(this.preview.previewContent);\n        this.eventEmitter.emit('load', this);\n    }\n    /**\n     * Toggle task by detecting mousedown event.\n     * @param {MouseEvent} ev - event\n     * @private\n     */\n    ToastUIEditorViewer.prototype.toggleTask = function (ev) {\n        var element = ev.target;\n        var style = getComputedStyle(element, ':before');\n        if (!element.hasAttribute(DISABLED_TASK_ATTR_NAME) &&\n            element.hasAttribute(TASK_ATTR_NAME) &&\n            isPositionInBox(style, ev.offsetX, ev.offsetY)) {\n            toggleClass(element, TASK_CHECKED_CLASS_NAME);\n            this.eventEmitter.emit('change', {\n                source: 'viewer',\n                date: ev,\n            });\n        }\n    };\n    /**\n     * Set content for preview\n     * @param {string} markdown Markdown text\n     */\n    ToastUIEditorViewer.prototype.setMarkdown = function (markdown) {\n        var lineTexts = this.toastMark.getLineTexts();\n        var length = lineTexts.length;\n        var lastLine = last$1(lineTexts);\n        var endSourcepos = [length, lastLine.length + 1];\n        var editResult = this.toastMark.editMarkdown([1, 1], endSourcepos, markdown || '');\n        this.eventEmitter.emit('updatePreview', editResult);\n    };\n    /**\n     * Bind eventHandler to event type\n     * @param {string} type Event type\n     * @param {function} handler Event handler\n     */\n    ToastUIEditorViewer.prototype.on = function (type, handler) {\n        this.eventEmitter.listen(type, handler);\n    };\n    /**\n     * Unbind eventHandler from event type\n     * @param {string} type Event type\n     */\n    ToastUIEditorViewer.prototype.off = function (type) {\n        this.eventEmitter.removeEventHandler(type);\n    };\n    /**\n     * Add hook to TUIEditor event\n     * @param {string} type Event type\n     * @param {function} handler Event handler\n     */\n    ToastUIEditorViewer.prototype.addHook = function (type, handler) {\n        this.eventEmitter.removeEventHandler(type);\n        this.eventEmitter.listen(type, handler);\n    };\n    /**\n     * Remove Viewer preview from document\n     */\n    ToastUIEditorViewer.prototype.destroy = function () {\n        off_1(this.preview.el, 'mousedown', this.toggleTask.bind(this));\n        this.preview.destroy();\n        this.eventEmitter.emit('destroy');\n    };\n    /**\n     * Return true\n     * @returns {boolean}\n     */\n    ToastUIEditorViewer.prototype.isViewer = function () {\n        return true;\n    };\n    /**\n     * Return false\n     * @returns {boolean}\n     */\n    ToastUIEditorViewer.prototype.isMarkdownMode = function () {\n        return false;\n    };\n    /**\n     * Return false\n     * @returns {boolean}\n     */\n    ToastUIEditorViewer.prototype.isWysiwygMode = function () {\n        return false;\n    };\n    return ToastUIEditorViewer;\n}());\n\nfunction isPmNode(node) {\n    return node instanceof Node$3;\n}\nfunction isContainer(type) {\n    var containerTypes = [\n        'document',\n        'blockQuote',\n        'bulletList',\n        'orderedList',\n        'listItem',\n        'paragraph',\n        'heading',\n        'emph',\n        'strong',\n        'strike',\n        'link',\n        'image',\n        'table',\n        'tableHead',\n        'tableBody',\n        'tableRow',\n        'tableHeadCell',\n        'tableBodyCell',\n    ];\n    return includes(containerTypes, type);\n}\nfunction createMdLikeNode(node) {\n    var attrs = node.attrs, type = node.type;\n    var nodeType = type.name;\n    var mdLikeNode = {\n        type: nodeType,\n        wysiwygNode: true,\n        literal: !isContainer(nodeType) && isPmNode(node) ? node.textContent : null,\n    };\n    var nodeTypeMap = {\n        heading: { level: attrs.level },\n        link: { destination: attrs.linkUrl, title: attrs.title },\n        image: { destination: attrs.imageUrl },\n        codeBlock: { info: attrs.language },\n        bulletList: { type: 'list', listData: { type: 'bullet' } },\n        orderedList: { type: 'list', listData: { type: 'ordered', start: attrs.order } },\n        listItem: { type: 'item', listData: { task: attrs.task, checked: attrs.checked } },\n        tableHeadCell: { type: 'tableCell', cellType: 'head', align: attrs.align },\n        tableBodyCell: { type: 'tableCell', cellType: 'body', align: attrs.align },\n        customBlock: { info: attrs.info },\n    };\n    var nodeInfo = nodeTypeMap[nodeType];\n    var attributes = __assign$1(__assign$1({}, mdLikeNode), nodeInfo);\n    // html block, inline node\n    var _a = node.attrs, htmlAttrs = _a.htmlAttrs, childrenHTML = _a.childrenHTML;\n    if (htmlAttrs) {\n        return __assign$1(__assign$1({}, attributes), { attrs: htmlAttrs, childrenHTML: childrenHTML });\n    }\n    return attributes;\n}\n\nvar tokenToDOMNode = {\n    openTag: function (token, stack) {\n        var _a = token, tagName = _a.tagName, classNames = _a.classNames, attributes = _a.attributes;\n        var el = document.createElement(tagName);\n        var attrs = {};\n        if (classNames) {\n            el.className = classNames.join(' ');\n        }\n        if (attributes) {\n            attrs = __assign$1(__assign$1({}, attrs), attributes);\n        }\n        setAttributes(attrs, el);\n        stack.push(el);\n    },\n    closeTag: function (_, stack) {\n        if (stack.length > 1) {\n            var el = stack.pop();\n            last$1(stack).appendChild(el);\n        }\n    },\n    html: function (token, stack) {\n        last$1(stack).insertAdjacentHTML('beforeend', token.content);\n    },\n    text: function (token, stack) {\n        var textNode = document.createTextNode(token.content);\n        last$1(stack).appendChild(textNode);\n    },\n};\nvar WwToDOMAdaptor = /** @class */ (function () {\n    function WwToDOMAdaptor(linkAttributes, customRenderer) {\n        var convertors = getHTMLRenderConvertors(linkAttributes, customRenderer);\n        var customHTMLConvertor = __assign$1(__assign$1({}, customRenderer.htmlBlock), customRenderer.htmlInline);\n        // flatten the html block, inline convertor to other custom convertors\n        this.customConvertorKeys = Object.keys(customRenderer).concat(Object.keys(customHTMLConvertor));\n        this.renderer = new Renderer({\n            gfm: true,\n            convertors: __assign$1(__assign$1({}, convertors), customHTMLConvertor),\n        });\n        this.convertors = this.renderer.getConvertors();\n    }\n    WwToDOMAdaptor.prototype.generateTokens = function (node) {\n        var mdLikeNode = createMdLikeNode(node);\n        var context = {\n            entering: true,\n            leaf: isPmNode(node) ? node.isLeaf : false,\n            options: this.renderer.getOptions(),\n            getChildrenText: function () { return (isPmNode(node) ? node.textContent : ''); },\n            skipChildren: function () { return false; },\n        };\n        var convertor = this.convertors[node.type.name];\n        var converted = convertor(mdLikeNode, context, this.convertors);\n        var tokens = isArray_1(converted) ? converted : [converted];\n        if (isContainer(node.type.name) || node.attrs.htmlInline) {\n            context.entering = false;\n            tokens.push({ type: 'text', content: isPmNode(node) ? node.textContent : '' });\n            tokens = tokens.concat(convertor(mdLikeNode, context, this.convertors));\n        }\n        return tokens;\n    };\n    WwToDOMAdaptor.prototype.toDOMNode = function (node) {\n        var tokens = this.generateTokens(node);\n        var stack = [];\n        tokens.forEach(function (token) { return tokenToDOMNode[token.type](token, stack); });\n        return stack[0];\n    };\n    WwToDOMAdaptor.prototype.getToDOMNode = function (name) {\n        if (includes(this.customConvertorKeys, name)) {\n            return this.toDOMNode.bind(this);\n        }\n        return null;\n    };\n    return WwToDOMAdaptor;\n}());\n\nvar ANIMATION_TIME = 100;\nvar SCROLL_BLOCKING_RESET_DELAY = 15;\nvar currentTimeoutId = null;\nvar releaseTimer = null;\nfunction run(deltaScrollTop, _a) {\n    var syncScrollTop = _a.syncScrollTop, releaseEventBlock = _a.releaseEventBlock;\n    if (releaseTimer) {\n        clearTimeout(releaseTimer);\n    }\n    syncScrollTop(deltaScrollTop);\n    releaseTimer = setTimeout(function () {\n        releaseEventBlock();\n    }, SCROLL_BLOCKING_RESET_DELAY);\n}\nfunction animate(curScrollTop, targetScrollTop, syncCallbacks) {\n    var diff = targetScrollTop - curScrollTop;\n    var startTime = Date.now();\n    var step = function () {\n        var stepTime = Date.now();\n        var progress = (stepTime - startTime) / ANIMATION_TIME;\n        var deltaValue;\n        if (currentTimeoutId) {\n            clearTimeout(currentTimeoutId);\n        }\n        if (progress < 1) {\n            deltaValue = curScrollTop + diff * Math.cos(((1 - progress) * Math.PI) / 2);\n            run(Math.ceil(deltaValue), syncCallbacks);\n            currentTimeoutId = setTimeout(step, 1);\n        }\n        else {\n            run(targetScrollTop, syncCallbacks);\n            currentTimeoutId = null;\n        }\n    };\n    step();\n}\n\nvar EDITOR_BOTTOM_PADDING = 18;\nvar ScrollSync = /** @class */ (function () {\n    function ScrollSync(mdEditor, preview, eventEmitter) {\n        this.latestEditorScrollTop = null;\n        this.latestPreviewScrollTop = null;\n        this.blockedScroll = null;\n        this.active = true;\n        this.timer = null;\n        var previewRoot = preview.previewContent, previewEl = preview.el;\n        this.previewRoot = previewRoot;\n        this.previewEl = previewEl;\n        this.mdEditor = mdEditor;\n        this.editorView = mdEditor.view;\n        this.toastMark = mdEditor.getToastMark();\n        this.eventEmitter = eventEmitter;\n        this.addScrollSyncEvent();\n    }\n    ScrollSync.prototype.addScrollSyncEvent = function () {\n        var _this = this;\n        this.eventEmitter.listen('afterPreviewRender', function () {\n            _this.clearTimer();\n            // Immediately after the 'afterPreviewRender' event has occurred,\n            // browser rendering is not yet complete.\n            // So the size of elements can not be accurately measured.\n            _this.timer = setTimeout(function () {\n                _this.syncPreviewScrollTop(true);\n            }, 200);\n        });\n        this.eventEmitter.listen('scroll', function (type, data) {\n            if (_this.active) {\n                if (type === 'editor' && _this.blockedScroll !== 'editor') {\n                    _this.syncPreviewScrollTop();\n                }\n                else if (type === 'preview' && _this.blockedScroll !== 'preview') {\n                    _this.syncEditorScrollTop(data);\n                }\n            }\n        });\n        this.eventEmitter.listen('toggleScrollSync', function (active) {\n            _this.active = active;\n        });\n    };\n    ScrollSync.prototype.getMdNodeAtPos = function (doc, posInfo) {\n        var indexInfo = doc.content.findIndex(posInfo.pos);\n        var line = indexInfo.index;\n        return this.toastMark.findFirstNodeAtLine(line + 1);\n    };\n    ScrollSync.prototype.getScrollTopByCaretPos = function () {\n        var pos = this.mdEditor.getSelection();\n        var firstMdNode = this.toastMark.findFirstNodeAtLine(pos[0][0]);\n        var previewHeight = this.previewEl.clientHeight;\n        var el = getParentNodeObj(this.previewRoot, firstMdNode).el;\n        var totalOffsetTop = getTotalOffsetTop(el, this.previewRoot) || el.offsetTop;\n        var nodeHeight = el.clientHeight;\n        // multiply 0.5 for calculating the position in the middle of preview area\n        var targetScrollTop = totalOffsetTop + nodeHeight - previewHeight * 0.5;\n        this.latestEditorScrollTop = null;\n        var diff = el.getBoundingClientRect().top - this.previewEl.getBoundingClientRect().top;\n        return diff < previewHeight ? null : targetScrollTop;\n    };\n    ScrollSync.prototype.syncPreviewScrollTop = function (editing) {\n        if (editing === void 0) { editing = false; }\n        var _a = this, editorView = _a.editorView, previewEl = _a.previewEl, previewRoot = _a.previewRoot;\n        var _b = editorView.dom.getBoundingClientRect(), left = _b.left, top = _b.top;\n        var posInfo = editorView.posAtCoords({ left: left, top: top });\n        var doc = editorView.state.doc;\n        var firstMdNode = this.getMdNodeAtPos(doc, posInfo);\n        if (!firstMdNode || isHTMLNode(firstMdNode)) {\n            return;\n        }\n        var curScrollTop = previewEl.scrollTop;\n        var _c = editorView.dom, scrollTop = _c.scrollTop, scrollHeight = _c.scrollHeight, clientHeight = _c.clientHeight, children = _c.children;\n        var isBottomPos = scrollHeight - scrollTop <= clientHeight + EDITOR_BOTTOM_PADDING;\n        var targetScrollTop = isBottomPos ? previewEl.scrollHeight : 0;\n        if (scrollTop && !isBottomPos) {\n            if (editing) {\n                var scrollTopByEditing = this.getScrollTopByCaretPos();\n                if (!scrollTopByEditing) {\n                    return;\n                }\n                targetScrollTop = scrollTopByEditing;\n            }\n            else {\n                var _d = getParentNodeObj(this.previewRoot, firstMdNode), el = _d.el, mdNode = _d.mdNode;\n                var _e = getEditorRangeHeightInfo(doc, mdNode, children), height = _e.height, rect = _e.rect;\n                var totalOffsetTop = getTotalOffsetTop(el, previewRoot) || el.offsetTop;\n                var nodeHeight = el.clientHeight;\n                var ratio = top > rect.top ? Math.min((top - rect.top) / height, 1) : 0;\n                targetScrollTop = totalOffsetTop + nodeHeight * ratio;\n            }\n            targetScrollTop = this.getResolvedScrollTop('editor', scrollTop, targetScrollTop, curScrollTop);\n            this.latestEditorScrollTop = scrollTop;\n        }\n        if (targetScrollTop !== curScrollTop) {\n            this.run('editor', targetScrollTop, curScrollTop);\n        }\n    };\n    ScrollSync.prototype.syncEditorScrollTop = function (targetNode) {\n        var _a = this, toastMark = _a.toastMark, editorView = _a.editorView, previewRoot = _a.previewRoot, previewEl = _a.previewEl;\n        var dom = editorView.dom, state = editorView.state;\n        var scrollTop = previewEl.scrollTop, clientHeight = previewEl.clientHeight, scrollHeight = previewEl.scrollHeight;\n        var isBottomPos = scrollHeight - scrollTop <= clientHeight;\n        var curScrollTop = dom.scrollTop;\n        var targetScrollTop = isBottomPos ? dom.scrollHeight : 0;\n        if (scrollTop && targetNode && !isBottomPos) {\n            targetNode = findAncestorHavingId(targetNode, previewRoot);\n            if (!targetNode.getAttribute('data-nodeid')) {\n                return;\n            }\n            var children = dom.children;\n            var mdNodeId = Number(targetNode.getAttribute('data-nodeid'));\n            var _b = getParentNodeObj(this.previewRoot, toastMark.findNodeById(mdNodeId)), mdNode = _b.mdNode, el = _b.el;\n            var mdNodeStartLine = getMdStartLine(mdNode);\n            targetScrollTop = children[mdNodeStartLine - 1].offsetTop;\n            var height = getEditorRangeHeightInfo(state.doc, mdNode, children).height;\n            var _c = getAndSaveOffsetInfo(el, previewRoot, mdNodeId), nodeHeight = _c.nodeHeight, offsetTop = _c.offsetTop;\n            targetScrollTop += getAdditionalPos(scrollTop, offsetTop, nodeHeight, height);\n            targetScrollTop = this.getResolvedScrollTop('preview', scrollTop, targetScrollTop, curScrollTop);\n            this.latestPreviewScrollTop = scrollTop;\n        }\n        if (targetScrollTop !== curScrollTop) {\n            this.run('preview', targetScrollTop, curScrollTop);\n        }\n    };\n    ScrollSync.prototype.getResolvedScrollTop = function (from, scrollTop, targetScrollTop, curScrollTop) {\n        var latestScrollTop = from === 'editor' ? this.latestEditorScrollTop : this.latestPreviewScrollTop;\n        if (latestScrollTop === null) {\n            return targetScrollTop;\n        }\n        return latestScrollTop < scrollTop\n            ? Math.max(targetScrollTop, curScrollTop)\n            : Math.min(targetScrollTop, curScrollTop);\n    };\n    ScrollSync.prototype.run = function (from, targetScrollTop, curScrollTop) {\n        var _this = this;\n        var scrollTarget;\n        if (from === 'editor') {\n            scrollTarget = this.previewEl;\n            this.blockedScroll = 'preview';\n        }\n        else {\n            scrollTarget = this.editorView.dom;\n            this.blockedScroll = 'editor';\n        }\n        var syncCallbacks = {\n            syncScrollTop: function (scrollTop) { return (scrollTarget.scrollTop = scrollTop); },\n            releaseEventBlock: function () { return (_this.blockedScroll = null); },\n        };\n        animate(curScrollTop, targetScrollTop, syncCallbacks);\n    };\n    ScrollSync.prototype.clearTimer = function () {\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n    };\n    ScrollSync.prototype.destroy = function () {\n        this.clearTimer();\n        this.eventEmitter.removeEventHandler('scroll');\n        this.eventEmitter.removeEventHandler('afterPreviewRender');\n    };\n    return ScrollSync;\n}());\n\nvar queryMap = {\n    getPopupInitialValues: function (editor, payload) {\n        var popupName = payload.popupName;\n        return popupName === 'link' ? { linkText: editor.getSelectedText() } : {};\n    },\n};\nfunction buildQuery(editor) {\n    editor.eventEmitter.listen('query', function (query, payload) {\n        return queryMap[query](editor, payload);\n    });\n}\n\n/**\n * ToastUIEditorCore\n * @param {Object} options Option object\n *     @param {HTMLElement} options.el - container element\n *     @param {string} [options.height='300px'] - Editor's height style value. Height is applied as border-box ex) '300px', '100%', 'auto'\n *     @param {string} [options.minHeight='200px'] - Editor's min-height style value in pixel ex) '300px'\n *     @param {string} [options.initialValue] - Editor's initial value\n *     @param {string} [options.previewStyle] - Markdown editor's preview style (tab, vertical)\n *     @param {boolean} [options.previewHighlight = true] - Highlight a preview element corresponds to the cursor position in the markdown editor\n *     @param {string} [options.initialEditType] - Initial editor type (markdown, wysiwyg)\n *     @param {Object} [options.events] - Events\n *         @param {function} [options.events.load] - It would be emitted when editor fully load\n *         @param {function} [options.events.change] - It would be emitted when content changed\n *         @param {function} [options.events.caretChange] - It would be emitted when format change by cursor position\n *         @param {function} [options.events.focus] - It would be emitted when editor get focus\n *         @param {function} [options.events.blur] - It would be emitted when editor loose focus\n *         @param {function} [options.events.keydown] - It would be emitted when the key is pressed in editor\n *         @param {function} [options.events.keyup] - It would be emitted when the key is released in editor\n *         @param {function} [options.events.beforePreviewRender] - It would be emitted before rendering the markdown preview with html string\n *         @param {function} [options.events.beforeConvertWysiwygToMarkdown] - It would be emitted before converting wysiwyg to markdown with markdown text\n *     @param {Object} [options.hooks] - Hooks\n *         @param {addImageBlobHook} [options.hooks.addImageBlobHook] - hook for image upload\n *     @param {string} [options.language='en-US'] - language\n *     @param {boolean} [options.useCommandShortcut=true] - whether use keyboard shortcuts to perform commands\n *     @param {boolean} [options.usageStatistics=true] - send hostname to google analytics\n *     @param {Array.<string|toolbarItemsValue>} [options.toolbarItems] - toolbar items.\n *     @param {boolean} [options.hideModeSwitch=false] - hide mode switch tab bar\n *     @param {Array.<function|Array>} [options.plugins] - Array of plugins. A plugin can be either a function or an array in the form of [function, options].\n *     @param {Object} [options.extendedAutolinks] - Using extended Autolinks specified in GFM spec\n *     @param {string} [options.placeholder] - The placeholder text of the editable element.\n *     @param {Object} [options.linkAttributes] - Attributes of anchor element that should be rel, target, hreflang, type\n *     @param {Object} [options.customHTMLRenderer=null] - Object containing custom renderer functions correspond to change markdown node to preview HTML or wysiwyg node\n *     @param {Object} [options.customMarkdownRenderer=null] - Object containing custom renderer functions correspond to change wysiwyg node to markdown text\n *     @param {boolean} [options.referenceDefinition=false] - whether use the specification of link reference definition\n *     @param {function} [options.customHTMLSanitizer=null] - custom HTML sanitizer\n *     @param {boolean} [options.previewHighlight=false] - whether highlight preview area\n *     @param {boolean} [options.frontMatter=false] - whether use the front matter\n *     @param {Array.<object>} [options.widgetRules=[]] - The rules for replacing the text with widget node\n *     @param {string} [options.theme] - The theme to style the editor with. The default is included in toastui-editor.css.\n *     @param {autofocus} [options.autofocus=true] - automatically focus the editor on creation.\n */\nvar ToastUIEditorCore = /** @class */ (function () {\n    function ToastUIEditorCore(options) {\n        var _this = this;\n        this.initialHTML = options.el.innerHTML;\n        options.el.innerHTML = '';\n        this.options = extend_1({\n            previewStyle: 'tab',\n            previewHighlight: true,\n            initialEditType: 'markdown',\n            height: '300px',\n            minHeight: '200px',\n            language: 'en-US',\n            useCommandShortcut: true,\n            usageStatistics: true,\n            toolbarItems: [\n                ['heading', 'bold', 'italic', 'strike'],\n                ['hr', 'quote'],\n                ['ul', 'ol', 'task', 'indent', 'outdent'],\n                ['table', 'image', 'link'],\n                ['code', 'codeblock'],\n                ['scrollSync'],\n            ],\n            hideModeSwitch: false,\n            linkAttributes: null,\n            extendedAutolinks: false,\n            customHTMLRenderer: null,\n            customMarkdownRenderer: null,\n            referenceDefinition: false,\n            customHTMLSanitizer: null,\n            frontMatter: false,\n            widgetRules: [],\n            theme: 'light',\n            autofocus: true,\n        }, options);\n        var _a = this.options, customHTMLRenderer = _a.customHTMLRenderer, extendedAutolinks = _a.extendedAutolinks, referenceDefinition = _a.referenceDefinition, frontMatter = _a.frontMatter, customMarkdownRenderer = _a.customMarkdownRenderer, useCommandShortcut = _a.useCommandShortcut, initialEditType = _a.initialEditType, widgetRules = _a.widgetRules, customHTMLSanitizer = _a.customHTMLSanitizer;\n        this.mode = initialEditType || 'markdown';\n        this.mdPreviewStyle = this.options.previewStyle;\n        this.i18n = i18n;\n        this.i18n.setCode(this.options.language);\n        this.eventEmitter = new EventEmitter();\n        setWidgetRules(widgetRules);\n        var linkAttributes = sanitizeLinkAttribute(this.options.linkAttributes);\n        this.pluginInfo = getPluginInfo({\n            plugins: this.options.plugins,\n            eventEmitter: this.eventEmitter,\n            usageStatistics: this.options.usageStatistics,\n            instance: this,\n        });\n        var _b = this.pluginInfo, toHTMLRenderers = _b.toHTMLRenderers, toMarkdownRenderers = _b.toMarkdownRenderers, mdPlugins = _b.mdPlugins, wwPlugins = _b.wwPlugins, wwNodeViews = _b.wwNodeViews, mdCommands = _b.mdCommands, wwCommands = _b.wwCommands, markdownParsers = _b.markdownParsers;\n        var rendererOptions = {\n            linkAttributes: linkAttributes,\n            customHTMLRenderer: deepMergedCopy(toHTMLRenderers, customHTMLRenderer),\n            extendedAutolinks: extendedAutolinks,\n            referenceDefinition: referenceDefinition,\n            frontMatter: frontMatter,\n            sanitizer: customHTMLSanitizer || sanitizeHTML,\n        };\n        var wwToDOMAdaptor = new WwToDOMAdaptor(linkAttributes, rendererOptions.customHTMLRenderer);\n        var htmlSchemaMap = createHTMLSchemaMap(rendererOptions.customHTMLRenderer, rendererOptions.sanitizer, wwToDOMAdaptor);\n        this.toastMark = new ToastMark('', {\n            disallowedHtmlBlockTags: ['br', 'img'],\n            extendedAutolinks: extendedAutolinks,\n            referenceDefinition: referenceDefinition,\n            disallowDeepHeading: true,\n            frontMatter: frontMatter,\n            customParser: markdownParsers,\n        });\n        this.mdEditor = new MdEditor(this.eventEmitter, {\n            toastMark: this.toastMark,\n            useCommandShortcut: useCommandShortcut,\n            mdPlugins: mdPlugins,\n        });\n        this.preview = new MarkdownPreview(this.eventEmitter, __assign$1(__assign$1({}, rendererOptions), { isViewer: false, highlight: this.options.previewHighlight }));\n        this.wwEditor = new WysiwygEditor(this.eventEmitter, {\n            toDOMAdaptor: wwToDOMAdaptor,\n            useCommandShortcut: useCommandShortcut,\n            htmlSchemaMap: htmlSchemaMap,\n            linkAttributes: linkAttributes,\n            wwPlugins: wwPlugins,\n            wwNodeViews: wwNodeViews,\n        });\n        this.convertor = new Convertor(this.wwEditor.getSchema(), __assign$1(__assign$1({}, toMarkdownRenderers), customMarkdownRenderer), getHTMLRenderConvertors(linkAttributes, rendererOptions.customHTMLRenderer), this.eventEmitter);\n        this.setMinHeight(this.options.minHeight);\n        this.setHeight(this.options.height);\n        this.setMarkdown(this.options.initialValue, false);\n        if (this.options.placeholder) {\n            this.setPlaceholder(this.options.placeholder);\n        }\n        if (!this.options.initialValue) {\n            this.setHTML(this.initialHTML, false);\n        }\n        this.commandManager = new CommandManager(this.eventEmitter, this.mdEditor.commands, this.wwEditor.commands, function () { return _this.mode; });\n        if (this.options.usageStatistics) {\n            sendHostName();\n        }\n        this.scrollSync = new ScrollSync(this.mdEditor, this.preview, this.eventEmitter);\n        this.addInitEvent();\n        this.addInitCommand(mdCommands, wwCommands);\n        buildQuery(this);\n        if (this.options.hooks) {\n            forEachOwnProperties_1(this.options.hooks, function (fn, key) { return _this.addHook(key, fn); });\n        }\n        if (this.options.events) {\n            forEachOwnProperties_1(this.options.events, function (fn, key) { return _this.on(key, fn); });\n        }\n        this.eventEmitter.emit('load', this);\n        this.moveCursorToStart(this.options.autofocus);\n    }\n    ToastUIEditorCore.prototype.addInitEvent = function () {\n        var _this = this;\n        this.on('needChangeMode', this.changeMode.bind(this));\n        this.on('loadUI', function () {\n            if (_this.height !== 'auto') {\n                // 75px equals default editor ui height - the editing area height\n                var minHeight = Math.min(parseInt(_this.minHeight, 10), parseInt(_this.height, 10) - 75) + \"px\";\n                _this.setMinHeight(minHeight);\n            }\n        });\n        addDefaultImageBlobHook(this.eventEmitter);\n    };\n    ToastUIEditorCore.prototype.addInitCommand = function (mdCommands, wwCommands) {\n        var _this = this;\n        var addPluginCommands = function (type, commandMap) {\n            Object.keys(commandMap).forEach(function (name) {\n                _this.addCommand(type, name, commandMap[name]);\n            });\n        };\n        this.addCommand('markdown', 'toggleScrollSync', function (payload) {\n            _this.eventEmitter.emit('toggleScrollSync', payload.active);\n            return true;\n        });\n        addPluginCommands('markdown', mdCommands);\n        addPluginCommands('wysiwyg', wwCommands);\n    };\n    ToastUIEditorCore.prototype.getCurrentModeEditor = function () {\n        return (this.isMarkdownMode() ? this.mdEditor : this.wwEditor);\n    };\n    /**\n     * Factory method for Editor\n     * @param {object} options Option for initialize TUIEditor\n     * @returns {object} ToastUIEditorCore or ToastUIEditorViewer\n     */\n    ToastUIEditorCore.factory = function (options) {\n        return options.viewer ? new ToastUIEditorViewer(options) : new ToastUIEditorCore(options);\n    };\n    /**\n     * Set language\n     * @param {string|string[]} code - code for I18N language\n     * @param {object} data - language set\n     */\n    ToastUIEditorCore.setLanguage = function (code, data) {\n        i18n.setLanguage(code, data);\n    };\n    /**\n     * change preview style\n     * @param {string} style - 'tab'|'vertical'\n     */\n    ToastUIEditorCore.prototype.changePreviewStyle = function (style) {\n        if (this.mdPreviewStyle !== style) {\n            this.mdPreviewStyle = style;\n            this.eventEmitter.emit('changePreviewStyle', style);\n        }\n    };\n    /**\n     * execute editor command\n     * @param {string} name - command name\n     * @param {object} [payload] - payload for command\n     */\n    ToastUIEditorCore.prototype.exec = function (name, payload) {\n        this.commandManager.exec(name, payload);\n    };\n    /**\n     * @param {string} type - editor type\n     * @param {string} name - command name\n     * @param {function} command - command handler\n     */\n    ToastUIEditorCore.prototype.addCommand = function (type, name, command) {\n        var _this = this;\n        var commandHoc = function (paylaod) {\n            if (paylaod === void 0) { paylaod = {}; }\n            var view = (type === 'markdown' ? _this.mdEditor : _this.wwEditor).view;\n            command(paylaod, view.state, view.dispatch, view);\n        };\n        this.commandManager.addCommand(type, name, commandHoc);\n    };\n    /**\n     * Bind eventHandler to event type\n     * @param {string} type Event type\n     * @param {function} handler Event handler\n     */\n    ToastUIEditorCore.prototype.on = function (type, handler) {\n        this.eventEmitter.listen(type, handler);\n    };\n    /**\n     * Unbind eventHandler from event type\n     * @param {string} type Event type\n     */\n    ToastUIEditorCore.prototype.off = function (type) {\n        this.eventEmitter.removeEventHandler(type);\n    };\n    /**\n     * Add hook to TUIEditor event\n     * @param {string} type Event type\n     * @param {function} handler Event handler\n     */\n    ToastUIEditorCore.prototype.addHook = function (type, handler) {\n        this.eventEmitter.removeEventHandler(type);\n        this.eventEmitter.listen(type, handler);\n    };\n    /**\n     * Remove hook from TUIEditor event\n     * @param {string} type Event type\n     */\n    ToastUIEditorCore.prototype.removeHook = function (type) {\n        this.eventEmitter.removeEventHandler(type);\n    };\n    /**\n     * Set focus to current Editor\n     */\n    ToastUIEditorCore.prototype.focus = function () {\n        this.getCurrentModeEditor().focus();\n    };\n    /**\n     * Remove focus of current Editor\n     */\n    ToastUIEditorCore.prototype.blur = function () {\n        this.getCurrentModeEditor().blur();\n    };\n    /**\n     * Set cursor position to end\n     * @param {boolean} [focus] - automatically focus the editor\n     */\n    ToastUIEditorCore.prototype.moveCursorToEnd = function (focus) {\n        if (focus === void 0) { focus = true; }\n        this.getCurrentModeEditor().moveCursorToEnd(focus);\n    };\n    /**\n     * Set cursor position to start\n     * @param {boolean} [focus] - automatically focus the editor\n     */\n    ToastUIEditorCore.prototype.moveCursorToStart = function (focus) {\n        if (focus === void 0) { focus = true; }\n        this.getCurrentModeEditor().moveCursorToStart(focus);\n    };\n    /**\n     * Set markdown syntax text.\n     * @param {string} markdown - markdown syntax text.\n     * @param {boolean} [cursorToEnd=true] - move cursor to contents end\n     */\n    ToastUIEditorCore.prototype.setMarkdown = function (markdown, cursorToEnd) {\n        if (markdown === void 0) { markdown = ''; }\n        if (cursorToEnd === void 0) { cursorToEnd = true; }\n        this.mdEditor.setMarkdown(markdown, cursorToEnd);\n        if (this.isWysiwygMode()) {\n            var mdNode = this.toastMark.getRootNode();\n            var wwNode = this.convertor.toWysiwygModel(mdNode);\n            this.wwEditor.setModel(wwNode, cursorToEnd);\n        }\n    };\n    /**\n     * Set html value.\n     * @param {string} html - html syntax text\n     * @param {boolean} [cursorToEnd=true] - move cursor to contents end\n     */\n    ToastUIEditorCore.prototype.setHTML = function (html, cursorToEnd) {\n        if (html === void 0) { html = ''; }\n        if (cursorToEnd === void 0) { cursorToEnd = true; }\n        var container = document.createElement('div');\n        // the `br` tag should be replaced with empty block to separate between blocks\n        container.innerHTML = replaceBRWithEmptyBlock(html);\n        var wwNode = DOMParser.fromSchema(this.wwEditor.schema).parse(container);\n        if (this.isMarkdownMode()) {\n            this.mdEditor.setMarkdown(this.convertor.toMarkdownText(wwNode), cursorToEnd);\n        }\n        else {\n            this.wwEditor.setModel(wwNode, cursorToEnd);\n        }\n    };\n    /**\n     * Get content to markdown\n     * @returns {string} markdown text\n     */\n    ToastUIEditorCore.prototype.getMarkdown = function () {\n        if (this.isMarkdownMode()) {\n            return this.mdEditor.getMarkdown();\n        }\n        return this.convertor.toMarkdownText(this.wwEditor.getModel());\n    };\n    /**\n     * Get content to html\n     * @returns {string} html string\n     */\n    ToastUIEditorCore.prototype.getHTML = function () {\n        var _this = this;\n        this.eventEmitter.holdEventInvoke(function () {\n            if (_this.isMarkdownMode()) {\n                var mdNode = _this.toastMark.getRootNode();\n                var wwNode = _this.convertor.toWysiwygModel(mdNode);\n                _this.wwEditor.setModel(wwNode);\n            }\n        });\n        var html = removeProseMirrorHackNodes(this.wwEditor.view.dom.innerHTML);\n        if (this.placeholder) {\n            var rePlaceholder = new RegExp(\"<span class=\\\"placeholder[^>]+>\" + this.placeholder + \"</span>\", 'i');\n            return html.replace(rePlaceholder, '');\n        }\n        return html;\n    };\n    /**\n     * Insert text\n     * @param {string} text - text content\n     */\n    ToastUIEditorCore.prototype.insertText = function (text) {\n        this.getCurrentModeEditor().replaceSelection(text);\n    };\n    /**\n     * Set selection range\n     * @param {number|Array.<number>} start - start position\n     * @param {number|Array.<number>} end - end position\n     */\n    ToastUIEditorCore.prototype.setSelection = function (start, end) {\n        this.getCurrentModeEditor().setSelection(start, end);\n    };\n    /**\n     * Replace selection range with given text content\n     * @param {string} text - text content\n     * @param {number|Array.<number>} [start] - start position\n     * @param {number|Array.<number>} [end] - end position\n     */\n    ToastUIEditorCore.prototype.replaceSelection = function (text, start, end) {\n        this.getCurrentModeEditor().replaceSelection(text, start, end);\n    };\n    /**\n     * Delete the content of selection range\n     * @param {number|Array.<number>} [start] - start position\n     * @param {number|Array.<number>} [end] - end position\n     */\n    ToastUIEditorCore.prototype.deleteSelection = function (start, end) {\n        this.getCurrentModeEditor().deleteSelection(start, end);\n    };\n    /**\n     * Get selected text content\n     * @param {number|Array.<number>} [start] - start position\n     * @param {number|Array.<number>} [end] - end position\n     * @returns {string} - selected text content\n     */\n    ToastUIEditorCore.prototype.getSelectedText = function (start, end) {\n        return this.getCurrentModeEditor().getSelectedText(start, end);\n    };\n    /**\n     * Get range of the node\n     * @param {number|Array.<number>} [pos] - position\n     * @returns {Array.<number[]>|Array.<number>} - node [start, end] range\n     * @example\n     * // Markdown mode\n     * const rangeInfo = editor.getRangeInfoOfNode();\n     *\n     * console.log(rangeInfo); // { range: [[startLineOffset, startCurorOffset], [endLineOffset, endCurorOffset]], type: 'emph' }\n     *\n     * // WYSIWYG mode\n     * const rangeInfo = editor.getRangeInfoOfNode();\n     *\n     * console.log(rangeInfo); // { range: [startCursorOffset, endCursorOffset], type: 'emph' }\n     */\n    ToastUIEditorCore.prototype.getRangeInfoOfNode = function (pos) {\n        return this.getCurrentModeEditor().getRangeInfoOfNode(pos);\n    };\n    /**\n     * Add widget to selection\n     * @param {Node} node - widget node\n     * @param {string} style - Adding style \"top\" or \"bottom\"\n     * @param {number|Array.<number>} [pos] - position\n     */\n    ToastUIEditorCore.prototype.addWidget = function (node, style, pos) {\n        this.getCurrentModeEditor().addWidget(node, style, pos);\n    };\n    /**\n     * Replace node with widget to range\n     * @param {number|Array.<number>} start - start position\n     * @param {number|Array.<number>} end - end position\n     * @param {string} text - widget text content\n     */\n    ToastUIEditorCore.prototype.replaceWithWidget = function (start, end, text) {\n        this.getCurrentModeEditor().replaceWithWidget(start, end, text);\n    };\n    /**\n     * Set editor height\n     * @param {string} height - editor height in pixel\n     */\n    ToastUIEditorCore.prototype.setHeight = function (height) {\n        var el = this.options.el;\n        if (isString_1(height)) {\n            if (height === 'auto') {\n                addClass_1(el, 'auto-height');\n            }\n            else {\n                removeClass_1(el, 'auto-height');\n            }\n            this.setMinHeight(this.getMinHeight());\n        }\n        css_1(el, { height: height });\n        this.height = height;\n    };\n    /**\n     * Get editor height\n     * @returns {string} editor height in pixel\n     */\n    ToastUIEditorCore.prototype.getHeight = function () {\n        return this.height;\n    };\n    /**\n     * Set minimum height to editor content\n     * @param {string} minHeight - min content height in pixel\n     */\n    ToastUIEditorCore.prototype.setMinHeight = function (minHeight) {\n        if (minHeight !== this.minHeight) {\n            var height = this.height || this.options.height;\n            if (height !== 'auto' && this.options.el.querySelector(\".\" + cls('main'))) {\n                // 75px equals default editor ui height - the editing area height\n                minHeight = Math.min(parseInt(minHeight, 10), parseInt(height, 10) - 75) + \"px\";\n            }\n            var minHeightNum = parseInt(minHeight, 10);\n            this.minHeight = minHeight;\n            this.wwEditor.setMinHeight(minHeightNum);\n            this.mdEditor.setMinHeight(minHeightNum);\n            this.preview.setMinHeight(minHeightNum);\n        }\n    };\n    /**\n     * Get minimum height of editor content\n     * @returns {string} min height in pixel\n     */\n    ToastUIEditorCore.prototype.getMinHeight = function () {\n        return this.minHeight;\n    };\n    /**\n     * Return true if current editor mode is Markdown\n     * @returns {boolean}\n     */\n    ToastUIEditorCore.prototype.isMarkdownMode = function () {\n        return this.mode === 'markdown';\n    };\n    /**\n     * Return true if current editor mode is WYSIWYG\n     * @returns {boolean}\n     */\n    ToastUIEditorCore.prototype.isWysiwygMode = function () {\n        return this.mode === 'wysiwyg';\n    };\n    /**\n     * Return false\n     * @returns {boolean}\n     */\n    ToastUIEditorCore.prototype.isViewer = function () {\n        return false;\n    };\n    /**\n     * Get current Markdown editor's preview style\n     * @returns {string}\n     */\n    ToastUIEditorCore.prototype.getCurrentPreviewStyle = function () {\n        return this.mdPreviewStyle;\n    };\n    /**\n     * Change editor's mode to given mode string\n     * @param {string} mode - Editor mode name of want to change\n     * @param {boolean} [withoutFocus] - Change mode without focus\n     */\n    ToastUIEditorCore.prototype.changeMode = function (mode, withoutFocus) {\n        if (this.mode === mode) {\n            return;\n        }\n        this.mode = mode;\n        if (this.isWysiwygMode()) {\n            var mdNode = this.toastMark.getRootNode();\n            var wwNode = this.convertor.toWysiwygModel(mdNode);\n            this.wwEditor.setModel(wwNode);\n        }\n        else {\n            var wwNode = this.wwEditor.getModel();\n            this.mdEditor.setMarkdown(this.convertor.toMarkdownText(wwNode), !withoutFocus);\n        }\n        this.eventEmitter.emit('removePopupWidget');\n        this.eventEmitter.emit('changeMode', mode);\n        if (!withoutFocus) {\n            var pos = this.convertor.getMappedPos();\n            this.focus();\n            if (this.isWysiwygMode() && isNumber_1(pos)) {\n                this.wwEditor.setSelection(pos);\n            }\n            else if (Array.isArray(pos)) {\n                this.mdEditor.setSelection(pos);\n            }\n        }\n    };\n    /**\n     * Destroy TUIEditor from document\n     */\n    ToastUIEditorCore.prototype.destroy = function () {\n        var _this = this;\n        this.wwEditor.destroy();\n        this.mdEditor.destroy();\n        this.preview.destroy();\n        this.scrollSync.destroy();\n        this.eventEmitter.emit('destroy');\n        this.eventEmitter.getEvents().forEach(function (_, type) { return _this.off(type); });\n    };\n    /**\n     * Hide TUIEditor\n     */\n    ToastUIEditorCore.prototype.hide = function () {\n        this.eventEmitter.emit('hide');\n    };\n    /**\n     * Show TUIEditor\n     */\n    ToastUIEditorCore.prototype.show = function () {\n        this.eventEmitter.emit('show');\n    };\n    /**\n     * Move on scroll position of the editor container\n     * @param {number} value scrollTop value of editor container\n     */\n    ToastUIEditorCore.prototype.setScrollTop = function (value) {\n        this.getCurrentModeEditor().setScrollTop(value);\n    };\n    /**\n     * Get scroll position value of editor container\n     * @returns {number} scrollTop value of editor container\n     */\n    ToastUIEditorCore.prototype.getScrollTop = function () {\n        return this.getCurrentModeEditor().getScrollTop();\n    };\n    /**\n     * Reset TUIEditor\n     */\n    ToastUIEditorCore.prototype.reset = function () {\n        this.wwEditor.setModel([]);\n        this.mdEditor.setMarkdown('');\n    };\n    /**\n     * Get current selection range\n     * @returns {Array.<number[]>|Array.<number>} Returns the range of the selection depending on the editor mode\n     * @example\n     * // Markdown mode\n     * const mdSelection = editor.getSelection();\n     *\n     * console.log(mdSelection); // [[startLineOffset, startCurorOffset], [endLineOffset, endCurorOffset]]\n     *\n     * // WYSIWYG mode\n     * const wwSelection = editor.getSelection();\n     *\n     * console.log(wwSelection); // [startCursorOffset, endCursorOffset]\n     */\n    ToastUIEditorCore.prototype.getSelection = function () {\n        return this.getCurrentModeEditor().getSelection();\n    };\n    /**\n     * Set the placeholder on all editors\n     * @param {string} placeholder - placeholder to set\n     */\n    ToastUIEditorCore.prototype.setPlaceholder = function (placeholder) {\n        this.placeholder = placeholder;\n        this.mdEditor.setPlaceholder(placeholder);\n        this.wwEditor.setPlaceholder(placeholder);\n    };\n    /**\n     * Get markdown editor, preview, wysiwyg editor DOM elements\n     */\n    ToastUIEditorCore.prototype.getEditorElements = function () {\n        return {\n            mdEditor: this.mdEditor.getElement(),\n            mdPreview: this.preview.getElement(),\n            wwEditor: this.wwEditor.getElement(),\n        };\n    };\n    /**\n     * Convert position to match editor mode\n     * @param {number|Array.<number>} start - start position\n     * @param {number|Array.<number>} end - end position\n     * @param {string} mode - Editor mode name of want to match converted position to\n     */\n    ToastUIEditorCore.prototype.convertPosToMatchEditorMode = function (start, end, mode) {\n        var _a, _b;\n        if (end === void 0) { end = start; }\n        if (mode === void 0) { mode = this.mode; }\n        var doc = this.mdEditor.view.state.doc;\n        var isFromArray = Array.isArray(start);\n        var isToArray = Array.isArray(end);\n        var convertedFrom = start;\n        var convertedTo = end;\n        if (isFromArray !== isToArray) {\n            throw new Error('Types of arguments must be same');\n        }\n        if (mode === 'markdown' && !isFromArray && !isToArray) {\n            _a = getEditorToMdPos(doc, start, end), convertedFrom = _a[0], convertedTo = _a[1];\n        }\n        else if (mode === 'wysiwyg' && isFromArray && isToArray) {\n            _b = getMdToEditorPos(doc, start, end), convertedFrom = _b[0], convertedTo = _b[1];\n        }\n        return [convertedFrom, convertedTo];\n    };\n    return ToastUIEditorCore;\n}());\n\n// @TODO: change syntax with our convention\n/* eslint-disable */\nfunction html$1 (n) {\n  for (\n    var l,\n      e,\n      s = arguments,\n      t = 1,\n      r = '',\n      u = '',\n      a = [0],\n      c = function (n) {\n        t === 1 && (n || (r = r.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g, '')))\n          ? a.push(n ? s[n] : r)\n          : t === 3 && (n || r)\n          ? ((a[1] = n ? s[n] : r), (t = 2))\n          : t === 2 && r === '...' && n\n          ? (a[2] = assign(a[2] || {}, s[n]))\n          : t === 2 && r && !n\n          ? ((a[2] = a[2] || {})[r] = !0)\n          : t >= 5 &&\n            (t === 5\n              ? (((a[2] = a[2] || {})[e] = n ? (r ? r + s[n] : s[n]) : r), (t = 6))\n              : (n || r) && (a[2][e] += n ? r + s[n] : r)),\n          (r = '');\n      },\n      h = 0;\n    h < n.length;\n    h++\n  ) {\n    h && (t === 1 && c(), c(h));\n    for (let i = 0; i < n[h].length; i++)\n      (l = n[h][i]),\n        t === 1\n          ? l === '<'\n            ? (c(), (a = [a, '', null]), (t = 3))\n            : (r += l)\n          : t === 4\n          ? r === '--' && l === '>'\n            ? ((t = 1), (r = ''))\n            : (r = l + r[0])\n          : u\n          ? l === u\n            ? (u = '')\n            : (r += l)\n          : l === '\"' || l === \"'\"\n          ? (u = l)\n          : l === '>'\n          ? (c(), (t = 1))\n          : t &&\n            (l === '='\n              ? ((t = 5), (e = r), (r = ''))\n              : l === '/' && (t < 5 || n[h][i + 1] === '>')\n              ? (c(),\n                t === 3 && (a = a[0]),\n                (t = a),\n                (a = a[0]).push(this.apply(null, t.slice(1))),\n                (t = 0))\n              : l === ' ' || l === '\\t' || l === '\\n' || l === '\\r'\n              ? (c(), (t = 2))\n              : (r += l)),\n        t === 3 && r === '!--' && ((t = 4), (a = a[0]));\n  }\n  return c(), a.length > 2 ? a.slice(1) : a[1];\n}\n\n/**\n * @fileoverview Check whether the given variable is a string or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is a boolean or not.\n *  If the given variable is a boolean, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is boolean?\n * @memberof module:type\n */\nfunction isBoolean(obj) {\n  return typeof obj === 'boolean' || obj instanceof Boolean;\n}\n\nvar isBoolean_1 = isBoolean;\n\nvar VNodeWalker = /** @class */ (function () {\n    function VNodeWalker(current) {\n        this.current = current;\n        this.root = current;\n        this.entering = true;\n    }\n    VNodeWalker.prototype.walk = function () {\n        var _a = this, entering = _a.entering, cur = _a.current;\n        if (!cur) {\n            return null;\n        }\n        if (entering) {\n            if (cur.firstChild) {\n                this.current = cur.firstChild;\n                this.entering = true;\n            }\n            else {\n                this.entering = false;\n            }\n        }\n        else if (cur === this.root) {\n            this.current = null;\n        }\n        else if (cur.next) {\n            this.current = cur.next;\n            this.entering = true;\n        }\n        else {\n            this.current = cur.parent;\n            this.entering = false;\n        }\n        return { vnode: cur, entering: entering };\n    };\n    return VNodeWalker;\n}());\nvar VNode = /** @class */ (function () {\n    function VNode(type, props, children) {\n        this.parent = null;\n        this.old = null;\n        this.firstChild = null;\n        this.next = null;\n        this.skip = false;\n        this.type = type;\n        this.props = props;\n        this.children = children;\n        this.props.children = children;\n        if (props.ref) {\n            this.ref = props.ref;\n            delete props.ref;\n        }\n        if (props.key) {\n            this.key = props.key;\n            delete props.key;\n        }\n    }\n    VNode.prototype.walker = function () {\n        return new VNodeWalker(this);\n    };\n    VNode.removalNodes = [];\n    return VNode;\n}());\n\nfunction createTextNode(text) {\n    return new VNode('TEXT_NODE', { nodeValue: text }, []);\n}\nfunction excludeUnnecessaryChild(child, flatted) {\n    var vnode = child;\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    if (isBoolean_1(child) || child == null) {\n        vnode = null;\n    }\n    else if (isString_1(child) || isNumber_1(child)) {\n        vnode = createTextNode(String(child));\n    }\n    if (vnode) {\n        flatted.push(vnode);\n    }\n}\nfunction h(type, props) {\n    var children = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        children[_i - 2] = arguments[_i];\n    }\n    var flatted = [];\n    children.forEach(function (child) {\n        if (Array.isArray(child)) {\n            child.forEach(function (vnode) {\n                excludeUnnecessaryChild(vnode, flatted);\n            });\n        }\n        else {\n            excludeUnnecessaryChild(child, flatted);\n        }\n    });\n    return new VNode(type, props || {}, flatted);\n}\n// @ts-ignore\nvar html = html$1.bind(h);\n\n/**\n * @fileoverview Check whether the given variable is an object or not.\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n */\n\n/**\n * Check whether the given variable is an object or not.\n * If the given variable is an object, return true.\n * @param {*} obj - Target for checking\n * @returns {boolean} Is object?\n * @memberof module:type\n */\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nvar isObject_1 = isObject;\n\n// @TODO: clearfy the type definition for CSSDeclaration\nfunction createNode(vnode) {\n    var node;\n    if (vnode.type === 'TEXT_NODE') {\n        node = document.createTextNode(vnode.props.nodeValue);\n    }\n    else {\n        node = document.createElement(vnode.type);\n        setProps(node, {}, vnode.props);\n    }\n    return node;\n}\nfunction removeNode(vnode, parentNode) {\n    if (vnode.node) {\n        parentNode.removeChild(vnode.node);\n    }\n    else {\n        removeNode(vnode.firstChild, parentNode);\n    }\n}\nfunction innerDiff(node, prevProps, nextProps) {\n    Object.keys(prevProps).forEach(function (propName) {\n        if (/^on/.test(propName)) {\n            if (!nextProps[propName] || prevProps[propName] !== nextProps[propName]) {\n                var eventName = propName.slice(2).toLowerCase();\n                node.removeEventListener(eventName, prevProps[propName]);\n            }\n        }\n        else if (propName !== 'children' && !nextProps[propName] && !isTextNode(node)) {\n            node.removeAttribute(propName);\n        }\n    });\n    setProps(node, prevProps, nextProps, function (propName) { return !shallowEqual(prevProps[propName], nextProps[propName]); });\n}\nvar reNonDimension = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\nfunction setProps(node, prevProps, props, condition) {\n    Object.keys(props).forEach(function (propName) {\n        if (!condition || condition(propName)) {\n            if (/^on/.test(propName)) {\n                var eventName = propName.slice(2).toLowerCase();\n                node.addEventListener(eventName, props[propName]);\n            }\n            else if (propName === 'nodeValue') {\n                node[propName] = props[propName];\n            }\n            else if (propName === 'style' && isObject_1(props[propName])) {\n                setStyleProps(node, prevProps[propName], props[propName]);\n            }\n            else if (propName !== 'children') {\n                if (props[propName] === false) {\n                    node.removeAttribute(propName);\n                }\n                else {\n                    node.setAttribute(propName, props[propName]);\n                }\n            }\n        }\n    });\n}\nfunction setStyleProps(node, prevStyleProps, styleProps) {\n    if (prevStyleProps) {\n        Object.keys(prevStyleProps).forEach(function (styleProp) {\n            // @ts-ignore\n            node.style[styleProp] = '';\n        });\n    }\n    Object.keys(styleProps).forEach(function (styleProp) {\n        var value = styleProps[styleProp];\n        // @ts-ignore\n        node.style[styleProp] =\n            isNumber_1(value) && !reNonDimension.test(styleProp) ? value + \"px\" : value;\n    });\n}\n\nfunction commit(vnode) {\n    VNode.removalNodes.forEach(function (removalNode) { return diff(removalNode); });\n    if (vnode) {\n        var next = void 0;\n        var walker = vnode.walker();\n        while ((next = walker.walk())) {\n            vnode = next.vnode;\n            if (next.entering) {\n                diff(vnode);\n            }\n            else if (isFunction_1(vnode.type)) {\n                var comp = vnode.component;\n                // lifecycle method\n                if (!vnode.old && comp.mounted) {\n                    comp.mounted();\n                }\n                if (vnode.old && comp.updated) {\n                    var prevProps = comp.prevProps || {};\n                    comp.updated(prevProps);\n                }\n            }\n        }\n    }\n}\nfunction getParentNode(vnode) {\n    var parent = vnode.parent;\n    while (!parent.node) {\n        parent = parent.parent;\n    }\n    return parent.node;\n}\nfunction diff(vnode) {\n    if (!vnode || !vnode.parent) {\n        return;\n    }\n    if (vnode.node) {\n        var parentNode = getParentNode(vnode);\n        if (vnode.effect === 'A') {\n            parentNode.appendChild(vnode.node);\n        }\n        else if (vnode.effect === 'U') {\n            innerDiff(vnode.node, vnode.old.props, vnode.props);\n        }\n    }\n    if (vnode.effect === 'D') {\n        var next = void 0;\n        var walker = vnode.walker();\n        while ((next = walker.walk())) {\n            vnode = next.vnode;\n            if (!next.entering) {\n                if (isFunction_1(vnode.type)) {\n                    var comp = vnode.component;\n                    // lifecycle method\n                    if (comp.beforeDestroy) {\n                        comp.beforeDestroy();\n                    }\n                }\n                else {\n                    var parentNode = getParentNode(vnode);\n                    removeNode(vnode, parentNode);\n                }\n            }\n        }\n    }\n    // apply ref\n    if (vnode.ref) {\n        if (vnode.component) {\n            vnode.ref(vnode.component);\n        }\n        else if (vnode.node) {\n            vnode.ref(vnode.node);\n        }\n    }\n}\n\nfunction createComponent(Comp, vnode) {\n    var props = vnode.props, component = vnode.component;\n    if (component) {\n        component.prevProps = component.props;\n        component.props = vnode.props;\n        return component;\n    }\n    return new Comp(props);\n}\nfunction buildVNode(vnode) {\n    var root = vnode;\n    while (vnode && !vnode.skip) {\n        if (isFunction_1(vnode.type)) {\n            var instance = createComponent(vnode.type, vnode);\n            instance.vnode = vnode;\n            vnode.component = instance;\n            vnode.props.children = vnode.children = [instance.render()];\n            buildChildrenVNode(vnode);\n        }\n        else {\n            if (!vnode.node) {\n                vnode.node = createNode(vnode);\n            }\n            buildChildrenVNode(vnode);\n        }\n        if (vnode.firstChild) {\n            vnode = vnode.firstChild;\n        }\n        else {\n            while (vnode && vnode.parent && !vnode.next) {\n                vnode = vnode.parent;\n                if (vnode === root) {\n                    break;\n                }\n            }\n            vnode = vnode.next;\n        }\n    }\n}\nfunction isSameType(old, vnode) {\n    return old && vnode && vnode.type === old.type && (!vnode.key || vnode.key === old.key);\n}\n// @TODO: add key diff algorithm\nfunction buildChildrenVNode(parent) {\n    var children = parent.children;\n    var old = parent.old ? parent.old.firstChild : null;\n    var prev = null;\n    children.forEach(function (vnode, index) {\n        var sameType = isSameType(old, vnode);\n        if (sameType) {\n            vnode.old = old;\n            vnode.parent = parent;\n            vnode.node = old.node;\n            vnode.component = old.component;\n            vnode.effect = 'U';\n        }\n        if (vnode && !sameType) {\n            vnode.old = null;\n            vnode.parent = parent;\n            vnode.node = null;\n            vnode.effect = 'A';\n        }\n        if (old && !sameType) {\n            VNode.removalNodes.push(old);\n            old.effect = 'D';\n        }\n        if (old) {\n            old = old.next;\n        }\n        if (index === 0) {\n            parent.firstChild = vnode;\n        }\n        else if (vnode) {\n            prev.next = vnode;\n        }\n        prev = vnode;\n    });\n    var lastChild = last$1(children);\n    if (!children.length) {\n        while (old) {\n            VNode.removalNodes.push(old);\n            old.effect = 'D';\n            old = old.next;\n        }\n    }\n    while (old && lastChild) {\n        if (old && lastChild.old !== old) {\n            VNode.removalNodes.push(old);\n            old.effect = 'D';\n            old = old.next;\n        }\n    }\n}\n\nfunction destroy(vnode) {\n    vnode.effect = 'D';\n    VNode.removalNodes = [vnode];\n    commit();\n    VNode.removalNodes = [];\n}\nfunction rerender(comp) {\n    var root = comp.vnode;\n    root.effect = 'U';\n    root.old = root;\n    // skip for unnecessary reconciliation\n    if (root.next) {\n        root.next.skip = true;\n    }\n    VNode.removalNodes = [];\n    buildVNode(root);\n    commit(root);\n    if (root.next) {\n        root.next.skip = false;\n    }\n}\nfunction render(container, vnode) {\n    var root = new VNode(container.tagName.toLowerCase(), {}, [vnode]);\n    root.node = container;\n    VNode.removalNodes = [];\n    buildVNode(root);\n    commit(root);\n    return function () { return destroy(root.firstChild); };\n}\n\nvar Component = /** @class */ (function () {\n    function Component(props) {\n        this.props = props;\n        this.state = {};\n        this.refs = {};\n    }\n    Component.prototype.setState = function (state) {\n        var newState = __assign$1(__assign$1({}, this.state), state);\n        if (!shallowEqual(this.state, newState)) {\n            this.state = newState;\n            rerender(this);\n        }\n    };\n    return Component;\n}());\n\nvar Switch = /** @class */ (function (_super) {\n    __extends$1(Switch, _super);\n    function Switch(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            hide: false,\n        };\n        return _this;\n    }\n    Switch.prototype.show = function () {\n        this.setState({ hide: false });\n    };\n    Switch.prototype.hide = function () {\n        this.setState({ hide: true });\n    };\n    Switch.prototype.render = function () {\n        var _a = this.props, editorType = _a.editorType, eventEmitter = _a.eventEmitter;\n        return html(templateObject_1$h || (templateObject_1$h = __makeTemplateObject([\"\\n      <div class=\\\"\", \"\\\" style=\\\"display: \", \"\\\">\\n        <div\\n          class=\\\"tab-item\", \"\\\"\\n          onClick=\", \"\\n        >\\n          \", \"\\n        </div>\\n        <div\\n          class=\\\"tab-item\", \"\\\"\\n          onClick=\", \"\\n        >\\n          \", \"\\n        </div>\\n      </div>\\n    \"], [\"\\n      <div class=\\\"\", \"\\\" style=\\\"display: \", \"\\\">\\n        <div\\n          class=\\\"tab-item\", \"\\\"\\n          onClick=\",\n            \"\\n        >\\n          \", \"\\n        </div>\\n        <div\\n          class=\\\"tab-item\", \"\\\"\\n          onClick=\",\n            \"\\n        >\\n          \", \"\\n        </div>\\n      </div>\\n    \"])), cls('mode-switch'), this.state.hide ? 'none' : 'block', editorType === 'markdown' ? ' active' : '', function () {\n            eventEmitter.emit('needChangeMode', 'markdown');\n        }, i18n.get('Markdown'), editorType === 'wysiwyg' ? ' active' : '', function () {\n            eventEmitter.emit('needChangeMode', 'wysiwyg');\n        }, i18n.get('WYSIWYG'));\n    };\n    return Switch;\n}(Component));\nvar templateObject_1$h;\n\n/**\n * @fileoverview Creates a debounced function that delays invoking fn until after delay milliseconds has elapsed since the last time the debouced function was invoked.\n * @author NHN FE Development Lab <dl_javascript.nhn.com>\n */\n\n/**\n * @module tricks\n */\n\n/**\n * Creates a debounced function that delays invoking fn until after delay milliseconds has elapsed\n * since the last time the debouced function was invoked.\n * @param {function} fn The function to debounce.\n * @param {number} [delay=0] The number of milliseconds to delay\n * @returns {function} debounced function.\n * @memberof module:tricks\n * @example\n * // ES6\n * import debounce from 'tui-code-snippet/tricks/debounce';\n * \n * // CommonJS\n * const debounce = require('tui-code-snippet/tricks/debounce');\n *\n * function someMethodToInvokeDebounced() {}\n *\n * const debounced = debounce(someMethodToInvokeDebounced, 300);\n *\n * // invoke repeatedly\n * debounced();\n * debounced();\n * debounced();\n * debounced();\n * debounced();\n * debounced();    // last invoke of debounced()\n *\n * // invoke someMethodToInvokeDebounced() after 300 milliseconds.\n */\nfunction debounce$1(fn, delay) {\n  var timer, args;\n\n  /* istanbul ignore next */\n  delay = delay || 0;\n\n  function debounced() { // eslint-disable-line require-jsdoc\n    args = Array.prototype.slice.call(arguments);\n\n    window.clearTimeout(timer);\n    timer = window.setTimeout(function() {\n      fn.apply(null, args);\n    }, delay);\n  }\n\n  return debounced;\n}\n\nvar debounce_1 = debounce$1;\n\n/**\n * @fileoverview Creates a throttled function that only invokes fn at most once per every interval milliseconds.\n * @author NHN FE Development Lab <dl_javascript.nhn.com>\n */\n\nvar debounce = debounce_1;\n\n/**\n * Creates a throttled function that only invokes fn at most once per every interval milliseconds.\n * You can use this throttle short time repeatedly invoking functions. (e.g MouseMove, Resize ...)\n * if you need reuse throttled method. you must remove slugs (e.g. flag variable) related with throttling.\n * @param {function} fn function to throttle\n * @param {number} [interval=0] the number of milliseconds to throttle invocations to.\n * @returns {function} throttled function\n * @memberof module:tricks\n * @example\n * // ES6\n * import throttle from 'tui-code-snippet/tricks/throttle';\n * \n * // CommonJS\n * const throttle = require('tui-code-snippet/tricks/throttle');\n *\n * function someMethodToInvokeThrottled() {}\n *\n * const throttled = throttle(someMethodToInvokeThrottled, 300);\n *\n * // invoke repeatedly\n * throttled();    // invoke (leading)\n * throttled();\n * throttled();    // invoke (near 300 milliseconds)\n * throttled();\n * throttled();\n * throttled();    // invoke (near 600 milliseconds)\n * // ...\n * // invoke (trailing)\n *\n * // if you need reuse throttled method. then invoke reset()\n * throttled.reset();\n */\nfunction throttle$1(fn, interval) {\n  var base;\n  var isLeading = true;\n  var tick = function(_args) {\n    fn.apply(null, _args);\n    base = null;\n  };\n  var debounced, stamp, args;\n\n  /* istanbul ignore next */\n  interval = interval || 0;\n\n  debounced = debounce(tick, interval);\n\n  function throttled() { // eslint-disable-line require-jsdoc\n    args = Array.prototype.slice.call(arguments);\n\n    if (isLeading) {\n      tick(args);\n      isLeading = false;\n\n      return;\n    }\n\n    stamp = Number(new Date());\n\n    base = base || stamp;\n\n    // pass array directly because `debounce()`, `tick()` are already use\n    // `apply()` method to invoke developer's `fn` handler.\n    //\n    // also, this `debounced` line invoked every time for implements\n    // `trailing` features.\n    debounced(args);\n\n    if ((stamp - base) >= interval) {\n      tick(args);\n    }\n  }\n\n  function reset() { // eslint-disable-line require-jsdoc\n    isLeading = true;\n    base = null;\n  }\n\n  throttled.reset = reset;\n\n  return throttled;\n}\n\nvar throttle_1 = throttle$1;\n\n/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nvar HeadingPopupBody = /** @class */ (function (_super) {\n    __extends$1(HeadingPopupBody, _super);\n    function HeadingPopupBody() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HeadingPopupBody.prototype.execCommand = function (ev) {\n        var el = closest(ev.target, 'li');\n        this.props.execCommand('heading', {\n            level: Number(el.getAttribute('data-level')),\n        });\n    };\n    HeadingPopupBody.prototype.render = function () {\n        var _this = this;\n        return html(templateObject_2$8 || (templateObject_2$8 = __makeTemplateObject([\"\\n      <ul\\n        onClick=\", \"\\n        aria-role=\\\"menu\\\"\\n        aria-label=\\\"\", \"\\\"\\n      >\\n        \", \"\\n        <li data-type=\\\"Paragraph\\\" aria-role=\\\"menuitem\\\">\\n          <div>\", \"</div>\\n        </li>\\n      </ul>\\n    \"], [\"\\n      <ul\\n        onClick=\", \"\\n        aria-role=\\\"menu\\\"\\n        aria-label=\\\"\", \"\\\"\\n      >\\n        \",\n            \"\\n        <li data-type=\\\"Paragraph\\\" aria-role=\\\"menuitem\\\">\\n          <div>\", \"</div>\\n        </li>\\n      </ul>\\n    \"])), function (ev) { return _this.execCommand(ev); }, i18n.get('Headings'), [1, 2, 3, 4, 5, 6].map(function (level) {\n            return html(templateObject_1$g || (templateObject_1$g = __makeTemplateObject([\"\\n              <li data-level=\\\"\", \"\\\" data-type=\\\"Heading\\\" aria-role=\\\"menuitem\\\">\\n                <\", \">\", \" \", \"</$>\\n              </li>\\n            \"], [\"\\n              <li data-level=\\\"\", \"\\\" data-type=\\\"Heading\\\" aria-role=\\\"menuitem\\\">\\n                <\", \">\", \" \", \"</$>\\n              </li>\\n            \"])), level, \"h\" + level, i18n.get('Heading'), level);\n        }), i18n.get('Paragraph'));\n    };\n    return HeadingPopupBody;\n}(Component));\nvar templateObject_1$g, templateObject_2$8;\n\nvar Tabs = /** @class */ (function (_super) {\n    __extends$1(Tabs, _super);\n    function Tabs() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Tabs.prototype.toggleTab = function (ev, activeTab) {\n        this.props.onClick(ev, activeTab);\n    };\n    Tabs.prototype.render = function () {\n        var _this = this;\n        return html(templateObject_2$7 || (templateObject_2$7 = __makeTemplateObject([\"\\n      <div class=\\\"\", \"\\\" aria-role=\\\"tabpanel\\\">\\n        \", \"\\n      </div>\\n    \"], [\"\\n      <div class=\\\"\", \"\\\" aria-role=\\\"tabpanel\\\">\\n        \",\n            \"\\n      </div>\\n    \"])), cls('tabs'), this.props.tabs.map(function (_a) {\n            var name = _a.name, text = _a.text;\n            var isActive = _this.props.activeTab === name;\n            return html(templateObject_1$f || (templateObject_1$f = __makeTemplateObject([\"\\n            <div\\n              class=\\\"tab-item\", \"\\\"\\n              onClick=\", \"\\n              aria-role=\\\"tab\\\"\\n              aria-label=\\\"\", \"\\\"\\n              aria-selected=\\\"\", \"\\\"\\n              tabindex=\\\"\", \"\\\"\\n            >\\n              \", \"\\n            </div>\\n          \"], [\"\\n            <div\\n              class=\\\"tab-item\", \"\\\"\\n              onClick=\", \"\\n              aria-role=\\\"tab\\\"\\n              aria-label=\\\"\", \"\\\"\\n              aria-selected=\\\"\", \"\\\"\\n              tabindex=\\\"\", \"\\\"\\n            >\\n              \", \"\\n            </div>\\n          \"])), isActive ? ' active' : '', function (ev) { return _this.toggleTab(ev, name); }, i18n.get(text), isActive ? 'true' : 'false', isActive ? '0' : '-1', i18n.get(text));\n        }));\n    };\n    return Tabs;\n}(Component));\nvar templateObject_1$f, templateObject_2$7;\n\nvar TYPE_UI = 'ui';\nvar ImagePopupBody = /** @class */ (function (_super) {\n    __extends$1(ImagePopupBody, _super);\n    function ImagePopupBody(props) {\n        var _this = _super.call(this, props) || this;\n        _this.initialize = function (activeTab) {\n            if (activeTab === void 0) { activeTab = 'file'; }\n            var urlEl = _this.refs.url;\n            urlEl.value = '';\n            _this.refs.altText.value = '';\n            _this.refs.file.value = '';\n            removeClass_1(urlEl, 'wrong');\n            _this.setState({ activeTab: activeTab, file: null, fileNameElClassName: '' });\n        };\n        _this.execCommand = function () {\n            if (_this.state.activeTab === 'file') {\n                _this.emitAddImageBlob();\n            }\n            else {\n                _this.emitAddImage();\n            }\n        };\n        _this.toggleTab = function (_, activeTab) {\n            if (activeTab !== _this.state.activeTab) {\n                _this.initialize(activeTab);\n            }\n        };\n        _this.showFileSelectBox = function () {\n            _this.refs.file.click();\n        };\n        _this.changeFile = function (ev) {\n            var files = ev.target.files;\n            if (files === null || files === void 0 ? void 0 : files.length) {\n                _this.setState({ file: files[0] });\n            }\n        };\n        _this.state = { activeTab: 'file', file: null, fileNameElClassName: '' };\n        _this.tabs = [\n            { name: 'file', text: 'File' },\n            { name: 'url', text: 'URL' },\n        ];\n        return _this;\n    }\n    ImagePopupBody.prototype.emitAddImageBlob = function () {\n        var _this = this;\n        var files = this.refs.file.files;\n        var altTextEl = this.refs.altText;\n        var fileNameElClassName = ' wrong';\n        if (files === null || files === void 0 ? void 0 : files.length) {\n            fileNameElClassName = '';\n            var imageFile = files.item(0);\n            var hookCallback = function (url, text) {\n                return _this.props.execCommand('addImage', { imageUrl: url, altText: text || altTextEl.value });\n            };\n            this.props.eventEmitter.emit('addImageBlobHook', imageFile, hookCallback, TYPE_UI);\n        }\n        this.setState({ fileNameElClassName: fileNameElClassName });\n    };\n    ImagePopupBody.prototype.emitAddImage = function () {\n        var imageUrlEl = this.refs.url;\n        var altTextEl = this.refs.altText;\n        var imageUrl = imageUrlEl.value;\n        var altText = altTextEl.value || 'image';\n        removeClass_1(imageUrlEl, 'wrong');\n        if (!imageUrl.length) {\n            addClass_1(imageUrlEl, 'wrong');\n            return;\n        }\n        if (imageUrl) {\n            this.props.execCommand('addImage', { imageUrl: imageUrl, altText: altText });\n        }\n    };\n    ImagePopupBody.prototype.preventSelectStart = function (ev) {\n        ev.preventDefault();\n    };\n    ImagePopupBody.prototype.updated = function () {\n        if (!this.props.show) {\n            this.initialize();\n        }\n    };\n    ImagePopupBody.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, activeTab = _a.activeTab, file = _a.file, fileNameElClassName = _a.fileNameElClassName;\n        return html(templateObject_1$e || (templateObject_1$e = __makeTemplateObject([\"\\n      <div aria-label=\\\"\", \"\\\">\\n        <\", \" tabs=\", \" activeTab=\", \" onClick=\", \" />\\n        <div style=\\\"display:\", \"\\\">\\n          <label for=\\\"toastuiImageUrlInput\\\">\", \"</label>\\n          <input\\n            id=\\\"toastuiImageUrlInput\\\"\\n            type=\\\"text\\\"\\n            ref=\", \"\\n          />\\n        </div>\\n        <div style=\\\"display:\", \";position: relative;\\\">\\n          <label for=\\\"toastuiImageFileInput\\\">\", \"</label>\\n          <span\\n            class=\\\"\", \"\", \"\\\"\\n            onClick=\", \"\\n            onSelectstart=\", \"\\n          >\\n            \", \"\\n          </span>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"\", \"\\\"\\n            onClick=\", \"\\n          >\\n            \", \"\\n          </button>\\n          <input\\n            id=\\\"toastuiImageFileInput\\\"\\n            type=\\\"file\\\"\\n            accept=\\\"image/*\\\"\\n            onChange=\", \"\\n            ref=\", \"\\n          />\\n        </div>\\n        <label for=\\\"toastuiAltTextInput\\\">\", \"</label>\\n        <input\\n          id=\\\"toastuiAltTextInput\\\"\\n          type=\\\"text\\\"\\n          ref=\", \"\\n        />\\n        <div class=\\\"\", \"\\\">\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n        </div>\\n      </div>\\n    \"], [\"\\n      <div aria-label=\\\"\", \"\\\">\\n        <\", \" tabs=\", \" activeTab=\", \" onClick=\", \" />\\n        <div style=\\\"display:\", \"\\\">\\n          <label for=\\\"toastuiImageUrlInput\\\">\", \"</label>\\n          <input\\n            id=\\\"toastuiImageUrlInput\\\"\\n            type=\\\"text\\\"\\n            ref=\", \"\\n          />\\n        </div>\\n        <div style=\\\"display:\", \";position: relative;\\\">\\n          <label for=\\\"toastuiImageFileInput\\\">\", \"</label>\\n          <span\\n            class=\\\"\", \"\", \"\\\"\\n            onClick=\", \"\\n            onSelectstart=\", \"\\n          >\\n            \", \"\\n          </span>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"\", \"\\\"\\n            onClick=\", \"\\n          >\\n            \", \"\\n          </button>\\n          <input\\n            id=\\\"toastuiImageFileInput\\\"\\n            type=\\\"file\\\"\\n            accept=\\\"image/*\\\"\\n            onChange=\", \"\\n            ref=\", \"\\n          />\\n        </div>\\n        <label for=\\\"toastuiAltTextInput\\\">\", \"</label>\\n        <input\\n          id=\\\"toastuiAltTextInput\\\"\\n          type=\\\"text\\\"\\n          ref=\", \"\\n        />\\n        <div class=\\\"\", \"\\\">\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n        </div>\\n      </div>\\n    \"])), i18n.get('Insert image'), Tabs, this.tabs, activeTab, this.toggleTab, activeTab === 'url' ? 'block' : 'none', i18n.get('Image URL'), function (el) { return (_this.refs.url = el); }, activeTab === 'file' ? 'block' : 'none', i18n.get('Select image file'), cls('file-name'), file ? ' has-file' : fileNameElClassName, this.showFileSelectBox, this.preventSelectStart, file ? file.name : i18n.get('No file'), cls('file-select-button'), this.showFileSelectBox, i18n.get('Choose a file'), this.changeFile, function (el) { return (_this.refs.file = el); }, i18n.get('Description'), function (el) { return (_this.refs.altText = el); }, cls('button-container'), cls('close-button'), this.props.hidePopup, i18n.get('Cancel'), cls('ok-button'), this.execCommand, i18n.get('OK'));\n    };\n    return ImagePopupBody;\n}(Component));\nvar templateObject_1$e;\n\nvar LinkPopupBody = /** @class */ (function (_super) {\n    __extends$1(LinkPopupBody, _super);\n    function LinkPopupBody() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.execCommand = function () {\n            var linkUrlEl = _this.refs.url;\n            var linkTextEl = _this.refs.text;\n            removeClass_1(linkUrlEl, 'wrong');\n            removeClass_1(linkTextEl, 'wrong');\n            if (linkUrlEl.value.length < 1) {\n                addClass_1(linkUrlEl, 'wrong');\n                return;\n            }\n            var checkLinkText = isUndefined_1(_this.props.initialValues.linkUrl);\n            if (checkLinkText && linkTextEl.value.length < 1) {\n                addClass_1(linkTextEl, 'wrong');\n                return;\n            }\n            _this.props.execCommand('addLink', {\n                linkUrl: linkUrlEl.value,\n                linkText: linkTextEl.value,\n            });\n        };\n        return _this;\n    }\n    LinkPopupBody.prototype.initialize = function () {\n        var _a = this.props.initialValues, linkUrl = _a.linkUrl, linkText = _a.linkText;\n        var linkUrlEl = this.refs.url;\n        var linkTextEl = this.refs.text;\n        removeClass_1(linkUrlEl, 'wrong');\n        removeClass_1(linkTextEl, 'wrong', 'disabled');\n        linkTextEl.removeAttribute('disabled');\n        if (linkUrl) {\n            addClass_1(linkTextEl, 'disabled');\n            linkTextEl.setAttribute('disabled', 'disabled');\n        }\n        linkUrlEl.value = linkUrl || '';\n        linkTextEl.value = linkText || '';\n    };\n    LinkPopupBody.prototype.mounted = function () {\n        this.initialize();\n    };\n    LinkPopupBody.prototype.updated = function (prevProps) {\n        if (!prevProps.show && this.props.show) {\n            this.initialize();\n        }\n    };\n    LinkPopupBody.prototype.render = function () {\n        var _this = this;\n        return html(templateObject_1$d || (templateObject_1$d = __makeTemplateObject([\"\\n      <div aria-label=\\\"\", \"\\\">\\n        <label for=\\\"toastuiLinkUrlInput\\\">\", \"</label>\\n        <input\\n          id=\\\"toastuiLinkUrlInput\\\"\\n          type=\\\"text\\\"\\n          ref=\", \"\\n        />\\n        <label for=\\\"toastuiLinkTextInput\\\">\", \"</label>\\n        <input\\n          id=\\\"toastuiLinkTextInput\\\"\\n          type=\\\"text\\\"\\n          ref=\", \"\\n        />\\n        <div class=\\\"\", \"\\\">\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n        </div>\\n      </div>\\n    \"], [\"\\n      <div aria-label=\\\"\", \"\\\">\\n        <label for=\\\"toastuiLinkUrlInput\\\">\", \"</label>\\n        <input\\n          id=\\\"toastuiLinkUrlInput\\\"\\n          type=\\\"text\\\"\\n          ref=\", \"\\n        />\\n        <label for=\\\"toastuiLinkTextInput\\\">\", \"</label>\\n        <input\\n          id=\\\"toastuiLinkTextInput\\\"\\n          type=\\\"text\\\"\\n          ref=\", \"\\n        />\\n        <div class=\\\"\", \"\\\">\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"\", \"\\\" onClick=\", \">\\n            \", \"\\n          </button>\\n        </div>\\n      </div>\\n    \"])), i18n.get('Insert link'), i18n.get('URL'), function (el) { return (_this.refs.url = el); }, i18n.get('Link text'), function (el) { return (_this.refs.text = el); }, cls('button-container'), cls('close-button'), this.props.hidePopup, i18n.get('Cancel'), cls('ok-button'), this.execCommand, i18n.get('OK'));\n    };\n    return LinkPopupBody;\n}(Component));\nvar templateObject_1$d;\n\nvar CELL_WIDTH = 20;\nvar CELL_HEIGHT = 20;\nvar MIN_ROW_INDEX = 5;\nvar MAX_ROW_INDEX = 14;\nvar MIN_COL_INDEX = 5;\nvar MAX_COL_INDEX = 9;\nvar MIN_ROW_SELECTION_INDEX = 1;\nvar MIN_COL_SELECTION_INDEX = 1;\nvar BORDER_WIDTH = 1;\nvar TablePopupBody = /** @class */ (function (_super) {\n    __extends$1(TablePopupBody, _super);\n    function TablePopupBody(props) {\n        var _this = _super.call(this, props) || this;\n        _this.extendSelectionRange = function (_a) {\n            var pageX = _a.pageX, pageY = _a.pageY;\n            var x = pageX - _this.offsetRect.left;\n            var y = pageY - _this.offsetRect.top;\n            var range = _this.getSelectionRangeByOffset(x, y);\n            _this.setState(__assign$1({}, range));\n        };\n        _this.execCommand = function () {\n            _this.props.execCommand('addTable', {\n                rowCount: _this.state.rowIdx + 1,\n                columnCount: _this.state.colIdx + 1,\n            });\n        };\n        _this.state = {\n            rowIdx: -1,\n            colIdx: -1,\n        };\n        return _this;\n    }\n    TablePopupBody.prototype.getDescription = function () {\n        return this.state.colIdx === -1 ? '' : this.state.colIdx + 1 + \" x \" + (this.state.rowIdx + 1);\n    };\n    TablePopupBody.prototype.getBoundByRange = function (colIdx, rowIdx) {\n        return {\n            width: (colIdx + 1) * CELL_WIDTH,\n            height: (rowIdx + 1) * CELL_HEIGHT,\n        };\n    };\n    TablePopupBody.prototype.getRangeByOffset = function (x, y) {\n        return {\n            colIdx: Math.floor(x / CELL_WIDTH),\n            rowIdx: Math.floor(y / CELL_HEIGHT),\n        };\n    };\n    TablePopupBody.prototype.getTableRange = function () {\n        var _a = this.state, orgColIdx = _a.colIdx, orgRowIdx = _a.rowIdx;\n        var colIdx = Math.max(orgColIdx, MIN_COL_INDEX);\n        var rowIdx = Math.max(orgRowIdx, MIN_ROW_INDEX);\n        if (orgColIdx >= MIN_COL_INDEX && colIdx < MAX_COL_INDEX) {\n            colIdx += 1;\n        }\n        if (orgRowIdx >= MIN_ROW_INDEX && rowIdx < MAX_ROW_INDEX) {\n            rowIdx += 1;\n        }\n        return { colIdx: colIdx + 1, rowIdx: rowIdx + 1 };\n    };\n    TablePopupBody.prototype.getSelectionAreaBound = function () {\n        var _a = this.getBoundByRange(this.state.colIdx, this.state.rowIdx), width = _a.width, height = _a.height;\n        if (!width && !height) {\n            return { display: 'none' };\n        }\n        return { width: width - BORDER_WIDTH, height: height - BORDER_WIDTH, display: 'block' };\n    };\n    TablePopupBody.prototype.getSelectionRangeByOffset = function (x, y) {\n        var range = this.getRangeByOffset(x, y);\n        range.rowIdx = Math.min(Math.max(range.rowIdx, MIN_ROW_SELECTION_INDEX), MAX_ROW_INDEX);\n        range.colIdx = Math.min(Math.max(range.colIdx, MIN_COL_SELECTION_INDEX), MAX_COL_INDEX);\n        return range;\n    };\n    TablePopupBody.prototype.updated = function () {\n        if (!this.props.show) {\n            this.setState({ colIdx: -1, rowIdx: -1 });\n        }\n        else if (this.state.colIdx === -1 && this.state.rowIdx === -1) {\n            var _a = this.refs.tableEl.getBoundingClientRect(), left = _a.left, top_1 = _a.top;\n            this.offsetRect = {\n                left: window.pageXOffset + left,\n                top: window.pageYOffset + top_1,\n            };\n        }\n    };\n    TablePopupBody.prototype.createTableArea = function (tableRange) {\n        var colIdx = tableRange.colIdx, rowIdx = tableRange.rowIdx;\n        var rows = [];\n        for (var i = 0; i < rowIdx; i += 1) {\n            var cells = [];\n            for (var j = 0; j < colIdx; j += 1) {\n                var cellClassNames = \"\" + cls('table-cell') + (i > 0 ? '' : ' header');\n                cells.push(html(templateObject_1$c || (templateObject_1$c = __makeTemplateObject([\"<div class=\\\"\", \"\\\"></div>\"], [\"<div class=\\\"\", \"\\\"></div>\"])), cellClassNames));\n            }\n            rows.push(html(templateObject_2$6 || (templateObject_2$6 = __makeTemplateObject([\"<div class=\\\"\", \"\\\">\", \"</div>\"], [\"<div class=\\\"\", \"\\\">\", \"</div>\"])), cls('table-row'), cells));\n        }\n        return html(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject([\"<div class=\\\"\", \"\\\">\", \"</div>\"], [\"<div class=\\\"\", \"\\\">\", \"</div>\"])), cls('table'), rows);\n    };\n    TablePopupBody.prototype.render = function () {\n        var _this = this;\n        var tableRange = this.getTableRange();\n        var selectionAreaBound = this.getSelectionAreaBound();\n        return html(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject([\"\\n      <div aria-label=\\\"\", \"\\\">\\n        <div\\n          class=\\\"\", \"\\\"\\n          ref=\", \"\\n          onMousemove=\", \"\\n          onClick=\", \"\\n        >\\n          \", \"\\n          <div class=\\\"\", \"\\\" style=\", \"></div>\\n        </div>\\n        <p class=\\\"\", \"\\\">\", \"</p>\\n      </div>\\n    \"], [\"\\n      <div aria-label=\\\"\", \"\\\">\\n        <div\\n          class=\\\"\", \"\\\"\\n          ref=\", \"\\n          onMousemove=\", \"\\n          onClick=\", \"\\n        >\\n          \", \"\\n          <div class=\\\"\", \"\\\" style=\", \"></div>\\n        </div>\\n        <p class=\\\"\", \"\\\">\", \"</p>\\n      </div>\\n    \"])), i18n.get('Insert table'), cls('table-selection'), function (el) { return (_this.refs.tableEl = el); }, this.extendSelectionRange, this.execCommand, this.createTableArea(tableRange), cls('table-selection-layer'), selectionAreaBound, cls('table-description'), this.getDescription());\n    };\n    return TablePopupBody;\n}(Component));\nvar templateObject_1$c, templateObject_2$6, templateObject_3$2, templateObject_4$1;\n\nvar CustomPopupBody = /** @class */ (function (_super) {\n    __extends$1(CustomPopupBody, _super);\n    function CustomPopupBody() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CustomPopupBody.prototype.mounted = function () {\n        // append the custom popup body element\n        this.refs.el.appendChild(this.props.body);\n    };\n    CustomPopupBody.prototype.updated = function (prevProps) {\n        // update custom popup element\n        this.refs.el.replaceChild(this.props.body, prevProps.body);\n    };\n    CustomPopupBody.prototype.render = function () {\n        var _this = this;\n        return html(templateObject_1$b || (templateObject_1$b = __makeTemplateObject([\"<div ref=\", \"></div>\"], [\"<div ref=\", \"></div>\"])), function (el) { return (_this.refs.el = el); });\n    };\n    return CustomPopupBody;\n}(Component));\nvar templateObject_1$b;\n\nfunction createToolbarItemInfo(type) {\n    return isString_1(type) ? createDefaultToolbarItemInfo(type) : type;\n}\nfunction createScrollSyncToolbarItem() {\n    var label = document.createElement('label');\n    var checkbox = document.createElement('input');\n    var toggleSwitch = document.createElement('span');\n    label.className = 'scroll-sync active';\n    checkbox.type = 'checkbox';\n    checkbox.checked = true;\n    toggleSwitch.className = 'switch';\n    var onMounted = function (execCommand) {\n        return checkbox.addEventListener('change', function (ev) {\n            var checked = ev.target.checked;\n            if (checked) {\n                addClass_1(label, 'active');\n            }\n            else {\n                removeClass_1(label, 'active');\n            }\n            execCommand('toggleScrollSync', { active: checked });\n        });\n    };\n    label.appendChild(checkbox);\n    label.appendChild(toggleSwitch);\n    return {\n        name: 'scrollSync',\n        el: label,\n        onMounted: onMounted,\n    };\n}\nfunction createDefaultToolbarItemInfo(type) {\n    var info;\n    switch (type) {\n        case 'heading':\n            info = {\n                name: 'heading',\n                className: 'heading',\n                tooltip: i18n.get('Headings'),\n                state: 'heading',\n            };\n            break;\n        case 'bold':\n            info = {\n                name: 'bold',\n                className: 'bold',\n                command: 'bold',\n                tooltip: i18n.get('Bold'),\n                state: 'strong',\n            };\n            break;\n        case 'italic':\n            info = {\n                name: 'italic',\n                className: 'italic',\n                command: 'italic',\n                tooltip: i18n.get('Italic'),\n                state: 'emph',\n            };\n            break;\n        case 'strike':\n            info = {\n                name: 'strike',\n                className: 'strike',\n                command: 'strike',\n                tooltip: i18n.get('Strike'),\n                state: 'strike',\n            };\n            break;\n        case 'hr':\n            info = {\n                name: 'hr',\n                className: 'hrline',\n                command: 'hr',\n                tooltip: i18n.get('Line'),\n                state: 'thematicBreak',\n            };\n            break;\n        case 'quote':\n            info = {\n                name: 'quote',\n                className: 'quote',\n                command: 'blockQuote',\n                tooltip: i18n.get('Blockquote'),\n                state: 'blockQuote',\n            };\n            break;\n        case 'ul':\n            info = {\n                name: 'ul',\n                className: 'bullet-list',\n                command: 'bulletList',\n                tooltip: i18n.get('Unordered list'),\n                state: 'bulletList',\n            };\n            break;\n        case 'ol':\n            info = {\n                name: 'ol',\n                className: 'ordered-list',\n                command: 'orderedList',\n                tooltip: i18n.get('Ordered list'),\n                state: 'orderedList',\n            };\n            break;\n        case 'task':\n            info = {\n                name: 'task',\n                className: 'task-list',\n                command: 'taskList',\n                tooltip: i18n.get('Task'),\n                state: 'taskList',\n            };\n            break;\n        case 'table':\n            info = {\n                name: 'table',\n                className: 'table',\n                tooltip: i18n.get('Insert table'),\n                state: 'table',\n            };\n            break;\n        case 'image':\n            info = {\n                name: 'image',\n                className: 'image',\n                tooltip: i18n.get('Insert image'),\n            };\n            break;\n        case 'link':\n            info = {\n                name: 'link',\n                className: 'link',\n                tooltip: i18n.get('Insert link'),\n            };\n            break;\n        case 'code':\n            info = {\n                name: 'code',\n                className: 'code',\n                command: 'code',\n                tooltip: i18n.get('Code'),\n                state: 'code',\n            };\n            break;\n        case 'codeblock':\n            info = {\n                name: 'codeblock',\n                className: 'codeblock',\n                command: 'codeBlock',\n                tooltip: i18n.get('Insert CodeBlock'),\n                state: 'codeBlock',\n            };\n            break;\n        case 'indent':\n            info = {\n                name: 'indent',\n                className: 'indent',\n                command: 'indent',\n                tooltip: i18n.get('Indent'),\n                state: 'indent',\n            };\n            break;\n        case 'outdent':\n            info = {\n                name: 'outdent',\n                className: 'outdent',\n                command: 'outdent',\n                tooltip: i18n.get('Outdent'),\n                state: 'outdent',\n            };\n            break;\n        case 'scrollSync':\n            info = createScrollSyncToolbarItem();\n            break;\n        case 'more':\n            info = {\n                name: 'more',\n                className: 'more',\n                tooltip: i18n.get('More'),\n            };\n            break;\n        // do nothing\n    }\n    if (info.name !== 'scrollSync') {\n        info.className += \" \" + cls('toolbar-icons');\n    }\n    return info;\n}\nfunction createPopupInfo(type, payload) {\n    var el = payload.el, pos = payload.pos, popup = payload.popup, initialValues = payload.initialValues;\n    switch (type) {\n        case 'heading':\n            return {\n                render: function (props) { return html(templateObject_1$a || (templateObject_1$a = __makeTemplateObject([\"<\", \" ...\", \" />\"], [\"<\", \" ...\", \" />\"])), HeadingPopupBody, props); },\n                className: cls('popup-add-heading'),\n                fromEl: el,\n                pos: pos,\n            };\n        case 'link':\n            return {\n                render: function (props) { return html(templateObject_2$5 || (templateObject_2$5 = __makeTemplateObject([\"<\", \" ...\", \" />\"], [\"<\", \" ...\", \" />\"])), LinkPopupBody, props); },\n                className: cls('popup-add-link'),\n                fromEl: el,\n                pos: pos,\n                initialValues: initialValues,\n            };\n        case 'image':\n            return {\n                render: function (props) { return html(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject([\"<\", \" ...\", \" />\"], [\"<\", \" ...\", \" />\"])), ImagePopupBody, props); },\n                className: cls('popup-add-image'),\n                fromEl: el,\n                pos: pos,\n            };\n        case 'table':\n            return {\n                render: function (props) { return html(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"<\", \" ...\", \" />\"], [\"<\", \" ...\", \" />\"])), TablePopupBody, props); },\n                className: cls('popup-add-table'),\n                fromEl: el,\n                pos: pos,\n            };\n        case 'customPopupBody':\n            if (!popup) {\n                return null;\n            }\n            return __assign$1({ render: function (props) { return html(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"<\", \" ...\", \" body=\", \" />\"], [\"<\", \" ...\", \" body=\", \" />\"])), CustomPopupBody, props, popup.body); }, fromEl: el, pos: pos }, popup);\n        default:\n            return null;\n    }\n}\nfunction setGroupState(group) {\n    group.hidden = group.length === group.filter(function (info) { return info.hidden; }).length;\n}\nfunction groupToolbarItems(toolbarItems, hiddenScrollSync) {\n    var toggleScrollSyncState = function (item) {\n        item.hidden = item.name === 'scrollSync' && hiddenScrollSync;\n        return item;\n    };\n    return toolbarItems.reduce(function (acc, item) {\n        acc.push(item.map(function (type) { return toggleScrollSyncState(createToolbarItemInfo(type)); }));\n        var group = acc[(acc.length || 1) - 1];\n        if (group) {\n            setGroupState(group);\n        }\n        return acc;\n    }, []);\n}\nfunction toggleScrollSync(toolbarItems, hiddenScrollSync) {\n    toolbarItems.forEach(function (group) {\n        group.forEach(function (item) { return (item.hidden = item.name === 'scrollSync' && hiddenScrollSync); });\n        setGroupState(group);\n    });\n}\nvar templateObject_1$a, templateObject_2$5, templateObject_3$1, templateObject_4, templateObject_5;\n\nvar MARGIN_FROM_RIGHT_SIDE = 20;\nvar Popup = /** @class */ (function (_super) {\n    __extends$1(Popup, _super);\n    function Popup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleMousedown = function (ev) {\n            if (!closest(ev.target, \".\" + cls('popup')) &&\n                !closest(ev.target, _this.props.info.fromEl)) {\n                _this.props.hidePopup();\n            }\n        };\n        return _this;\n    }\n    Popup.prototype.mounted = function () {\n        document.addEventListener('mousedown', this.handleMousedown);\n        this.props.eventEmitter.listen('closePopup', this.props.hidePopup);\n    };\n    Popup.prototype.beforeDestroy = function () {\n        document.removeEventListener('mousedown', this.handleMousedown);\n    };\n    Popup.prototype.updated = function (prevProps) {\n        var _a = this.props, show = _a.show, info = _a.info;\n        if (show && info.pos && prevProps.show !== show) {\n            var popupPos = __assign$1({}, info.pos);\n            var offsetWidth = this.refs.el.offsetWidth;\n            var toolbarEl = closest(this.refs.el, \".\" + cls('toolbar'));\n            var toolbarOffsetWidth = toolbarEl.offsetWidth;\n            if (popupPos.left + offsetWidth >= toolbarOffsetWidth) {\n                popupPos.left = toolbarOffsetWidth - offsetWidth - MARGIN_FROM_RIGHT_SIDE;\n            }\n            if (!shallowEqual(this.state.popupPos, popupPos)) {\n                this.setState({ popupPos: popupPos });\n            }\n        }\n    };\n    Popup.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, info = _a.info, show = _a.show, hidePopup = _a.hidePopup, eventEmitter = _a.eventEmitter, execCommand = _a.execCommand;\n        var _b = info || {}, _c = _b.className, className = _c === void 0 ? '' : _c, style = _b.style, render = _b.render, _d = _b.initialValues, initialValues = _d === void 0 ? {} : _d;\n        var popupStyle = __assign$1(__assign$1({ display: show ? 'block' : 'none' }, style), this.state.popupPos);\n        return html(templateObject_1$9 || (templateObject_1$9 = __makeTemplateObject([\"\\n      <div\\n        class=\\\"\", \" \", \"\\\"\\n        style=\", \"\\n        ref=\", \"\\n        aria-role=\\\"dialog\\\"\\n      >\\n        <div class=\\\"\", \"\\\">\\n          \", \"\\n        </div>\\n      </div>\\n    \"], [\"\\n      <div\\n        class=\\\"\", \" \", \"\\\"\\n        style=\", \"\\n        ref=\", \"\\n        aria-role=\\\"dialog\\\"\\n      >\\n        <div class=\\\"\", \"\\\">\\n          \", \"\\n        </div>\\n      </div>\\n    \"])), cls('popup'), className, popupStyle, function (el) { return (_this.refs.el = el); }, cls('popup-body'), render && render({ eventEmitter: eventEmitter, show: show, hidePopup: hidePopup, execCommand: execCommand, initialValues: initialValues }));\n    };\n    return Popup;\n}(Component));\nvar templateObject_1$9;\n\nvar TOOLTIP_INDENT = 6;\nfunction connectHOC(WrappedComponent) {\n    return /** @class */ (function (_super) {\n        __extends$1(ButtonHOC, _super);\n        function ButtonHOC(props) {\n            var _this = _super.call(this, props) || this;\n            _this.showTooltip = function (el) {\n                var tooltip = _this.props.item.tooltip;\n                if (!_this.props.disabled && tooltip) {\n                    var bound = _this.getBound(el);\n                    var left = bound.left + TOOLTIP_INDENT + \"px\";\n                    var top_1 = bound.top + TOOLTIP_INDENT + \"px\";\n                    css_1(_this.props.tooltipRef.current, { display: 'block', left: left, top: top_1 });\n                    _this.props.tooltipRef.current.querySelector('.text').textContent = tooltip;\n                }\n            };\n            _this.hideTooltip = function () {\n                css_1(_this.props.tooltipRef.current, 'display', 'none');\n            };\n            _this.state = { active: false, disabled: props.disabled };\n            _this.addEvent();\n            return _this;\n        }\n        ButtonHOC.prototype.addEvent = function () {\n            var _this = this;\n            var _a = this.props, item = _a.item, eventEmitter = _a.eventEmitter;\n            if (item.state) {\n                eventEmitter.listen('changeToolbarState', function (_a) {\n                    var _b;\n                    var toolbarState = _a.toolbarState;\n                    var _c = (_b = toolbarState[item.state]) !== null && _b !== void 0 ? _b : {}, active = _c.active, disabled = _c.disabled;\n                    _this.setState({ active: !!active, disabled: disabled !== null && disabled !== void 0 ? disabled : _this.props.disabled });\n                });\n            }\n        };\n        ButtonHOC.prototype.getBound = function (el) {\n            var _a = getTotalOffset(el, closest(el, \".\" + cls('toolbar'))), offsetLeft = _a.offsetLeft, offsetTop = _a.offsetTop;\n            return { left: offsetLeft, top: el.offsetHeight + offsetTop };\n        };\n        ButtonHOC.prototype.render = function () {\n            return html(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject([\"\\n        <\", \"\\n          ...\", \"\\n          active=\", \"\\n          showTooltip=\", \"\\n          hideTooltip=\", \"\\n          getBound=\", \"\\n          disabled=\", \"\\n        />\\n      \"], [\"\\n        <\", \"\\n          ...\", \"\\n          active=\", \"\\n          showTooltip=\", \"\\n          hideTooltip=\", \"\\n          getBound=\", \"\\n          disabled=\", \"\\n        />\\n      \"])), WrappedComponent, this.props, this.state.active, this.showTooltip, this.hideTooltip, this.getBound, this.state.disabled || this.props.disabled);\n        };\n        return ButtonHOC;\n    }(Component));\n}\nvar templateObject_1$8;\n\nvar DEFAULT_WIDTH = 80;\nvar ToolbarButtonComp = /** @class */ (function (_super) {\n    __extends$1(ToolbarButtonComp, _super);\n    function ToolbarButtonComp() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.showTooltip = function () {\n            _this.props.showTooltip(_this.refs.el);\n        };\n        _this.execCommand = function () {\n            var _a = _this.props, item = _a.item, execCommand = _a.execCommand, setPopupInfo = _a.setPopupInfo, getBound = _a.getBound, eventEmitter = _a.eventEmitter;\n            var command = item.command, name = item.name, popup = item.popup;\n            if (command) {\n                execCommand(command);\n            }\n            else {\n                var popupName = popup ? 'customPopupBody' : name;\n                var initialValues = eventEmitter.emit('query', 'getPopupInitialValues', { popupName: popupName })[0];\n                var info = createPopupInfo(popupName, {\n                    el: _this.refs.el,\n                    pos: getBound(_this.refs.el),\n                    popup: popup,\n                    initialValues: initialValues,\n                });\n                if (info) {\n                    setPopupInfo(info);\n                }\n            }\n        };\n        return _this;\n    }\n    ToolbarButtonComp.prototype.mounted = function () {\n        this.setItemWidth();\n    };\n    ToolbarButtonComp.prototype.updated = function (prevProps) {\n        if (prevProps.item.name !== this.props.item.name) {\n            this.setItemWidth();\n        }\n    };\n    ToolbarButtonComp.prototype.setItemWidth = function () {\n        var _a = this.props, setItemWidth = _a.setItemWidth, item = _a.item;\n        // set width only if it is not a dropdown toolbar\n        if (setItemWidth) {\n            setItemWidth(item.name, getOuterWidth(this.refs.el) + (item.hidden ? DEFAULT_WIDTH : 0));\n        }\n    };\n    ToolbarButtonComp.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, hideTooltip = _a.hideTooltip, disabled = _a.disabled, item = _a.item, active = _a.active;\n        var style = __assign$1({ display: item.hidden ? 'none' : null }, item.style);\n        var classNames = \"\" + (item.className || '') + (active ? ' active' : '');\n        return html(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject([\"\\n      <button\\n        ref=\", \"\\n        type=\\\"button\\\"\\n        style=\", \"\\n        class=\", \"\\n        onClick=\", \"\\n        onMouseover=\", \"\\n        onMouseout=\", \"\\n        disabled=\", \"\\n        aria-label=\", \"\\n      >\\n        \", \"\\n      </button>\\n    \"], [\"\\n      <button\\n        ref=\", \"\\n        type=\\\"button\\\"\\n        style=\", \"\\n        class=\", \"\\n        onClick=\", \"\\n        onMouseover=\", \"\\n        onMouseout=\", \"\\n        disabled=\", \"\\n        aria-label=\", \"\\n      >\\n        \", \"\\n      </button>\\n    \"])), function (el) { return (_this.refs.el = el); }, style, classNames, this.execCommand, this.showTooltip, hideTooltip, !!disabled, item.text || item.tooltip || '', item.text || '');\n    };\n    return ToolbarButtonComp;\n}(Component));\nvar ToolbarButton = connectHOC(ToolbarButtonComp);\nvar templateObject_1$7;\n\nvar CustomToolbarItemComp = /** @class */ (function (_super) {\n    __extends$1(CustomToolbarItemComp, _super);\n    function CustomToolbarItemComp() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.showTooltip = function () {\n            _this.props.showTooltip(_this.refs.el);\n        };\n        _this.showPopup = function () {\n            var info = createPopupInfo('customPopupBody', {\n                el: _this.refs.el,\n                pos: _this.props.getBound(_this.refs.el),\n                popup: _this.props.item.popup,\n            });\n            if (info) {\n                _this.props.setPopupInfo(info);\n            }\n        };\n        return _this;\n    }\n    CustomToolbarItemComp.prototype.mounted = function () {\n        var _a = this.props, setItemWidth = _a.setItemWidth, item = _a.item;\n        // append the custom html element\n        this.refs.el.appendChild(item.el);\n        // set width only if it is not a dropdown toolbar\n        if (setItemWidth) {\n            setItemWidth(item.name, getOuterWidth(this.refs.el));\n        }\n        if (item.onMounted) {\n            item.onMounted(this.props.execCommand);\n        }\n    };\n    CustomToolbarItemComp.prototype.updated = function (prevProps) {\n        var _a;\n        var _b = this.props, item = _b.item, active = _b.active, disabled = _b.disabled;\n        if (prevProps.active !== active || prevProps.disabled !== disabled) {\n            (_a = item.onUpdated) === null || _a === void 0 ? void 0 : _a.call(item, { active: active, disabled: disabled });\n        }\n    };\n    CustomToolbarItemComp.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, disabled = _a.disabled, item = _a.item;\n        var style = { display: item.hidden ? 'none' : 'inline-block' };\n        var getListener = function (listener) { return (disabled ? null : listener); };\n        return html(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject([\"\\n      <div\\n        ref=\", \"\\n        style=\", \"\\n        class=\", \"\\n        onClick=\", \"\\n        onMouseover=\", \"\\n        onMouseout=\", \"\\n      ></div>\\n    \"], [\"\\n      <div\\n        ref=\", \"\\n        style=\", \"\\n        class=\", \"\\n        onClick=\", \"\\n        onMouseover=\", \"\\n        onMouseout=\", \"\\n      ></div>\\n    \"])), function (el) { return (_this.refs.el = el); }, style, cls('toolbar-item-wrapper'), getListener(this.showPopup), getListener(this.showTooltip), getListener(this.props.hideTooltip));\n    };\n    return CustomToolbarItemComp;\n}(Component));\nvar CustomToolbarItem = connectHOC(CustomToolbarItemComp);\nvar templateObject_1$6;\n\nvar ToolbarGroup = /** @class */ (function (_super) {\n    __extends$1(ToolbarGroup, _super);\n    function ToolbarGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ToolbarGroup.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, group = _a.group, hiddenDivider = _a.hiddenDivider;\n        var groupStyle = group.hidden ? { display: 'none' } : null;\n        var dividerStyle = hiddenDivider ? { display: 'none' } : null;\n        return html(templateObject_2$4 || (templateObject_2$4 = __makeTemplateObject([\"\\n      <div class=\\\"\", \"\\\" style=\", \">\\n        \", \"\\n        <div class=\\\"\", \"\\\" style=\", \"></div>\\n      </div>\\n    \"], [\"\\n      <div class=\\\"\", \"\\\" style=\", \">\\n        \",\n            \"\\n        <div class=\\\"\", \"\\\" style=\", \"></div>\\n      </div>\\n    \"])), cls('toolbar-group'), groupStyle, group.map(function (item) {\n            var Comp = item.el ? CustomToolbarItem : ToolbarButton;\n            return html(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject([\"<\", \" key=\", \" ...\", \" item=\", \" />\"], [\"<\", \" key=\", \" ...\", \" item=\", \" />\"])), Comp, item.name, _this.props, item);\n        }), cls('toolbar-divider'), dividerStyle);\n    };\n    return ToolbarGroup;\n}(Component));\nvar templateObject_1$5, templateObject_2$4;\n\nvar POPUP_INDENT = 4;\nvar DropdownToolbarButtonComp = /** @class */ (function (_super) {\n    __extends$1(DropdownToolbarButtonComp, _super);\n    function DropdownToolbarButtonComp(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleClickDocument = function (_a) {\n            var target = _a.target;\n            if (!closest(target, \".\" + cls('dropdown-toolbar')) &&\n                !closest(target, '.more')) {\n                _this.setState({ showDropdown: false, dropdownPos: null });\n            }\n        };\n        _this.showTooltip = function () {\n            _this.props.showTooltip(_this.refs.el);\n        };\n        _this.state = { showDropdown: false, dropdownPos: null };\n        return _this;\n    }\n    DropdownToolbarButtonComp.prototype.getBound = function () {\n        var rect = this.props.getBound(this.refs.el);\n        rect.top += POPUP_INDENT;\n        return __assign$1(__assign$1({}, rect), { left: null, right: 10 });\n    };\n    DropdownToolbarButtonComp.prototype.mounted = function () {\n        document.addEventListener('click', this.handleClickDocument);\n    };\n    DropdownToolbarButtonComp.prototype.updated = function () {\n        if (this.state.showDropdown && !this.state.dropdownPos) {\n            this.setState({ dropdownPos: this.getBound() });\n        }\n    };\n    DropdownToolbarButtonComp.prototype.beforeDestroy = function () {\n        document.removeEventListener('click', this.handleClickDocument);\n    };\n    DropdownToolbarButtonComp.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, showDropdown = _a.showDropdown, dropdownPos = _a.dropdownPos;\n        var _b = this.props, disabled = _b.disabled, item = _b.item, items = _b.items, hideTooltip = _b.hideTooltip;\n        var visibleItems = items.filter(function (dropdownItem) { return !dropdownItem.hidden; });\n        var groupStyle = visibleItems.length ? null : { display: 'none' };\n        var dropdownStyle = showDropdown ? null : { display: 'none' };\n        return html(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject([\"\\n      <div class=\\\"\", \"\\\" style=\", \">\\n        <button\\n          ref=\", \"\\n          type=\\\"button\\\"\\n          class=\", \"\\n          onClick=\", \"\\n          onMouseover=\", \"\\n          onMouseout=\", \"\\n          disabled=\", \"\\n        ></button>\\n        <div\\n          class=\\\"\", \"\\\"\\n          style=\", \"\\n          ref=\", \"\\n        >\\n          \", \"\\n        </div>\\n      </div>\\n    \"], [\"\\n      <div class=\\\"\", \"\\\" style=\", \">\\n        <button\\n          ref=\", \"\\n          type=\\\"button\\\"\\n          class=\", \"\\n          onClick=\", \"\\n          onMouseover=\", \"\\n          onMouseout=\", \"\\n          disabled=\", \"\\n        ></button>\\n        <div\\n          class=\\\"\", \"\\\"\\n          style=\", \"\\n          ref=\", \"\\n        >\\n          \",\n            \"\\n        </div>\\n      </div>\\n    \"])), cls('toolbar-group'), groupStyle, function (el) { return (_this.refs.el = el); }, item.className, function () { return _this.setState({ showDropdown: true }); }, this.showTooltip, hideTooltip, disabled, cls('dropdown-toolbar'), __assign$1(__assign$1({}, dropdownStyle), dropdownPos), function (el) { return (_this.refs.dropdownEl = el); }, visibleItems.length\n            ? visibleItems.map(function (group, index) {\n                var _a;\n                return html(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject([\"\\n                  <\", \"\\n                    group=\", \"\\n                    hiddenDivider=\", \"\\n                    ...\", \"\\n                  />\\n                \"], [\"\\n                  <\", \"\\n                    group=\", \"\\n                    hiddenDivider=\",\n                    \"\\n                    ...\", \"\\n                  />\\n                \"])), ToolbarGroup, group, index === visibleItems.length - 1 ||\n                    ((_a = visibleItems[index + 1]) === null || _a === void 0 ? void 0 : _a.hidden), _this.props);\n            })\n            : null);\n    };\n    return DropdownToolbarButtonComp;\n}(Component));\nvar DropdownToolbarButton = connectHOC(DropdownToolbarButtonComp);\nvar templateObject_1$4, templateObject_2$3;\n\nvar INLINE_PADDING = 50;\nvar Toolbar = /** @class */ (function (_super) {\n    __extends$1(Toolbar, _super);\n    function Toolbar(props) {\n        var _this = _super.call(this, props) || this;\n        _this.toggleTab = function (_, activeTab) {\n            var eventEmitter = _this.props.eventEmitter;\n            if (_this.state.activeTab !== activeTab) {\n                var event_1 = activeTab === 'write' ? 'changePreviewTabWrite' : 'changePreviewTabPreview';\n                eventEmitter.emit(event_1);\n                _this.setState({ activeTab: activeTab });\n            }\n        };\n        _this.setItemWidth = function (name, width) {\n            _this.itemWidthMap[name] = width;\n        };\n        _this.setPopupInfo = function (popupInfo) {\n            _this.setState({ showPopup: true, popupInfo: popupInfo });\n        };\n        _this.openPopup = function (popupName, initialValues) {\n            if (initialValues === void 0) { initialValues = {}; }\n            var el = _this.refs.el.querySelector(\".\" + cls('toolbar-group') + \" .\" + popupName);\n            if (el) {\n                var _a = getTotalOffset(el, closest(el, \".\" + cls('toolbar'))), offsetLeft = _a.offsetLeft, offsetTop = _a.offsetTop;\n                var info = createPopupInfo(popupName, {\n                    el: el,\n                    pos: { left: offsetLeft, top: el.offsetHeight + offsetTop },\n                    initialValues: initialValues,\n                });\n                if (info) {\n                    _this.setPopupInfo(info);\n                }\n            }\n        };\n        _this.hidePopup = function () {\n            if (_this.state.showPopup) {\n                _this.setState({ showPopup: false });\n            }\n        };\n        _this.execCommand = function (command, payload) {\n            var eventEmitter = _this.props.eventEmitter;\n            eventEmitter.emit('command', command, payload);\n            _this.hidePopup();\n        };\n        _this.tabs = [\n            { name: 'write', text: 'Write' },\n            { name: 'preview', text: 'Preview' },\n        ];\n        _this.itemWidthMap = {};\n        _this.initialItems = groupToolbarItems(props.toolbarItems || [], _this.hiddenScrollSync());\n        _this.state = {\n            items: _this.initialItems,\n            dropdownItems: [],\n            showPopup: false,\n            popupInfo: {},\n            activeTab: 'write',\n        };\n        _this.tooltipRef = { current: null };\n        _this.resizeObserver = new index(function () { return _this.handleResize(); });\n        _this.addEvent();\n        return _this;\n    }\n    Toolbar.prototype.insertToolbarItem = function (indexList, item) {\n        var groupIndex = indexList.groupIndex, itemIndex = indexList.itemIndex;\n        var group = this.initialItems[groupIndex];\n        item = createToolbarItemInfo(item);\n        if (group) {\n            group.splice(itemIndex, 0, item);\n        }\n        else {\n            this.initialItems.push([item]);\n        }\n        this.setState(this.classifyToolbarItems());\n    };\n    Toolbar.prototype.removeToolbarItem = function (name) {\n        var _this = this;\n        forEachArray_1(this.initialItems, function (group) {\n            var found = false;\n            forEachArray_1(group, function (item, index) {\n                if (item.name === name) {\n                    found = true;\n                    group.splice(index, 1);\n                    _this.setState(_this.classifyToolbarItems());\n                    return false;\n                }\n                return true;\n            });\n            return !found;\n        });\n    };\n    Toolbar.prototype.addEvent = function () {\n        var _this = this;\n        var eventEmitter = this.props.eventEmitter;\n        this.handleResize = throttle_1(function () {\n            // reset toolbar items to re-layout toolbar items with each clientWidth\n            _this.setState({ items: _this.initialItems, dropdownItems: [] });\n            _this.setState(_this.classifyToolbarItems());\n        }, 200);\n        eventEmitter.listen('openPopup', this.openPopup);\n    };\n    Toolbar.prototype.appendTooltipToRoot = function () {\n        var tooltip = \"<div class=\\\"\" + cls('tooltip') + \"\\\" style=\\\"display:none\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <span class=\\\"text\\\"></span>\\n      </div>\";\n        this.tooltipRef.current = createElementWith(tooltip, this.refs.el);\n    };\n    Toolbar.prototype.hiddenScrollSync = function () {\n        return this.props.editorType === 'wysiwyg' || this.props.previewStyle === 'tab';\n    };\n    Toolbar.prototype.movePrevItemToDropdownToolbar = function (itemIndex, items, group, dropdownGroup) {\n        var moveItem = function (targetGroup) {\n            var item = targetGroup.pop();\n            if (item) {\n                dropdownGroup.push(item);\n            }\n        };\n        if (itemIndex > 1) {\n            moveItem(group);\n        }\n        else {\n            var prevGroup = last$1(items);\n            if (prevGroup) {\n                moveItem(prevGroup);\n            }\n        }\n    };\n    Toolbar.prototype.classifyToolbarItems = function () {\n        var _this = this;\n        var totalWidth = 0;\n        var clientWidth = this.refs.el.clientWidth;\n        var divider = this.refs.el.querySelector(\".\" + cls('toolbar-divider'));\n        var dividerWidth = divider ? getOuterWidth(divider) : 0;\n        var items = [];\n        var dropdownItems = [];\n        var moved = false;\n        this.initialItems.forEach(function (initialGroup, groupIndex) {\n            var group = [];\n            var dropdownGroup = [];\n            initialGroup.forEach(function (item, itemIndex) {\n                if (!item.hidden) {\n                    totalWidth += _this.itemWidthMap[item.name];\n                    if (totalWidth > clientWidth - INLINE_PADDING) {\n                        // should move the prev item to dropdown toolbar for placing the more button\n                        if (!moved) {\n                            _this.movePrevItemToDropdownToolbar(itemIndex, items, group, dropdownGroup);\n                            moved = true;\n                        }\n                        dropdownGroup.push(item);\n                    }\n                    else {\n                        group.push(item);\n                    }\n                }\n            });\n            if (group.length) {\n                setGroupState(group);\n                items.push(group);\n            }\n            if (dropdownGroup.length) {\n                setGroupState(dropdownGroup);\n                dropdownItems.push(dropdownGroup);\n            }\n            // add divider width\n            if (groupIndex < _this.state.items.length - 1) {\n                totalWidth += dividerWidth;\n            }\n        });\n        return { items: items, dropdownItems: dropdownItems };\n    };\n    Toolbar.prototype.mounted = function () {\n        if (this.props.previewStyle === 'tab') {\n            this.props.eventEmitter.emit('changePreviewTabWrite', true);\n        }\n        // classify toolbar and dropdown toolbar after DOM has been rendered\n        this.setState(this.classifyToolbarItems());\n        this.appendTooltipToRoot();\n        this.resizeObserver.observe(this.refs.el);\n    };\n    Toolbar.prototype.updated = function (prevProps) {\n        var _a = this.props, editorType = _a.editorType, previewStyle = _a.previewStyle, eventEmitter = _a.eventEmitter;\n        var changedStyle = previewStyle !== prevProps.previewStyle;\n        var changedType = editorType !== prevProps.editorType;\n        if (changedStyle || changedType) {\n            // show or hide scrollSync button\n            toggleScrollSync(this.initialItems, this.hiddenScrollSync());\n            var newState = this.classifyToolbarItems();\n            if (changedStyle || (previewStyle === 'tab' && editorType === 'markdown')) {\n                eventEmitter.emit('changePreviewTabWrite');\n                newState.activeTab = 'write';\n            }\n            this.setState(newState);\n        }\n    };\n    Toolbar.prototype.beforeDestroy = function () {\n        window.removeEventListener('resize', this.handleResize);\n        this.resizeObserver.disconnect();\n        removeNode$1(this.tooltipRef.current);\n    };\n    Toolbar.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, previewStyle = _a.previewStyle, eventEmitter = _a.eventEmitter, editorType = _a.editorType;\n        var _b = this.state, popupInfo = _b.popupInfo, showPopup = _b.showPopup, activeTab = _b.activeTab, items = _b.items, dropdownItems = _b.dropdownItems;\n        var props = {\n            eventEmitter: eventEmitter,\n            tooltipRef: this.tooltipRef,\n            disabled: editorType === 'markdown' && previewStyle === 'tab' && activeTab === 'preview',\n            execCommand: this.execCommand,\n            setPopupInfo: this.setPopupInfo,\n        };\n        var toolbarStyle = previewStyle === 'tab' ? { borderTopLeftRadius: 0 } : null;\n        return html(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([\"\\n      <div class=\\\"\", \"\\\">\\n        <div\\n          class=\\\"\", \"\\\"\\n          style=\\\"display: \", \"\\\"\\n        >\\n          <\", \" tabs=\", \" activeTab=\", \" onClick=\", \" />\\n        </div>\\n        <div\\n          class=\\\"\", \"\\\"\\n          ref=\", \"\\n          style=\", \"\\n        >\\n          \", \"\\n          <\", \"\\n            item=\", \"\\n            items=\", \"\\n            ...\", \"\\n          />\\n        </div>\\n        <\", \"\\n          info=\", \"\\n          show=\", \"\\n          eventEmitter=\", \"\\n          hidePopup=\", \"\\n          execCommand=\", \"\\n        />\\n      </div>\\n    \"], [\"\\n      <div class=\\\"\", \"\\\">\\n        <div\\n          class=\\\"\", \"\\\"\\n          style=\\\"display: \",\n            \"\\\"\\n        >\\n          <\", \" tabs=\", \" activeTab=\", \" onClick=\", \" />\\n        </div>\\n        <div\\n          class=\\\"\", \"\\\"\\n          ref=\", \"\\n          style=\", \"\\n        >\\n          \",\n            \"\\n          <\", \"\\n            item=\", \"\\n            items=\", \"\\n            ...\", \"\\n          />\\n        </div>\\n        <\", \"\\n          info=\", \"\\n          show=\", \"\\n          eventEmitter=\", \"\\n          hidePopup=\", \"\\n          execCommand=\", \"\\n        />\\n      </div>\\n    \"])), cls('toolbar'), cls('md-tab-container'), editorType === 'wysiwyg' || previewStyle === 'vertical'\n            ? 'none'\n            : 'block', Tabs, this.tabs, activeTab, this.toggleTab, cls('defaultUI-toolbar'), function (el) { return (_this.refs.el = el); }, toolbarStyle, items.map(function (group, index) {\n            var _a;\n            return html(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([\"\\n              <\", \"\\n                group=\", \"\\n                hiddenDivider=\", \"\\n                setItemWidth=\", \"\\n                ...\", \"\\n              />\\n            \"], [\"\\n              <\", \"\\n                group=\", \"\\n                hiddenDivider=\", \"\\n                setItemWidth=\", \"\\n                ...\", \"\\n              />\\n            \"])), ToolbarGroup, group, index === items.length - 1 || ((_a = items[index + 1]) === null || _a === void 0 ? void 0 : _a.hidden), _this.setItemWidth, props);\n        }), DropdownToolbarButton, createToolbarItemInfo('more'), dropdownItems, props, Popup, popupInfo, showPopup, eventEmitter, this.hidePopup, this.execCommand);\n    };\n    return Toolbar;\n}(Component));\nvar templateObject_1$3, templateObject_2$2;\n\nvar ContextMenu = /** @class */ (function (_super) {\n    __extends$1(ContextMenu, _super);\n    function ContextMenu(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleClickDocument = function (ev) {\n            if (!closest(ev.target, \".\" + cls('context-menu'))) {\n                _this.setState({ pos: null });\n            }\n        };\n        _this.state = {\n            pos: null,\n            menuGroups: [],\n        };\n        _this.addEvent();\n        return _this;\n    }\n    ContextMenu.prototype.addEvent = function () {\n        var _this = this;\n        this.props.eventEmitter.listen('contextmenu', function (_a) {\n            var pos = _a.pos, menuGroups = _a.menuGroups;\n            _this.setState({ pos: pos, menuGroups: menuGroups });\n        });\n    };\n    ContextMenu.prototype.mounted = function () {\n        document.addEventListener('click', this.handleClickDocument);\n    };\n    ContextMenu.prototype.beforeDestroy = function () {\n        document.removeEventListener('click', this.handleClickDocument);\n    };\n    ContextMenu.prototype.getMenuGroupElements = function () {\n        var _this = this;\n        var _a = this.state, pos = _a.pos, menuGroups = _a.menuGroups;\n        return pos\n            ? menuGroups.reduce(function (acc, group) {\n                var menuItem = [];\n                group.forEach(function (_a) {\n                    var label = _a.label, _b = _a.className, className = _b === void 0 ? false : _b, disabled = _a.disabled, onClick = _a.onClick;\n                    var handleClick = function () {\n                        if (!disabled) {\n                            onClick();\n                            _this.setState({ pos: null });\n                        }\n                    };\n                    menuItem.push(html(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([\"\\n                <li\\n                  onClick=\", \"\\n                  class=\\\"menu-item\", \"\\\"\\n                  aria-role=\\\"menuitem\\\"\\n                >\\n                  <span class=\\\"\", \"\\\">\", \"</span>\\n                </li>\\n              \"], [\"\\n                <li\\n                  onClick=\", \"\\n                  class=\\\"menu-item\", \"\\\"\\n                  aria-role=\\\"menuitem\\\"\\n                >\\n                  <span class=\\\"\", \"\\\">\", \"</span>\\n                </li>\\n              \"])), handleClick, disabled ? ' disabled' : '', className, label));\n                });\n                acc.push(html(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([\"<ul class=\\\"menu-group\\\">\\n              \", \"\\n            </ul>\"], [\"<ul class=\\\"menu-group\\\">\\n              \", \"\\n            </ul>\"])), menuItem));\n                return acc;\n            }, [])\n            : [];\n    };\n    ContextMenu.prototype.render = function () {\n        var style = __assign$1({ display: this.state.pos ? 'block' : 'none' }, this.state.pos);\n        return html(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"<div class=\\\"\", \"\\\" style=\", \" aria-role=\\\"menu\\\">\\n      \", \"\\n    </div>\"], [\"<div class=\\\"\", \"\\\" style=\", \" aria-role=\\\"menu\\\">\\n      \", \"\\n    </div>\"])), cls('context-menu'), style, this.getMenuGroupElements());\n    };\n    return ContextMenu;\n}(Component));\nvar templateObject_1$2, templateObject_2$1, templateObject_3;\n\nvar Layout = /** @class */ (function (_super) {\n    __extends$1(Layout, _super);\n    function Layout(props) {\n        var _this = _super.call(this, props) || this;\n        _this.changeMode = function (editorType) {\n            if (editorType !== _this.state.editorType) {\n                _this.setState({ editorType: editorType });\n            }\n        };\n        _this.changePreviewStyle = function (previewStyle) {\n            if (previewStyle !== _this.state.previewStyle) {\n                _this.setState({ previewStyle: previewStyle });\n            }\n        };\n        _this.hide = function () {\n            _this.setState({ hide: true });\n        };\n        _this.show = function () {\n            _this.setState({ hide: false });\n        };\n        var editorType = props.editorType, previewStyle = props.previewStyle;\n        _this.state = {\n            editorType: editorType,\n            previewStyle: previewStyle,\n            hide: false,\n        };\n        _this.addEvent();\n        return _this;\n    }\n    Layout.prototype.mounted = function () {\n        var _a = this.props.slots, wwEditor = _a.wwEditor, mdEditor = _a.mdEditor, mdPreview = _a.mdPreview;\n        this.refs.wwContainer.appendChild(wwEditor);\n        this.refs.mdContainer.insertAdjacentElement('afterbegin', mdEditor);\n        this.refs.mdContainer.appendChild(mdPreview);\n    };\n    Layout.prototype.insertToolbarItem = function (indexList, item) {\n        this.toolbar.insertToolbarItem(indexList, item);\n    };\n    Layout.prototype.removeToolbarItem = function (name) {\n        this.toolbar.removeToolbarItem(name);\n    };\n    Layout.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, eventEmitter = _a.eventEmitter, hideModeSwitch = _a.hideModeSwitch, toolbarItems = _a.toolbarItems, theme = _a.theme;\n        var _b = this.state, hide = _b.hide, previewStyle = _b.previewStyle, editorType = _b.editorType;\n        var displayClassName = hide ? ' hidden' : '';\n        var editorTypeClassName = cls(editorType === 'markdown' ? 'md-mode' : 'ww-mode');\n        var previewClassName = cls('md') + \"-\" + previewStyle + \"-style\";\n        var themeClassName = cls([theme !== 'light', theme + \" \"]);\n        return html(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n      <div\\n        class=\\\"\", \"\", \"\", \"\\\"\\n        ref=\", \"\\n      >\\n        <\", \"\\n          ref=\", \"\\n          eventEmitter=\", \"\\n          previewStyle=\", \"\\n          toolbarItems=\", \"\\n          editorType=\", \"\\n        />\\n        <div\\n          class=\\\"\", \" \", \"\\\"\\n          ref=\", \"\\n        >\\n          <div class=\\\"\", \"\\\">\\n            <div\\n              class=\\\"\", \" \", \"\\\"\\n              ref=\", \"\\n            >\\n              <div class=\\\"\", \"\\\"></div>\\n            </div>\\n            <div\\n              class=\\\"\", \"\\\"\\n              ref=\", \"\\n            />\\n          </div>\\n        </div>\\n        \", \"\\n        <\", \" eventEmitter=\", \" />\\n      </div>\\n    \"], [\"\\n      <div\\n        class=\\\"\", \"\", \"\", \"\\\"\\n        ref=\", \"\\n      >\\n        <\", \"\\n          ref=\", \"\\n          eventEmitter=\", \"\\n          previewStyle=\", \"\\n          toolbarItems=\", \"\\n          editorType=\", \"\\n        />\\n        <div\\n          class=\\\"\", \" \", \"\\\"\\n          ref=\", \"\\n        >\\n          <div class=\\\"\", \"\\\">\\n            <div\\n              class=\\\"\", \" \", \"\\\"\\n              ref=\", \"\\n            >\\n              <div class=\\\"\", \"\\\"></div>\\n            </div>\\n            <div\\n              class=\\\"\", \"\\\"\\n              ref=\", \"\\n            />\\n          </div>\\n        </div>\\n        \",\n            \"\\n        <\", \" eventEmitter=\", \" />\\n      </div>\\n    \"])), themeClassName, cls('defaultUI'), displayClassName, function (el) { return (_this.refs.el = el); }, Toolbar, function (toolbar) { return (_this.toolbar = toolbar); }, eventEmitter, previewStyle, toolbarItems, editorType, cls('main'), editorTypeClassName, function (el) { return (_this.refs.editorSection = el); }, cls('main-container'), cls('md-container'), previewClassName, function (el) { return (_this.refs.mdContainer = el); }, cls('md-splitter'), cls('ww-container'), function (el) { return (_this.refs.wwContainer = el); }, !hideModeSwitch && html(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"<\", \" eventEmitter=\", \" editorType=\", \" />\"], [\"<\", \" eventEmitter=\", \" editorType=\", \" />\"])), Switch, eventEmitter, editorType), ContextMenu, eventEmitter);\n    };\n    Layout.prototype.addEvent = function () {\n        var eventEmitter = this.props.eventEmitter;\n        eventEmitter.listen('hide', this.hide);\n        eventEmitter.listen('show', this.show);\n        eventEmitter.listen('changeMode', this.changeMode);\n        eventEmitter.listen('changePreviewStyle', this.changePreviewStyle);\n    };\n    return Layout;\n}(Component));\nvar templateObject_1$1, templateObject_2;\n\n/**\n * ToastUI Editor\n * @extends ToastUIEditorCore\n */\nvar ToastUIEditor = /** @class */ (function (_super) {\n    __extends$1(ToastUIEditor, _super);\n    function ToastUIEditor(options) {\n        var _a;\n        var _this = _super.call(this, options) || this;\n        var layoutComp;\n        var destroy = render(_this.options.el, html(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        <\", \"\\n          ref=\", \"\\n          eventEmitter=\", \"\\n          slots=\", \"\\n          hideModeSwitch=\", \"\\n          toolbarItems=\", \"\\n          previewStyle=\", \"\\n          editorType=\", \"\\n          theme=\", \"\\n        />\\n      \"], [\"\\n        <\", \"\\n          ref=\", \"\\n          eventEmitter=\", \"\\n          slots=\", \"\\n          hideModeSwitch=\", \"\\n          toolbarItems=\", \"\\n          previewStyle=\", \"\\n          editorType=\", \"\\n          theme=\", \"\\n        />\\n      \"])), Layout, function (layout) { return (layoutComp = layout); }, _this.eventEmitter, _this.getEditorElements(), _this.options.hideModeSwitch, _this.options.toolbarItems, _this.options.previewStyle, _this.options.initialEditType, _this.options.theme));\n        _this.setMinHeight(_this.options.minHeight);\n        _this.setHeight(_this.options.height);\n        _this.defaultUI = {\n            insertToolbarItem: layoutComp.insertToolbarItem.bind(layoutComp),\n            removeToolbarItem: layoutComp.removeToolbarItem.bind(layoutComp),\n            destroy: destroy,\n        };\n        (_a = _this.pluginInfo.toolbarItems) === null || _a === void 0 ? void 0 : _a.forEach(function (toolbarItem) {\n            var groupIndex = toolbarItem.groupIndex, itemIndex = toolbarItem.itemIndex, item = toolbarItem.item;\n            _this.defaultUI.insertToolbarItem({ groupIndex: groupIndex, itemIndex: itemIndex }, item);\n        });\n        _this.eventEmitter.emit('loadUI', _this);\n        return _this;\n    }\n    /**\n     * Factory method for Editor\n     * @param {object} options Option for initialize TUIEditor\n     * @returns {object} ToastUIEditor or ToastUIEditorViewer\n     */\n    ToastUIEditor.factory = function (options) {\n        return options.viewer ? new ToastUIEditorViewer(options) : new ToastUIEditor(options);\n    };\n    /**\n     * add toolbar item\n     * @param {Object} indexInfo group index and item index of the toolbar item\n     * @param {string|Object} item toolbar item\n     */\n    ToastUIEditor.prototype.insertToolbarItem = function (indexInfo, item) {\n        this.defaultUI.insertToolbarItem(indexInfo, item);\n    };\n    /**\n     * Remove toolbar item\n     * @param {string} itemName toolbar item name\n     */\n    ToastUIEditor.prototype.removeToolbarItem = function (itemName) {\n        this.defaultUI.removeToolbarItem(itemName);\n    };\n    /**\n     * Destroy TUIEditor from document\n     */\n    ToastUIEditor.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.defaultUI.destroy();\n    };\n    return ToastUIEditor;\n}(ToastUIEditorCore));\nvar templateObject_1;\n\n/**\n * @fileoverview I18N for English\n * @author NHN Cloud FE Development Lab <dl_javascript@nhn.com>\n */\nToastUIEditorCore.setLanguage(['en', 'en-US'], {\n    Markdown: 'Markdown',\n    WYSIWYG: 'WYSIWYG',\n    Write: 'Write',\n    Preview: 'Preview',\n    Headings: 'Headings',\n    Paragraph: 'Paragraph',\n    Bold: 'Bold',\n    Italic: 'Italic',\n    Strike: 'Strike',\n    Code: 'Inline code',\n    Line: 'Line',\n    Blockquote: 'Blockquote',\n    'Unordered list': 'Unordered list',\n    'Ordered list': 'Ordered list',\n    Task: 'Task',\n    Indent: 'Indent',\n    Outdent: 'Outdent',\n    'Insert link': 'Insert link',\n    'Insert CodeBlock': 'Insert codeBlock',\n    'Insert table': 'Insert table',\n    'Insert image': 'Insert image',\n    Heading: 'Heading',\n    'Image URL': 'Image URL',\n    'Select image file': 'Select image file',\n    'Choose a file': 'Choose a file',\n    'No file': 'No file',\n    Description: 'Description',\n    OK: 'OK',\n    More: 'More',\n    Cancel: 'Cancel',\n    File: 'File',\n    URL: 'URL',\n    'Link text': 'Link text',\n    'Add row to up': 'Add row to up',\n    'Add row to down': 'Add row to down',\n    'Add column to left': 'Add column to left',\n    'Add column to right': 'Add column to right',\n    'Remove row': 'Remove row',\n    'Remove column': 'Remove column',\n    'Align column to left': 'Align column to left',\n    'Align column to center': 'Align column to center',\n    'Align column to right': 'Align column to right',\n    'Remove table': 'Remove table',\n    'Would you like to paste as table?': 'Would you like to paste as table?',\n    'Text color': 'Text color',\n    'Auto scroll enabled': 'Auto scroll enabled',\n    'Auto scroll disabled': 'Auto scroll disabled',\n    'Choose language': 'Choose language',\n});\n\nexport { ToastUIEditor as Editor, ToastUIEditorCore as EditorCore, ToastUIEditor as default };\n"],
  "mappings": "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IAAI,aAAa;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,KAAK;AAAA,EACL;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAMA;AAAA,EACN;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,IAAI;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,IAAI;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD;AAEA,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,eAAe;AAAA,EAC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",
  "names": ["found", "self", "map", "prop", "from", "text", "last", "index", "copy", "found", "slice", "sub", "target", "doc", "Node", "base", "i", "type", "nfa", "edge", "expr", "node", "states", "prop", "excl", "mark", "wrap", "top", "block", "part", "space", "index", "diff", "del", "from", "map", "doc", "slice", "parent", "gap", "found", "range", "target", "base", "joinable", "doc", "index", "slice", "from", "wrap", "matches", "top", "match", "type", "close", "last", "TransformError", "range", "target", "from", "found", "doc", "cls", "index", "text", "last", "map", "slice", "self", "prop", "Node", "target", "index", "from", "range", "off", "doc", "rect", "top", "closest", "caret", "target", "base", "self", "wrap", "text", "copy", "prop", "found", "preMatch", "matches", "mid", "empty", "code", "slice", "html", "block", "dom", "event", "handlers", "selectNode", "NodeType", "i", "oldOffset", "anchor", "tr", "sel", "from", "target", "prop", "html", "text", "chrome", "gecko", "mac", "ie", "code", "mac", "shift", "map", "copy", "prop", "range", "target", "empty", "range", "target", "index", "wrap", "range", "target", "setBlockType", "from", "doc", "empty", "mac", "from", "text", "RopeSequence", "from", "Leaf", "Append", "appendInner", "item", "map", "from", "last", "history", "redo", "d", "b", "__assign", "from", "target", "prop", "index", "cls", "text", "range", "item", "keys", "paragraph", "doc", "nodeSize", "matches", "top", "el", "found", "html", "reHTMLTag", "PopupWidget", "bottom", "rect", "_a", "Node", "Widget", "EditorBase", "widgetRules", "undo", "redo", "SpecManager", "task", "lineBackground", "markInfo", "Doc", "Mark", "BlockQuote", "isEmpty", "indent", "Paragraph", "deleteRange", "Text", "Heading", "CodeBlock", "Table", "ThematicBreak", "ListItem", "isList", "i", "toggleMark", "slice", "Strong", "Strike", "Emph", "Code", "Link", "TaskDelimiter", "Delimiter", "Meta", "MarkedText", "TableCell", "Html", "CustomBlock", "customBlock", "MdEditor", "handlers", "forEach", "cache", "code", "empty", "map", "copy", "replace", "encode_1", "encode$1", "NodeWalker", "BlockNode", "ListNode", "HeadingNode", "CodeBlockNode", "TableNode", "TableCellNode", "RefDefNode", "CustomBlockNode", "HtmlBlockNode", "LinkNode", "CodeNode", "CustomInlineNode", "InlineParser", "block", "link", "image", "tableCell", "table", "tableBody", "tableRow", "heading", "disallowedTags", "Parser", "last", "base", "diff", "comp", "ToastMark", "getChildrenText", "convertors", "Renderer", "apply", "freeze", "seal", "construct", "getGlobal", "_createTrustedTypesPolicy", "document", "window", "DOMPurify", "Element", "DOMParser", "getChildNodes", "getParentNode", "_parseConfig", "_checkValidNamespace", "_forceRemove", "_", "_removeAttribute", "_initDocument", "_createIterator", "_isClobbered", "_isNode", "_executeHook", "_sanitizeElements", "parentNode", "_isValidAttribute", "_sanitizeAttributes", "_sanitizeShadowDOM", "sanitizeHTML", "lang", "ratio", "MarkdownPreview", "findWrappingOutside", "findWrappingInside", "list", "listItem", "TableOffsetMap", "tableHead", "CellSelection", "para", "TableSelection", "Map", "I18n", "CustomBlockView", "ImageView", "CodeBlockView", "pre", "node", "content", "setBlockType", "BulletList", "outdent", "OrderedList", "split", "TableHead", "TableBody", "TableRow", "TableHeadCell", "TableBodyCell", "Image", "thematicBreak", "FrontMatter", "HTMLComment", "WysiwygEditor", "EventEmitter", "CommandManager", "codeBlock", "ToWwConvertorState", "ToMdConvertorState", "mark", "markConvertor", "Convertor", "toMdConvertors", "ToastUIEditorViewer", "frontMatter", "WwToDOMAdaptor", "run", "ScrollSync", "ToastUIEditorCore", "placeholder", "n", "h", "VNodeWalker", "VNode", "Component", "Switch", "ResizeObserverController", "observers", "ResizeObservation", "ResizeObserverEntry", "ResizeObserverSPI", "ResizeObserver", "HeadingPopupBody", "Tabs", "ImagePopupBody", "LinkPopupBody", "TablePopupBody", "CustomPopupBody", "execCommand", "Popup", "render", "ToolbarButtonComp", "CustomToolbarItemComp", "ToolbarGroup", "DropdownToolbarButtonComp", "Toolbar", "ContextMenu", "Layout", "editorType", "previewStyle", "ToastUIEditor", "destroy"]
}
