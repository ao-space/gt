{
  "version": 3,
  "sources": ["../../codemirror/addon/lint/lint.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n  var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain)\n      cm.getWrapperElement().appendChild(tt);\n    else\n      document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, conf, hasGutter) {\n    this.marked = [];\n    if (conf instanceof Function) conf = {getAnnotations: conf};\n    if (!conf || conf === true) conf = {};\n    this.options = {};\n    this.linterOptions = conf.options || {};\n    for (var prop in defaults) this.options[prop] = defaults[prop];\n    for (var prop in conf) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (conf[prop] != null) this.options[prop] = conf[prop];\n      } else if (!conf.options) {\n        this.linterOptions[prop] = conf[prop];\n      }\n    }\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  var defaults = {\n    highlightLines: false,\n    tooltips: true,\n    delay: 500,\n    lintOnChange: true,\n    getAnnotations: null,\n    async: false,\n    selfContain: null,\n    formatAnnotation: null,\n    onUpdateLinting: null\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    if (state.options.highlightLines) clearErrorLines(cm);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function clearErrorLines(cm) {\n    cm.eachLine(function(line) {\n      var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n      if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n    })\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, state.linterOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    clearMarks(cm);\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      // filter out duplicate messages\n      var message = [];\n      anns = anns.filter(function(item) { return message.indexOf(item.message) > -1 ? false : message.push(item.message) });\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n      // use original annotations[line] to show multiple messages\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1,\n                                                       options.tooltips));\n\n      if (options.highlightLines)\n        cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n      if (state.options.lintOnChange)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    startLinting(this);\n  });\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "e"]
}
